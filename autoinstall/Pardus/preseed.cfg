#_preseed_V1
#### Contents of the preconfiguration file (for pardus)

### Localization
# Preseeding only locale sets language, country and locale.
d-i debconf/language string en_US:en
d-i debian-installer/country string US
d-i debian-installer/fallbacklocale string en_US
d-i debian-installer/language string en_US:en
d-i languagechooser/locale string en
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us
d-i keyboard-configuration/variant select English (US)

### Network configuration
d-i netcfg/enable boolean true

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto
d-i netcfg/use_dhcp string true

# To set a different link detection timeout (default is 3 seconds).
# Values are interpreted as seconds.
d-i netcfg/link_wait_timeout string 10

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
d-i netcfg/dhcp_timeout string 60

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
d-i netcfg/dhcp_failed note

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string pardus
d-i netcfg/get_domain string unassigned-domain

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
# NTP server to use. The default is almost always fine here.
#d-i clock-setup/ntp-server string ntp.example.com
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us

### Account setup
# Root password encrypted using a crypt(3)  hash.
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password {{ vm_password_hash }}

{% if new_user is defined and new_user != 'root' %}
# To create a normal user account.
d-i passwd/user-fullname string {{ new_user }}
d-i passwd/username string {{ new_user }}
# Normal user's password encrypted using a crypt(3) hash.
d-i passwd/user-password-crypted password {{ vm_password_hash }}

# The user account will be added to some standard initial groups. To
# override that, use this.
d-i passwd/user-default-groups string root wheel
{% endif %}

### Partitioning
## Partitioning example
# Specify a disk to partition.
# For example, to use the first SCSI/SATA hard disk:
d-i partman-auto/disk string /dev/{{ boot_disk_name }}
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm

# You can define the amount of space that will be used for the LVM volume
# group. It can either be a size with its unit (eg. 20 GB), a percentage of
# free space or the 'max' keyword.
d-i partman-auto-lvm/guided_size string max

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
{% if firmware is defined and firmware == 'efi' %}
d-i partman-efi/non_efi_system boolean true

# Ensure the partition table is GPT - this is required for EFI
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
{% endif %}

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Default repository information (don't include codename data, d-i figures it
# out from what's available in the ISO)
#d-i mirror/country string manually
#d-i mirror/http/hostname string depo.pardus.org.tr
#d-i mirror/http/hostname seen false
#d-i mirror/http/directory string /pardus
#d-i mirror/http/proxy string
# Don't add any security and updates repo to avoid an upgrade during installation
# We might need these later, think about the following lines.
#d-i apt-setup/services-select multiselect
#d-i apt-setup/security_host string depo.pardus.org.tr
#d-i apt-setup/security_path string /guvenlik

### Apt setup
d-i apt-setup/use_mirror boolean false
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/cdrom/set-next boolean false
d-i apt-setup/cdrom/set-failed boolean false
d-i apt-setup/disable-cdrom-entries boolean true
d-i apt-setup/enable-source-repositories boolean true

# Disable upgrading while installation
d-i pkgsel/upgrade select none

### Package selection
#tasksel tasksel/first multiselect standard, web-server, kde-desktop
tasksel tasksel/first multiselect standard, desktop
tasksel tasksel/desktop multiselect xfce

# Individual additional packages to install
# There is no open-vm-tools-desktop openssh-server and cloud-init in CDROM
d-i pkgsel/include string perl

# Policy for applying updates. May be "none" (no automatic updates),
# "unattended-upgrades" (install security updates automatically), or
# "landscape" (manage system with Landscape).
d-i pkgsel/update-policy select none

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and should be included on the first CD/DVD.
popularity-contest popularity-contest/participate boolean false

### Boot loader installation
# Grub is the boot loader (for x86).

# This is fairly safe to set, it makes grub install automatically to the UEFI
# partition/boot record if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# Due notably to potential USB sticks, the location of the primary drive can
# not be determined safely in general, so this needs to be specified:
#d-i grub-installer/bootdev string /dev/sda
# To install to the primary device (assuming it is not a USB stick):
d-i grub-installer/bootdev string default

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# Shutdown after installation completes
d-i debian-installer/exit/poweroff boolean true

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

# This first command is run as early as possible, just after
# preseeding is read.
d-i preseed/early_command string \
    echo "Executing early command" >/dev/ttyS0; \
    cp -a /cdrom/{{ pre_install_script_file }} /root/{{ pre_install_script_file }}; \
    /bin/sh /root/{{ pre_install_script_file }} >/dev/ttyS0;

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
# The packages not available in CDROM will be installed from online repo.
d-i preseed/late_command string \
    echo "Executing late command" >/dev/ttyS0; \
    cp -a /cdrom/{{ post_install_script_file }} /target/root/{{ post_install_script_file }}; \
    in-target /bin/bash /root/{{ post_install_script_file }}; \
    echo "Dump installer log:"; \
    cat /var/log/syslog >/dev/ttyS0; \
    echo "{{ autoinstall_complete_msg }}" >/dev/ttyS0;
