# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Cleanup testing environment
- name: env_cleanup
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Set cleanup VM to False by default"
      ansible.builtin.set_fact:
        cleanup_vm: false
      when: cleanup_vm is undefined

    # Need to revert to base snapshot of target VM firstly, or removing portgroup would fail
    - name: "Revert to base snapshot then cleanup network testbed configurations"
      block:
        - include_tasks: ../common/vm_revert_snapshot.yml
          vars:
            snapshot_name: "{{ base_snapshot_name }}"
            skip_if_not_exist: true
          when:
            - base_snapshot_exists is defined
            - base_snapshot_exists | bool
        # Clean up router VM, vSwitch and portgroup
        - include_tasks: ../common/network_testbed_cleanup.yml
      when:
        - router_vm_deployed is defined
        - router_vm_deployed | bool

    - name: Cleanup new deployed VM
      block:
        - include_tasks: ../common/vm_set_power_state.yml
          vars:
            vm_power_state_set: 'powered-off'
        - include_tasks: ../common/vm_remove.yml
        - name: "Set VM cleaned flag is True"
          ansible.builtin.set_fact:
            vm_cleaned_up: true
      when:
        - cleanup_vm | bool
        - new_vm is defined and new_vm | bool

    - name: "Restore base snapshot for windows update installation"
      when:
        - win_update_snapshot_name is defined
        - win_update_snapshot_name
        - (vm_exists is defined and vm_exists)
      block:
        - name: "Revert to original base snapshot {{ win_update_snapshot_name }}"
          include_tasks: ../common/vm_revert_snapshot.yml
          vars:
            snapshot_name: "{{ win_update_snapshot_name }}"
        - name: "Remove the current base snapshot {{ base_snapshot_name }}"
          include_tasks: ../common/vm_remove_snapshot.yml
          vars:
            snapshot_name: "{{ base_snapshot_name }}"
          when: base_snapshot_exists
        - name: "Rename snapshot {{ win_update_snapshot_name }} to {{ base_snapshot_name }}"
          include_tasks: ../common/vm_rename_snapshot.yml
          vars:
            current_snapshot_name: "{{ win_update_snapshot_name }}"
            new_snapshot_name: "{{ base_snapshot_name }}"
