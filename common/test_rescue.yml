# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Below tasks will be executed when there is failure during test case running:
# 1. take screenshot of the current failure state,
# 2. get VM vmware.log file,
# 3. take snapshot of the current failure state,
# 4. or exit testing when parameter 'exit_testing_when_fail' is set to true.
#
- name: "Print failed test case"
  ansible.builtin.debug:
    msg: "Testcase: {{ current_testcase_name }} failed"

- name: "Check if current test case log folder exists"
  ansible.builtin.stat:
    path: "{{ current_test_log_folder }}"
  register: current_test_folder_result
  ignore_errors: true

- name: "Create current test case log folder"
  include_tasks: create_directory.yml
  vars:
    dir_path: "{{ current_test_log_folder }}"
    dir_mode: "0777"
  when: not current_test_folder_result.stat.exists

- name: "Collect VM's information"
  block:
    - name: "Get VM's config, guest and summary properties"
      include_tasks: vm_get_config.yml
      vars:
        property_list: ['config', 'guest', 'summary']

    - name: "Dump VM's config, guest and summary properties to a json file"
      ansible.builtin.copy:
        dest: "{{ current_test_log_folder }}/vm_properties.json"
        content: "{{ vm_config | to_nice_json }}"

    - name: "Take a screenshot at VM current state"
      include_tasks: vm_take_screenshot.yml
      vars:
        vm_screenshot_local_dir: "{{ current_test_log_folder }}"
        vm_screenshot_local_name: "screenshot_at_{{ current_testcase_index }}_{{ ansible_play_name }}.png"
        vm_screen_active: "{{ gosv_test_suite == 'linux' }}"

    - name: "Extract text from VM screenshot at failed test case {{ current_testcase_name }}"
      when:
        - tesseract_is_installed
        - vm_screenshot_local_path
      block:
        - name: "Extract text from screenshot file"
          include_tasks: extract_text_from_screenshot.yml
          vars:
            local_screenshot_path: "{{ vm_screenshot_local_path }}"

        - name: "Display extracted text from screenshot"
          ansible.builtin.debug:
            msg: "{{ text_in_screenshot }}"
          tags:
            - fail_message
          when: text_in_screenshot | length > 0

    - name: "Download VM's vmware.log"
      include_tasks: esxi_download_datastore_file.yml
      vars:
        src_datastore: "{{ datastore }}"
        src_file_path: "{{ vm_dir_name }}/vmware.log"
        dest_file_path: "{{ current_test_log_folder }}/vmware.log"
        download_file_fail_ignore: true
      when: vm_dir_name is defined and vm_dir_name

    - name: "Check Windows guest BSOD in vmware.log"
      when:
        - gosv_test_suite == 'windows'
        - datastore_file_download_success
      block:
        - name: "Look up Windows guest BSOD in vmware.log"
          ansible.builtin.set_fact:
            winbsod_in_vmware_log: "{{ lookup('file', datastore_file_download_result.dest) | regex_findall('.*WinBSOD:.*') }}"

        - name: "Detected Windows guest BSOD in vmware.log"
          ansible.builtin.debug:
            msg: "{{ winbsod_in_vmware_log }}"
          tags:
            - fail_message
          when: winbsod_in_vmware_log | length > 0

    - name: "Take a snapshot at VM current state"
      include_tasks: vm_take_snapshot.yml
      vars:
        snapshot_name: "{{ current_testcase_name }}_fail_{{ current_test_timestamp }}"
        dump_memory: true
        vm_take_snapshot_ignore_err: true
      when:
        - take_fail_snapshot is defined
        - take_fail_snapshot | bool
        - ansible_failed_task is defined
        - ansible_failed_task.name is defined
        - ansible_failed_task.name is not match('Skip testcase:')
  when:
    - vm_exists is defined
    - vm_exists | bool

- name: "Testing exit due to failure"
  ansible.builtin.fail:
    msg: "Exit testing because 'exit_testing_when_fail' is set to {{ exit_testing_when_fail }} in test case {{ current_testcase_name }}"
  when:
    - exit_testing_when_fail is defined
    - exit_testing_when_fail | bool
