# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Reconfigure VM CDROM
# Parameters:
#   cdrom_state: 'present' or 'absent'.
#   cdrom_type: 'iso', 'client' or 'none'.
#   cdrom_iso_file: must be set to the ISO file path in datastore when
#     'cdrom_type' set to 'iso.' in this format '[datastore] file_path/file.iso'
#   cdrom_controller_type: the CDROM controller type 'ide' or 'sata'.
#   cdrom_controller_num: the bus number of the controller CDROM attachs.
#   cdrom_unit_num: the unit number of CDROM device.
#
- name: "Check parameters for configuring CD/DVD drive device"
  ansible.builtin.assert:
    that:
      - cdrom_state is defined
      - cdrom_state in ['present', 'absent']
      - cdrom_type is undefined or cdrom_type in ['iso', 'client', 'none']
      - cdrom_controller_num is defined
      - cdrom_controller_num | int >= 0
      - cdrom_unit_num is defined
      - cdrom_unit_num | int >= 0
    fail_msg: >-
      At least one of parameters 'cdrom_state', 'cdrom_type', 'cdrom_controller_num', or 'cdrom_unit_num'
      is incorrect. The values of parameters are cdrom_state={{ cdrom_state | default('') }},
      cdrom_type={{ cdrom_type | default('') }}, cdrom_controller_num={{ cdrom_controller_num | default('') }},
      cdrom_unit_num={{ cdrom_unit_num | default('') }}.

- name: "Set default CDROM type to 'client'"
  ansible.builtin.set_fact:
    cdrom_type: 'client'
  when:
    - cdrom_state == 'present'
    - cdrom_type is undefined or not cdrom_type

- name: "Check ISO file is set"
  ansible.builtin.assert:
    that:
      - cdrom_iso_file is defined
      - cdrom_iso_file
    fail_msg: "'cdrom_iso_file' must be set to connect CD/DVD drive to an ISO file"
  when:
    - cdrom_state == 'present'
    - cdrom_type == 'iso'

- name: "Initialize the fact about auto answer enablement"
  ansible.builtin.set_fact:
    cdrom_config_auto_answer: false

- name: "Prepare for changing CD/DVD drive to client device"
  block:
    - name: "Get VM power state"
      include_tasks: vm_get_power_state.yml

    - name: "Set question auto answer for powered-on VM"
      block:
        - name: "Set question auto answer to force to disconnect CD/DVD drive"
          include_tasks: vm_set_extra_config.yml
          vars:
            vm_advanced_settings:
              - key: "cdrom.showIsoLockWarning"
                value: "FALSE"
              - key: "msg.autoanswer"
                value: "TRUE"

        - name: "Set fact that auto answer is enabled for disconnecting CD/DVD drive"
          ansible.builtin.set_fact:
            cdrom_config_auto_answer: true
      when: vm_power_state_get != "poweredOff"
  when:
    - cdrom_state == "present"
    - cdrom_type == "client"

- name: "Configure VM CDROM {{ cdrom_controller_type | default('sata') }}{{ cdrom_controller_num }}:{{ cdrom_unit_num }} to '{{ cdrom_type }}'"
  community.vmware.vmware_guest:
    hostname: "{{ vsphere_host_name }}"
    username: "{{ vsphere_host_user }}"
    password: "{{ vsphere_host_user_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ vsphere_host_datacenter }}"
    folder: "{{ vm_folder }}"
    name: "{{ vm_name }}"
    cdrom:
      - type: "{{ cdrom_type | default(omit) }}"
        iso_path: "{{ cdrom_iso_file | default(omit) }}"
        controller_type: "{{ cdrom_controller_type | default('sata') }}"
        controller_number: "{{ cdrom_controller_num }}"
        unit_number: "{{ cdrom_unit_num }}"
        state: "{{ cdrom_state | default(omit) }}"
  register: vm_config_cdrom_result

- name: "Display the result of reconfiguring VM CDROM"
  ansible.builtin.debug: var=vm_config_cdrom_result
  when: enable_debug

- name: "Remove question auto answer from VM's extra config"
  include_tasks: vm_set_extra_config.yml
  vars:
    vm_advanced_settings:
      - key: "cdrom.showIsoLockWarning"
        value: ""
      - key: "msg.autoanswer"
        value: ""
  when: cdrom_config_auto_answer
