# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get VM world ID on ESXi host
# Parameters:
#   vm_get_world_id_timeout: default value is 300 seconds
# Return:
#   vm_world_id
#
- name: Set fact of the getting VM world ID retry time
  ansible.builtin.set_fact:
    vm_get_world_id_timeout: "{{ vm_get_world_id_timeout | default(300) }}"
- ansible.builtin.debug:
    msg: "Getting VM world id in {{ vm_get_world_id_timeout }} seconds, will retry with an interval of 5 seconds"

- name: "Get VM '{{ vm_name }}' world id on ESXi host '{{ esxi_hostname }}'"
  ansible.builtin.shell: "esxcli network vm list | awk '/ {{ vm_name }} / {print $1}'"
  delegate_to: "{{ esxi_hostname }}"
  register: get_vm_world_id
  changed_when: false
  until: get_vm_world_id.stdout
  retries: "{{ ((vm_get_world_id_timeout | int) / 5) | int }}"
  delay: 5
  ignore_errors: true

- name: "Display the result of getting VM world ID"
  ansible.builtin.debug: var=get_vm_world_id
  when: enable_debug is defined and enable_debug

- name: "Check VM '{{ vm_name }}' world id"
  ansible.builtin.assert:
    that:
      - get_vm_world_id is defined
      - get_vm_world_id.stdout_lines is defined
      - get_vm_world_id.stdout_lines | length >= 1
      - get_vm_world_id.stdout_lines[0] is match('^\d+')
    fail_msg: "Failed to get VM '{{ vm_name }}' world id in {{ vm_get_world_id_timeout }} seconds."

- name: "Set fact of VM '{{ vm_name }}' world ID"
  ansible.builtin.set_fact:
    vm_world_id: "{{ get_vm_world_id.stdout_lines[0] }}"
- ansible.builtin.debug:
    msg: "Get VM '{{ vm_name }}' world ID: {{ vm_world_id }}"
