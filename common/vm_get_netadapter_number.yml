# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get the number of VM network adapters using vmware_guest_network module
# return the number of network adapters types: VMXNET2, VMXNET3, E1000, E1000E
#
- name: "Initialize the number of VM network adapters"
  ansible.builtin.set_fact:
    VMXNET2: 0
    VMXNET3: 0
    E1000: 0
    E1000E: 0
    MAC_ADDR: []
- include_tasks: vm_get_network_facts.yml
- name: "Set fact of the total number of VM network adapters"
  ansible.builtin.set_fact:
    vm_netadapter_num: "{{ vm_network_adapters | length }}"
- ansible.builtin.debug:
    msg: "Total number of VM network adapters: {{ vm_netadapter_num }}"

- name: "Set fact of the number of each VM network adapter type and the MAC address list"
  ansible.builtin.set_fact:
    VMXNET2: "{{ VMXNET2|int + 1 if item.value.device_type | lower == 'vmxnet2' else VMXNET2 }}"
    VMXNET3: "{{ VMXNET3|int + 1 if item.value.device_type | lower == 'vmxnet3' else VMXNET3 }}"
    E1000: "{{ E1000|int + 1 if item.value.device_type | lower == 'e1000' else E1000 }}"
    E1000E: "{{ E1000E|int + 1 if item.value.device_type | lower == 'e1000e' else E1000E }}"
    MAC_ADDR: "{{ MAC_ADDR + [item.value.mac_addr] }}"
  with_dict: "{{ vm_network_adapters }}"
  no_log: true
  when: vm_network_adapters | length >= 1

- name: Set fact of the dict of network adpater types and their number
  ansible.builtin.set_fact:
    vm_netadapter_num_dict: {'VMXNET2': "{{ VMXNET2 }}", 'VMXNET3': "{{ VMXNET3 }}", 'E1000': "{{ E1000 }}", 'E1000E': "{{ E1000E }}", 'total': "{{ vm_netadapter_num }}", 'MAC_ADDR': "{{ MAC_ADDR }}"}
- ansible.builtin.debug:
    msg: "Get the number of each network adapter type dict and MAC address list: {{ vm_netadapter_num_dict }} "
