# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get a primary IPv4 address for SSH connection
# Parameters:
#   vm_guest_mac_ipv4: A dictinoary of valid MAC-IPv4 addresses mappings found in guest OS
# Return:
#   vm_primary_mac: Mac address of the first connectable network interface
#   vm_primary_ip: IPv4 address of the first connectable network interface
#
- name: "Initialize VM primary IP for VM '{{ vm_name }}'"
  ansible.builtin.set_fact:
    vm_primary_ip: ""

- name: "Assert VM has valid IPv4 address for VM '{{ vm_name }}'"
  ansible.builtin.assert:
    that:
      - vm_guest_mac_ipv4 | length >= 1
    fail_msg: "Not found valid IPv4 address for VM '{{ vm_name }}'"

- name: "Display the VM MAC and IP address dictionary"
  ansible.builtin.debug: var=vm_guest_mac_ipv4

- name: "Get IP of VM '{{ vm_name }}' primary IP with MAC address {{ vm_primary_mac }}"
  ansible.builtin.set_fact:
    vm_primary_ip: "{{ vm_guest_mac_ipv4[vm_primary_mac] }}"
  when: vm_primary_mac is defined and vm_primary_mac in vm_guest_mac_ipv4.keys()

- name: "Set the only one network interface as the primary network interface of VM '{{ vm_name }}'"
  ansible.builtin.set_fact:
    vm_primary_mac: "{{ (vm_guest_mac_ipv4.keys() | list)[0] }}"
    vm_primary_ip: "{{ (vm_guest_mac_ipv4.values() | list)[0] }}"
  when:
    - not vm_primary_ip
    - vm_guest_mac_ipv4 | length == 1

- name: "Looking for the primary network interface of VM '{{ vm_name }}'"
  block:
    - name: "Set fact of network interfaces which will have network connection test"
      ansible.builtin.set_fact:
        test_vm_nics: "{{ vm_guest_mac_ipv4 | dict2items(key_name='mac', value_name='ip') }}"

    - name: "Display VM network interfaces to be tested"
      ansible.builtin.debug: var=test_vm_nics

    - name: "Test network interface is connectable or not"
      include_tasks: vm_test_nic.yml
      vars:
        vm_wait_connection_timeout: 300
      with_items: "{{ test_vm_nics }}"
      loop_control:
        loop_var: test_vm_nic
  when:
    - not vm_primary_ip
    - vm_guest_mac_ipv4 | length > 1

- name: "Assert VM has primary connectable IP"
  ansible.builtin.assert:
    that:
      - vm_primary_ip
    fail_msg: "Not found a connectable IP from {{ vm_guest_mac_ipv4.values() }}"
    success_msg: "Found VM primary network interface: MAC address is {{ vm_primary_mac }}, IP address is {{ vm_primary_ip }}"
