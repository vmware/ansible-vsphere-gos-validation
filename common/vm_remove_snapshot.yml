# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Remove specified VM snapshot or remove all snapshots of VM
# Parameters:
#   snapshot_remove_state: can be set to 'remove_all' or 'absent' (default)
#   snapshot_name:
#     if snapshot_remove_state is set to 'remove_all', then it's not required,
#     if snapshot_remove_state is set to 'absent', then it's required to pass an existing snapshot name
#
- name: "Remove snapshot on '{{ vm_name }}'"
  community.vmware.vmware_guest_snapshot:
    hostname: "{{ vsphere_host_name }}"
    username: "{{ vsphere_host_user }}"
    password: "{{ vsphere_host_user_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ vsphere_host_datacenter }}"
    folder: "{{ vm_folder }}"
    name: "{{ vm_name }}"
    state: "{{ snapshot_remove_state | default('absent') }}"
    snapshot_name: "{{ snapshot_name | default(omit) }}"
  register: task_result
- name: Display the result of remove snapshot
  ansible.builtin.debug: var=task_result
  when: enable_debug is defined and enable_debug

- name: "Check if the snapshot '{{ snapshot_name }}' is removed"
  when: snapshot_remove_state | default('absent') == 'absent'
  block:
    - name: "Get VM's snapshots"
      include_tasks: vm_get_snapshot_facts.yml

    - name: "Assert snapshot '{{ snapshot_name }}' not exist"
      ansible.builtin.assert:
        that:
          - item.name != snapshot_name
        fail_msg: "Failed to remove snapshot {{ snapshot_name }}"
      with_items: "{{ vm_snapshot_facts.guest_snapshots.snapshots }}"
      when: vm_snapshot_facts.guest_snapshots | length > 0
