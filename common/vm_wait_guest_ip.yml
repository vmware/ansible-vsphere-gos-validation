# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Wait VM guest IP address in guest info is the one specified by parameter 'wait_ipv4'.
# If 'wait_ipv4' is not defined, this task will wait for VM IP addresses are reported
# in guest info.
# Parameters:
#   wait_ipv4: the IP address to wait for in guest info
#   vm_get_ip_timeout(optional): timeout for retrying get VM IP addresses in guest info,
# the default value is 300 seconds.
#
- name: "Initialize the wait for IP address"
  ansible.builtin.set_fact:
    wait_ipv4: ""
  when: wait_ipv4 is undefined

- name: "Initialize the timeout seconds for getting VM IPv4 address"
  ansible.builtin.set_fact:
    vm_get_ip_timeout: 300
  when: vm_get_ip_timeout is undefined or not vm_get_ip_timeout

- name: "Wait for VMware Tools collecting guest IPv4 address"
  community.vmware.vmware_guest_info:
    hostname: "{{ vsphere_host_name }}"
    username: "{{ vsphere_host_user }}"
    password: "{{ vsphere_host_user_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ vsphere_host_datacenter }}"
    folder: "{{ vm_folder }}"
    name: "{{ vm_name }}"
    schema: "vsphere"
    properties: ['guest']
  retries: "{{ ((vm_get_ip_timeout | int) / 5) | int }}"
  register: vm_guestinfo
  ignore_errors: true
  until:
    - vm_guestinfo.instance.guest.toolsRunningStatus is defined
    - vm_guestinfo.instance.guest.toolsRunningStatus == "guestToolsRunning"
    - vm_guestinfo.instance.guest.net is defined
    - vm_guestinfo.instance.guest.net | map(attribute='ipAddress') | flatten | ansible.utils.ipv4
    - vm_guestinfo.instance.guest.ipAddress is defined
    - vm_guestinfo.instance.guest.ipAddress
    - vm_guestinfo.instance.guest.ipAddress | ansible.utils.ipv4
    - (vm_guestinfo.instance.guest.ipAddress in
       vm_guestinfo.instance.guest.net | map(attribute='ipAddress') | flatten | ansible.utils.ipv4)
    - ((not wait_ipv4) or
      (wait_ipv4 and wait_ipv4 == vm_guestinfo.instance.guest.ipAddress))

- name: "Check VMware Tools is running and collects guest IPv4 address successfully"
  ansible.builtin.assert:
    that:
      - vm_guestinfo.instance.guest.toolsRunningStatus is defined
      - vm_guestinfo.instance.guest.toolsRunningStatus == "guestToolsRunning"
      - vm_guestinfo.instance.guest.ipAddress is defined
      - vm_guestinfo.instance.guest.ipAddress
      - vm_guestinfo.instance.guest.ipAddress | ansible.utils.ipv4
      - (vm_guestinfo.instance.guest.ipAddress in
         vm_guestinfo.instance.guest.net | map(attribute='ipAddress') | flatten | ansible.utils.ipv4)
      - ((not wait_ipv4) or
        (wait_ipv4 and wait_ipv4 == vm_guestinfo.instance.guest.ipAddress))
    fail_msg:
      - "It's timed out for VMware Tools collecting guest IPv4 address in {{ vm_get_ip_timeout }} seconds."
      - "VMware Tools running status is '{{ vm_guestinfo.instance.guest.toolsRunningStatus | default() }}'."
      - "VM's IP address in guest info is '{{ vm_guestinfo.instance.guest.ipAddress | default() }}'."
      - "VM's all IP addresses in guest info are '{{ vm_guestinfo.instance.guest.net | default([]) | map(attribute='ipAddress') | flatten }}'."
    success_msg:
      - "Waiting for VM guest IPv4 address succeeded."
      - "VM's IP address in guest info is '{{ vm_guestinfo.instance.guest.ipAddress | default() }}'."
      - "VM's all IP addresses in guest info are {{ vm_guestinfo.instance.guest.net | default([]) | map(attribute='ipAddress') | flatten }}."
