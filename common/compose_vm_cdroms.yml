# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# This task will compose VM CDROMs used for create new VM and guest OS auto install.
# vm_cdroms:
#   - type: iso
#     iso_path: "{{ os_installation_iso_list[0] }}"
#     controller_type: "{{ cdrom_controller_type }}"
#     controller_number: 0
#     unit_number: 0
#   - type: iso
#     iso_path: "{{ transferred_unattend_iso }}"
#     controller_type: "{{ cdrom_controller_type }}"
#     controller_number: 0
#     unit_number: 1
#
- name: "Set VM CDROM attaching to SATA controller by default"
  ansible.builtin.set_fact:
    cdrom_controller_type: 'sata'
  when: >
    (cdrom_controller_type is undefined) or
    (not cdrom_controller_type) or
    (cdrom_controller_type | lower not in ['ide', 'sata'])

- include_tasks: esxi_check_delete_datastore_file.yml
  vars:
    file_in_datastore: "{{ item.split(']')[0].strip('[]') }}"
    file_in_datastore_path: "{{ item.split(']')[1].strip(' ') }}"
    file_in_datastore_ops: "file"
    file_in_datastore_ops_timeout: 600
  with_items: "{{ os_installation_iso_list }}"

- name: "Initialize variable of VM CDROMs list"
  ansible.builtin.set_fact:
    vm_cdroms: []

- name: "Set fact of loop list start and end values"
  ansible.builtin.set_fact:
    loop_start: 0
    loop_end: "{{ os_install_iso_list_len }}"
    ide_iso_list_len_limit: 4
  when: >
    (cdrom_controller_type | lower == 'ide' and boot_disk_controller | lower != 'ide') or
    (cdrom_controller_type | lower == 'sata' and boot_disk_controller | lower != 'sata')

- name: "Set fact of loop list start and end values"
  ansible.builtin.set_fact:
    loop_start: 1
    loop_end: "{{ os_install_iso_list_len | int + 1 }}"
    ide_iso_list_len_limit: 3
  when: >
    (cdrom_controller_type | lower == 'ide' and boot_disk_controller | lower == 'ide') or
    (cdrom_controller_type | lower == 'sata' and boot_disk_controller | lower == 'sata')

- name: "Handle IDE CDROM"
  block:
    - name: "Check os_installation_iso_list length"
      ansible.builtin.assert:
        that:
          - os_install_iso_list_len | int <= ide_iso_list_len_limit | int
        fail_msg: "The number of ISO files to be attached to IDE CDROMs is larger than '{{ ide_iso_list_len_limit }}', please set cdrom_controller_type parameter to 'sata'."
    - name: "Compose the VM CDROMs list"
      ansible.builtin.set_fact:
        vm_cdroms: "{{ vm_cdroms + [{'type': 'iso', 'iso_path': os_installation_iso_list[item] if loop_end | int == os_install_iso_list_len | int else os_installation_iso_list[item-1], 'controller_type': 'ide', 'controller_number': (item / 2) | int, 'unit_number': (item % 2) | int}] }}"
      loop: "{{ range(loop_start | int, loop_end | int) | list }}"
  when:
    - cdrom_controller_type | lower == 'ide'

- name: "Compose the VM CDROMs list"
  ansible.builtin.set_fact:
    vm_cdroms: "{{ vm_cdroms + [{'type': 'iso', 'iso_path': os_installation_iso_list[item] if loop_end | int == os_install_iso_list_len | int else os_installation_iso_list[item-1], 'controller_type': 'sata', 'controller_number': 0, 'unit_number': item}] }}"
  loop: "{{ range(loop_start | int, loop_end | int) | list }}"
  when:
    - cdrom_controller_type | lower == 'sata'

- name: "Display the generated VM CDROMs list"
  ansible.builtin.debug: var=vm_cdroms
