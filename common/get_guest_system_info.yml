# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get guest OS system info when it's not defined before
# Note:
#   For Debian 10.x and 11.x, its 'ansible_distribution_version' only shows major version,
# minor version can be retrieved from 'ansible_distribution_minor_version'.
#   For FreeBSD 11.4, there is no 'ansible_distribution_major_version' in guest_system_info,
# use version info in 'ansible_distribution_release'.
#   For Windows guest, there is no 'ansible_distribution_release' in guest_system_info,
# will display 'N/A'.
#
- name: "Initialize the facts of guest OS system info"
  ansible.builtin.set_fact:
    guest_os_ansible_distribution_ver: ''
    guest_os_ansible_distribution_major_ver: ''
    guest_os_ansible_distribution_minor_ver: ''

- name: "Get guest OS system info"
  include_tasks: get_system_info.yml
  vars:
    gos_info_filter:
      - 'ansible_architecture'
      - 'ansible_architecture2'
      - 'ansible_distribution*'
      - 'ansible_kernel'
      - 'ansible_os_family'
      - 'ansible_os_product_type'
      - 'ansible_os_installation_type'
      - 'ansible_pkg_mgr'
      - 'ansible_system'
      - 'ansible_hostname'
      - 'ansible_python_version'

- name: "Set facts of guest OS system info"
  ansible.builtin.set_fact:
    guest_os_ansible_distribution: "{{ guest_system_info.ansible_distribution | default('') }}"
    guest_os_ansible_system: "{{ guest_system_info.ansible_system | default('') | lower }}"
    guest_os_ansible_architecture: "{{ guest_system_info.ansible_architecture | default('') }}"
    guest_os_ansible_architecture2: "{{ guest_system_info.ansible_architecture2 | default('') }}"
    guest_os_ansible_distribution_ver: "{{ guest_system_info.ansible_distribution_version if guest_system_info.ansible_distribution != 'FreeBSD' else guest_system_info.ansible_kernel }}"
    guest_os_ansible_distribution_major_ver: "{{ guest_system_info.ansible_distribution_major_version if 'ansible_distribution_major_version' in guest_system_info else guest_system_info.ansible_distribution_release.split('-')[0].split('.')[0] }}"
    guest_os_ansible_distribution_minor_ver: |-
      {%- if guest_system_info.ansible_distribution_minor_version | default('') != '' -%}{{ guest_system_info.ansible_distribution_minor_version }}
      {%- elif guest_system_info.ansible_distribution_version.split('.') | length >= 2 -%}{{ guest_system_info.ansible_distribution_version.split('.')[1] }}
      {%- else -%}0{%- endif -%}
    guest_os_ansible_kernel: "{{ guest_system_info.ansible_kernel | default('') }}"
    guest_os_ansible_distribution_release: "{{ guest_system_info.ansible_distribution_release | default('') }}"
    guest_os_ansible_pkg_mgr: "{{ guest_system_info.ansible_pkg_mgr | default('') | lower }}"
    guest_os_family: "{{ guest_system_info.ansible_os_family | default('') }}"
    guest_os_product_type: "{{ guest_system_info.ansible_os_product_type | default('') }}"
    guest_os_hostname: "{{ guest_system_info.ansible_hostname | default('') }}"
    guest_os_installation_type: "{{ guest_system_info.ansible_os_installation_type | default('') }}"
    guest_os_python_version: "{{ guest_system_info.ansible_python_version | default('') }}"

- name: "Check guest OS distribution facts"
  ansible.builtin.assert:
    that:
      - guest_os_ansible_distribution
      - guest_os_ansible_distribution_ver
      - guest_os_ansible_distribution_major_ver
      - guest_os_family
      - guest_os_ansible_kernel
      - guest_os_ansible_architecture
    fail_msg: "At least one of the guest OS distribution facts is empty, please check it."

- name: "Update guest OS distribution facts for {{ guest_os_ansible_distribution }}"
  ansible.builtin.set_fact:
    guest_os_ansible_pkg_mgr: 'dnf'
    guest_os_ansible_distribution_ver: "{{ guest_os_ansible_distribution_ver  | regex_replace('V', '', ignorecase=True) }}"
    guest_os_ansible_distribution_major_ver:  "{{ guest_os_ansible_distribution_major_ver | regex_replace('V', '', ignorecase=True) | int }}"
  when: 
    - guest_os_ansible_distribution == "Kylin Linux Advanced Server"
    - guest_os_ansible_distribution_major_ver | regex_replace('V', '', ignorecase=True) | int >= 10 
    - (not guest_os_ansible_pkg_mgr) or guest_os_ansible_pkg_mgr == 'unknown'
