# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get guest system info when it's not defined before
# Note:
#   For FreeBSD 11.4, there is no 'ansible_distribution_major_version' in guest_system_info,
# use version info in 'ansible_distribution_release'.
#   For Windows guest, there is no 'ansible_distribution_release' in guest_system_info,
# will display 'N/A'.
#
- block:
    - include_tasks: get_system_info.yml
      vars:
        filter: "ansible_*"

    - name: "Set facts of guest OS system info"
      set_fact:
        guest_os_ansible_distribution: "{{ guest_system_info.ansible_distribution }}"
        guest_os_ansible_system: "{{ guest_system_info.ansible_system }}"
        guest_os_ansible_architecture: "{{ guest_system_info.ansible_architecture }}"
        guest_os_ansible_distribution_ver: "{{ guest_system_info.ansible_distribution_version if guest_system_info.ansible_distribution != 'FreeBSD' else guest_system_info.ansible_kernel }}"
        guest_os_ansible_distribution_major_ver: "{{ guest_system_info.ansible_distribution_major_version if 'ansible_distribution_major_version' in guest_system_info else guest_system_info.ansible_distribution_release.split('-')[0].split('.')[0] }}"
        guest_os_ansible_distribution_minor_ver: "{{ guest_system_info.ansible_distribution_version.split('.')[1] if guest_system_info.ansible_distribution_version.split('.') | length >= 2 else 0 }}"
        guest_os_ansible_kernel: "{{ guest_system_info.ansible_kernel }}"
        guest_os_ansible_distribution_release: "{{ guest_system_info.ansible_distribution_release if 'ansible_distribution_release' in guest_system_info else 'N/A' }}"
        guest_os_ansible_pkg_mgr: "{{ guest_system_info.ansible_pkg_mgr if 'ansible_pkg_mgr' in guest_system_info else 'N/A' }}"
        guest_os_family: "{{ guest_system_info.ansible_os_family if 'ansible_os_family' in guest_system_info else '' }}"

    # Get Debian OS version from /etc/debian_version
    - block:
        - name: "Get Debian version"
          command: cat /etc/debian_version
          register: debian_version_result
          delegate_to: "{{ vm_guest_ip }}"

        - name: "Update guest OS distribution version"
          set_fact:
            guest_os_ansible_distribution_ver: "{{ debian_version_result.stdout }}"
            guest_os_ansible_distribution_minor_ver: "{{ debian_version_result.stdout.split('.')[-1] }}"
          when: debian_version_result.stdout is defined and debian_version_result.stdout
      when: guest_os_ansible_distribution == "Debian"

    - name: "Set OS family for {{ guest_os_ansible_distribution }} to RedHat"
      set_fact:
        guest_os_family: "RedHat"
      when: guest_os_ansible_distribution in ["RedHat", "CentOS", "OracleLinux", "Rocky", "Amazon", "Fedora"]

    - name: "Print guest OS information"
      debug:
        msg:
          - "Guest OS: {{ guest_os_ansible_distribution }}"
          - "Guest OS type: {{ guest_os_ansible_system }}"
          - "Guest OS arch: {{ guest_os_ansible_architecture }}"
          - "Guest OS major version: {{ guest_os_ansible_distribution_major_ver }}"
          - "Guest OS minor version: {{ guest_os_ansible_distribution_minor_ver }}"
          - "Guest OS version: {{ guest_os_ansible_distribution_ver }}"
          - "Guest OS kernel: {{ guest_os_ansible_kernel }}"
          - "Guest OS release: {{ guest_os_ansible_distribution_release }}"
          - "Guest OS family: {{ guest_os_family }}"

    - name: "Set fact that ansible system information about guest OS has been retrieved"
      set_fact:
        guest_os_system_info_retrieved: True
  when: guest_os_system_info_retrieved is undefined or not guest_os_system_info_retrieved
