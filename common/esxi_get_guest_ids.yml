# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get all supported guest IDs for a hardware version on ESXi server
# Parameter:
#   esxi_hardware_version: The hardware version on ESXi server, e.g. 13, 14, 15, etc.
# Return:
#   esxi_guest_ids: A list of all supported guest IDs for hardware version

- name: "Check esxi_hardware_version is set with valid value"
  ansible.builtin.assert:
    that:
      - esxi_hardware_version is defined
      - esxi_hardware_version is match('^\d+')
    fail_msg: "Incorrect hardware version '{{ esxi_hardware_version }}'"

- name: "Initialize ESXi supported guest IDs with hardware version {{ esxi_hardware_version }}"
  ansible.builtin.set_fact:
    esxi_guest_ids: []

- name: "Get ESXi server supported hardware versions"
  community.vmware.vmware_vm_config_option:
    hostname: "{{ vsphere_host_name }}"
    username: "{{ vsphere_host_user }}"
    password: "{{ vsphere_host_user_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ vsphere_host_datacenter }}"
    esxi_hostname: "{{ esxi_hostname }}"
    get_guest_os_ids: true
    hardware_version: "vmx-{{ esxi_hardware_version }}"
  register: get_guest_os_ids_result
  ignore_errors: true

- name: "Set fact of ESXi supported guest IDs for hardware version {{ esxi_hardware_version }}"
  ansible.builtin.set_fact:
    esxi_guest_ids: "{{ get_guest_os_ids_result.instance | dict2items | map(attribute='value') | flatten }}"
  when:
    - get_guest_os_ids_result is defined
    - get_guest_os_ids_result.instance is defined
    - get_guest_os_ids_result.instance | length > 0

- block:
    - name: "Initialize variables for getting hardware version supported guest IDs"
      ansible.builtin.set_fact:
        vm_config_option_esx_hw: "/etc/vmware/hostd/env/vmconfigoption-esx-hw{{ esxi_hardware_version }}.xml"
        vm_default_config_xpath: "/ConfigRoot/ConfigurationOption/guestOSDescriptor/e/id"

    - name: "Get hardware version {{ esxi_hardware_version }} supported guest IDs on ESXi server"
      xml:
        path: "{{ vm_config_option_esx_hw }}"
        xpath: "{{ vm_default_config_xpath }}"
        content: text
        pretty_print: true
      delegate_to: "{{ esxi_hostname }}"
      register: guest_os_desc_ids_result

    - name: "Set fact of ESXi supported guest IDs for hardware version {{ esxi_hardware_version }}"
      ansible.builtin.set_fact:
        esxi_guest_ids: "{{ guest_os_desc_ids_result.matches | map(attribute='id') | list }}"
  when: >
    get_guest_os_ids_result is undefined or
    get_guest_os_ids_result.failed

- name: "Print ESXi server supported guest IDs on hardware version {{ esxi_hardware_version }}"
  ansible.builtin.debug: var=esxi_guest_ids
