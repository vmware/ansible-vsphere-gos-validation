# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Wait for a checkpoint in VM's log file. If fail, collect information from
# VM screenshot and log file
# Parameters:
#   wait_checkpoint_name: The checkpoint name, which must be: secureboot,
#     autoinstall_start, or autoinstall_complete.
#   wait_checkpoint_log_file: The log file name to wait for the checkpoint,
#     e.g. vmware.log or serial port file log.
#   wait_checkpoint_msg: The checkpoint message to wait in log file
#     which could be vmware.log or serial port file.
#   wait_checkpoint_retires (optional): Retry count for waiting the checkpoint.
#     Default is 10.
#   wait_checkpoint_delay (optional): The delay seconds for retry. Default is 30.
#
- name: "Validate the checkpoint name"
  ansible.builtin.assert:
    that:
      - wait_checkpoint_name is defined
      - wait_checkpoint_name in ['secureboot',
                                 'autoinstall_start',
                                 'autoinstall_complete']
      - wait_checkpoint_log_file is defined
      - wait_checkpoint_log_file
      - wait_checkpoint_msg is defined
      - wait_checkpoint_msg
    fail_msg: >-
      Parameters 'wait_checkpoint_name' must be set to 'secureboot', 'autoinstall_start',
      or 'autoinstall_complete'; 'wait_checkpoint_log_file' and 'wait_checkpoint_msg'
      must be set with VM's log and the message to check.

- name: "Initialize the fact of waited checkpoint result and error message list"
  ansible.builtin.set_fact:
    checkpoint_success: false
    checkpoint_msg_list: []

- name: "Wait for checkpoint message in VM log"
  include_tasks: vm_wait_log_msg.yml
  vars:
    vm_wait_log_name: "{{ wait_checkpoint_log_file }}"
    vm_wait_log_msg: "{{ wait_checkpoint_msg }}"
    vm_wait_log_retries: "{{ wait_checkpoint_retires | default(10) }}"
    vm_wait_log_delay: "{{ wait_checkpoint_delay | default(30) }}"
    vm_wait_log_ignore_errors: true
    vm_wait_log_hide_output: true

- name: "Set facts of waited checkpoint result and message list"
  ansible.builtin.set_fact:
    checkpoint_success: "{{ vm_wait_log_msg_list | length > 0 }}"
    checkpoint_msg_list: "{{ vm_wait_log_msg_list }}"

- name: "Extract information for triage at checkpoint failure"
  when: not checkpoint_success | bool
  block:
    - name: "Initialize facts extracted from VM screenshot and log"
      ansible.builtin.set_fact:
        checkpoint_errors: []

    - name: "Collect serial port log"
      include_tasks: collect_serial_port_log.yml

    - name: "Extract errors from serial port file"
      when:
        - vm_serial_file_local_path is defined
        - vm_serial_file_local_path
      block:
        - name: "Set fact of serial port file local path for checkpoint {{ wait_checkpoint_name }}"
          ansible.builtin.set_fact:
            checkpoint_serial_file_local_path: "{{ current_test_log_folder }}/serial_at_{{ wait_checkpoint_name }}.log"

        - name: "Rename serial port file at local"
          ansible.builtin.shell: "mv {{ vm_serial_file_local_path }} {{ checkpoint_serial_file_local_path }}"

        - name: "Extract errors from VM serial port file"
          include_tasks: extract_errors_from_log.yml
          vars:
            local_log_path: "{{ checkpoint_serial_file_local_path }}"

        - name: "Set fact of extracted errors from VM serial port file"
          ansible.builtin.set_fact:
            checkpoint_errors: "{{ checkpoint_errors + errors_in_log }}"
          when: errors_in_log | length > 0

    - name: "VM deployment failed at waiting for log message '{{ wait_checkpoint_msg }}'"
      ansible.builtin.fail:
        msg: '{{ checkpoint_errors }}'
