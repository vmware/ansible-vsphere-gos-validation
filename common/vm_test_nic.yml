# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Test given IPv4 address is pingable and connectable
# Parameters:
#   test_vm_nic: network interface in VM for testing ssh connection
#     in format of {key: mac address, value: ip address}
#   skip_if_primary_ip_found (optional): skip testing if VM primary
#     connectable ip is found
# Return:
#   test_vm_nic_result: a dict of IP address testing result, dict key
#     is the mac address in test_vm_nic, value is "succeed" or "fail"
#   vm_primary_mac: the first IPv4 address which is connectable
#   vm_primary_ip: the first IPv4 address which is connectable
#
- name: "Initialize IP address check result for VM '{{ vm_name }}'"
  set_fact:
    test_vm_nic_result: {}
  when: test_vm_nic_result is undefined

- block:
    - name: "Set fact of the network interface MAC and IP address"
      set_fact:
        test_vm_mac: "{{ test_vm_nic.key }}"
        test_vm_ip: "{{ test_vm_nic.value }}"

    - block:
        - include_tasks: vm_wait_connection.yml
          vars:
            vm_guest_ip: "{{ test_vm_ip }}"

        - include_tasks: add_host_in_memory_inventory.yml
          vars:
            add_host_in_memory_inventory_ip: "{{ test_vm_ip }}"
            add_host_in_memory_inventory_gp: "vm_ips_for_ssh_test"
            add_host_in_memory_inventory_user: "{{ vm_username }}"
            add_host_in_memory_inventory_pwd: "{{ vm_password }}"
            add_host_in_memory_inventory_python: "{{ vm_python | default('auto') }}"

        - name: "Test SSH connection with IP {{ test_vm_ip }} of VM '{{ vm_name }}'"
          setup:
            filter: "ansible_all_ipv4_addresses"
          register: test_ssh_connection
          delegate_to: "{{ test_vm_ip }}"
        - name: Display the target VM connection test result
          debug: var=test_ssh_connection
          when: enable_debug is defined and enable_debug

        - name: "Check IP address '{{ test_vm_ip }}' in ansible_all_ipv4_addresses"
          assert:
            that:
              - not test_ssh_connection.failed
              - test_ssh_connection.ansible_facts is defined
              - test_ssh_connection.ansible_facts.ansible_all_ipv4_addresses is defined
              - test_vm_ip in test_ssh_connection.ansible_facts.ansible_all_ipv4_addresses

        - name: "SSH connection to '{{ test_vm_ip }}' succeeded"
          set_fact:
            test_vm_nic_result: "{{ test_vm_nic_result | combine({test_vm_mac: 'succeed'}) }}"
            vm_primary_mac: "{{ test_vm_mac }}"
            vm_primary_ip: "{{ test_vm_ip }}"
      rescue:
        # Failed at waiting connection, testing connection or assertion
        - name: "SSH connection to IP {{ test_vm_ip }} of VM '{{ vm_name }}' failed"
          set_fact:
            test_vm_nic_result: "{{ test_vm_nic_result | combine({test_vm_mac: 'fail'}) }}"
  when: >
    (skip_if_primary_ip_found is undefined) or
    (not skip_if_primary_ip_found) or
    ((skip_if_primary_ip_found) and
     ((vm_primary_ip is undefined) or
     (not vm_primary_ip)))
