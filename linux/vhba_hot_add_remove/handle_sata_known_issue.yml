# Copyright 2025 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Handle SATA known issues
#
# Pardus 21 XFCE can't detect SATA disk change after hot-remove
# Work around it by updating the disk state
- name: "Handle SATA known issue on {{ vm_guest_os_distribution }}"
  when:
    - guest_os_ansible_distribution == 'Pardus GNU/Linux'
    - guest_os_ansible_distribution_major_ver | int == 21
    - guest_os_edition == 'XFCE'
    - wait_device_state | lower == 'absent'
  block:
    - name: "Known issue - workaround of detecting SATA device changes on {{ vm_guest_os_distribution }}"
      ansible.builtin.debug:
        msg:
          - "Guest OS can't detect hot removed disk attached to SATA controller. Ignore this known issue."
          - "Update the hot removed disk state as a workaround."
      tags:
        - known_issue

    - name: "Get ansible facts of devices in guest OS"
      include_tasks: ../../common/get_system_info.yml
      vars:
        filter: "ansible_devices"

    - name: "Set fact of removed disk {{ wait_device_name }}"
      ansible.builtin.set_fact:
        guest_ansible_device: >
          {{
            guest_system_info.ansible_devices |
            dict2items |
            selectattr('key', 'equalto', wait_device_name) |
            items2dict
          }}

    - name: "Rescan the deleted SATA disk '{{ wait_device_name }}'"
      ansible.builtin.shell: "echo 1 > /sys/block/{{ wait_device_name }}/device/delete"
      ignore_errors: true
      delegate_to: "{{ vm_guest_ip }}"
      when:
        - guest_ansible_device is defined
        - guest_ansible_device[wait_device_name] is defined
        - guest_ansible_device[wait_device_name].size is defined
        - guest_ansible_device[wait_device_name].size.endswith('GB')
        - guest_ansible_device[wait_device_name].size.split()[0] | int == new_disk_size_gb
