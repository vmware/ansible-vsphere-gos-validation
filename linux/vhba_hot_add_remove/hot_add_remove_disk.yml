# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set new disk size in GB"
  ansible.builtin.set_fact:
    new_disk_size_gb: 1

- include_tasks: ../../common/vm_hot_add_ctrl_disk.yml
  vars:
    disk_controller_type: "{{ new_disk_ctrl_type }}"
    disk_size_gb: "{{ new_disk_size_gb }}"
    ctrl_number: "{{ new_ctrl_number }}"
    unit_number: "{{ new_unit_number }}"
  when: add_new_controller

- include_tasks: ../../common/vm_hot_add_remove_disk.yml
  vars:
    disk_operation: 'present'
    disk_controller_type: "{{ new_disk_ctrl_type }}"
    disk_size_gb: "{{ new_disk_size_gb }}"
    ctrl_number: "{{ new_ctrl_number }}"
    unit_number: "{{ new_unit_number }}"
  when: not add_new_controller

- include_tasks: wait_device_list_changed.yml
  vars:
    device_list_before_change: "{{ guest_disk_list_before_hotadd }}"
    wait_device_state: "present"

- name: "Get guest device list after hot add"
  include_tasks: ../utils/get_device_list.yml
  vars:
    guest_device_type: "disk"

- name: "Set the fact of guest device list after hot add"
  ansible.builtin.set_fact:
    guest_disk_list_after_hotadd: "{{ guest_device_list }}"

- name: "Check new disk is recognized by guest OS"
  ansible.builtin.assert:
    that:
      - guest_disk_list_after_hotadd | difference(guest_disk_list_before_hotadd) | length == 1
    fail_msg: "Guest OS failed to recognize the new hot-added {{ new_disk_ctrl_type }} disk"

- name: "Print guest disk list after hot add"
  ansible.builtin.debug: var=guest_disk_list_after_hotadd

- name: "Set fact of the new guest disk info"
  ansible.builtin.set_fact:
    new_guest_disk_info: "{{ (guest_disk_list_after_hotadd | difference(guest_disk_list_before_hotadd))[0] }}"

- name: "Print the new disk info"
  ansible.builtin.debug: var=new_guest_disk_info

- name: "Check the new disk name, size and UUID"
  ansible.builtin.assert:
    that:
      - new_guest_disk_info.name is defined
      - new_guest_disk_info.name
      - new_guest_disk_info.size is defined
      - (new_guest_disk_info.size | int) / 1024 / 1024 / 1024 == new_disk_size_gb
    fail_msg: "The new disk '{{ new_guest_disk_info }}' has incorrect information"

- name: "Create new partition on the new disk {{ new_guest_disk_info.name }}"
  include_tasks: ../utils/create_disk_partition.yml
  vars:
    disk_name: "{{ new_guest_disk_info.name }}"
    partition_fstype: "ext4"

- name: "Set fact of new partition name and device path"
  ansible.builtin.set_fact:
    new_partition_name: "{{ partition_name }}"
    new_partition_device_path: "{{ partition_device_path }}"
    new_partition_fstype: "ext4"
    new_partition_uuid: "{{ partition_uuid }}"

- name: "Test disk I/O on new disk {{ new_guest_disk_info.name }}"
  include_tasks: test_disk_io.yml
  vars:
    test_disk_name: "{{ new_guest_disk_info.name }}"

# After reboot disk boot order might be changed, but at now
# community.vmware.vmware_guest_boot_info can't get the boot order info.
# So comment this out until boot disk reordering is resolved.
#- name: "Test file read/write on new partition {{ new_partition_device_path }}"
#  include_tasks: test_file_read_write.yml
#  vars:
#    test_partition_name: "{{ new_partition_name }}"
#    test_partition_uuid: "{{ new_partition_uuid }}"
#    test_partition_device_path: "{{ new_partition_device_path }}"
#    test_partition_fstype: "{{ new_partition_fstype }}"

- include_tasks: ../../common/vm_hot_add_remove_disk.yml
  vars:
    disk_operation: 'absent'
    ctrl_number: "{{ new_ctrl_number }}"
    unit_number: "{{ new_unit_number }}"
    disk_controller_type: "{{ new_disk_ctrl_type }}"

- include_tasks: wait_device_list_changed.yml
  vars:
    device_list_before_change: "{{ guest_disk_list_after_hotadd }}"
    wait_device_name: "{{ new_guest_disk_info.name }}"
    wait_device_state: "absent"

- name: "Get guest device list after hot add"
  include_tasks: ../utils/get_device_list.yml
  vars:
    guest_device_type: "disk"

- name: "Set the fact of guest device list after hot add"
  ansible.builtin.set_fact:
    guest_disk_list_after_hotremove: "{{ guest_device_list }}"

- name: "Check new disk is removed from guest OS"
  ansible.builtin.assert:
    that:
      - guest_disk_list_after_hotremove | difference(guest_disk_list_before_hotadd) | length == 0
    fail_msg: "After disk hot-remove, the Guest OS still can see it"
