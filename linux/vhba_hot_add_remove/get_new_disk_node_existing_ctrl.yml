# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set fact of SCSI controller type name mapping"
  set_fact:
    controller_name_map:
      paravirtual: 'VMware paravirtual SCSI'
      lsilogic: 'LSI Logic'
      lsilogicsas: 'LSI Logic SAS'
      sata: 'AHCI'
      nvme: 'NVME'
- name: "Print the target controller type name"
  debug: var=controller_name_map[new_disk_ctrl_type]

- include_tasks: ../../common/vm_get_disk_controller_facts.yml

- name: "Initialize the disk node info on existing '{{ new_disk_ctrl_type }}' controller"
  set_fact:
    new_ctrl_number: "0"
    found_existing_ctrl: ""
    new_disk_ctrl_facts: "{{ disk_controller_facts.disk_controller_data[new_ctrl_type] }}"
    total_existing_disks: 0

- name: "Look for existing '{{ new_disk_ctrl_type }}' controller"
  set_fact:
    new_ctrl_number: "{{ new_disk_ctrl_facts[item].controller_busnumber }}"
    found_existing_ctrl: "{{ new_disk_ctrl_facts[item] }}"
  when: new_disk_ctrl_facts[item].controller_disks_devicekey | length < 16
  with_items: "{{ new_disk_ctrl_facts }}"

- name: "Found an existing '{{ new_disk_ctrl_type }}' controller"
  debug: var=found_existing_ctrl

- block:
    - block:
        - include_tasks: ../../common/vm_get_disk_facts.yml
    
        - name: "Get all disks attached to {{ found_existing_ctrl.controller_label }}"
          set_fact:
            existing_disks: "{{ vm_guest_disk_facts.guest_disk_info.values() | selectattr('controller_key', 'equalto', found_existing_ctrl.controller_devicekey) }}"

        - name: "Get all occupied disk unit numbers"
          set_fact:
            existing_disk_unit_numbers: "{{ existing_disks | map(attribute='unit_number') | list }}"
      when: new_disk_ctrl_type != 'sata'

    - block:
        - include_tasks: ../../common/vm_get_devices_with_ctrl_key.yml
          vars:
            device_controller_key: "{{ found_existing_ctrl.controller_devicekey }}"
    
        - name: "Get all devices attached to {{ found_existing_ctrl.controller_label }}"
          set_fact:
            existing_disks: "{{ device_list_with_ctrl_key }}"

        - name: "Get all occupied disk unit numbers"
          set_fact:
            existing_disk_unit_numbers: "{{ existing_disks | map(attribute='unitNumber') | list }}"
      when: new_disk_ctrl_type == 'sata'

    - name: "Set the new disk controller unit number"
      set_fact:
        new_unit_number: "{{ range(0, 16) | difference(existing_disk_unit_numbers) | min }}"
        total_existing_disks:  "{{ existing_disk_unit_numbers | length }}"
    - debug:
        msg:
          - "Set new_ctrl_number: {{ new_ctrl_number }}"
          - "Set new_unit_number: {{ new_unit_number }}"
  when: found_existing_ctrl
