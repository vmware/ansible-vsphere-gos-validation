# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Wait for a device state is present or absent
# Parameters:
#   wait_device_state: The state of device: 'present' for new added device, and
#     'absent' for removed device.
#   wait_device_count: The expected devices count after device is present or absent.
#   wait_device_name: The devices name which should be absent.
#     Required when wait_device_state is absent.
#
- name: "Check wait_device_state is correct"
  ansible.builtin.assert:
    that:
      - wait_device_state is defined
      - wait_device_state | lower in ['present', 'absent']
    fail_msg: "Invalid wait_device_state value '{{ wait_device_state | default('undefined') }}', the expected value is 'present' or 'absent'"

- name: "Check wait_device_name is set for absent device"
  ansible.builtin.assert:
    that:
      - wait_device_name is defined
      - wait_device_name
    fail_msg: "wait_device_name is missing for waiting device absent"
  when: wait_device_state | lower == 'absent'

- name: "Get guest disk list after disk is {{ wait_device_state }}"
  include_tasks: ../utils/get_device_list.yml
  vars:
    guest_device_type: "disk"

- name: "Set fact for device count changed"
  ansible.builtin.set_fact:
    guest_device_count_changed: "{{ guest_device_list | length == wait_device_count | int }}"

- name: "Wait for device count changed"
  when: not guest_device_count_changed
  block:
    - name: "Handle {{ new_disk_ctrl_type }} known issues on {{ vm_guest_os_distribution }}"
      include_tasks: "handle_{{ new_disk_ctrl_type }}_known_issue.yml"
      when: new_disk_ctrl_type in ['lsilogic', 'lsilogicsas', 'nvme', 'sata']

    - name: "Initialize the command to get device list"
      ansible.builtin.set_fact:
        get_device_list_cmd: |-
          {%- if guest_os_family == 'FreeBSD' %}lsblk -d | grep -i '^[a-z]' | grep -v SIZE | grep -v 'cd[0-9]'
          {%- else %}lsblk -o NAME,TYPE,SIZE,FSTYPE -b --nodeps | grep -i disk
          {%- endif %} | awk '{print $1}'

    - name: "Wait for device to be {{ wait_device_state | lower }} on {{ vm_guest_os_distribution }}"
      ansible.builtin.shell: "{{ get_device_list_cmd }}"
      delegate_to: "{{ vm_guest_ip }}"
      changed_when: false
      register: wait_device_change_result
      until:
        - wait_device_change_result.stdout_lines is defined
        - wait_device_change_result.stdout_lines | length == wait_device_count | int
      delay: 5
      retries: 10
      ignore_errors: true
      ignore_unreachable: true

    - name: "Guest OS unreachable"
      ansible.builtin.fail:
        msg: "{{ wait_device_change_result }}"
      when:
        - wait_device_change_result is defined
        - wait_device_change_result.unreachable is defined
        - wait_device_change_result.unreachable

    - name: "Update guest disk list after waiting for disk being {{ wait_device_state }}"
      include_tasks: ../utils/get_device_list.yml
      vars:
        guest_device_type: "disk"
      when:
        - wait_device_change_result.failed is defined
        - not wait_device_change_result.failed
