# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set fact of the device name and device connect status"
  set_fact:
    device_name: "{{ device_status.split(':')[0] }}"
    device_is_connected: "{{ device_status.split(':')[1].strip(' ') | lower == 'enabled' }}"
  when: device_status.split(':') | length == 2

- name: "Set fact of the device name, device unit and device connect status"
  set_fact:
    device_name: "{{ device_status.split(':')[0] }}"
    device_unit: "{{ device_status.split(':')[1] }}"
    device_is_connected: "{{ device_status.split(':')[-1].strip(' ') | lower == 'enabled' }}"
  when: device_status.split(':') | length > 2

- block:
    - name: "Set device number in VM config"
      set_fact:
        device_num: "{{ device_name | regex_search('[0-9]+$') | int + 1 }}"

    - name: "Map '{{ device_name }}' to 'Network adapter {{ device_num }}'"
      set_fact:
        device_label: "Network adapter {{ device_num }}"
      when: "'Ethernet' in device_name"

    - name: "Map '{{ device_name }}' to 'Floppy drive {{ device_num }}'"
      set_fact:
        device_label: "Floppy drive {{ device_num }}"
      when: "'floppy' in device_name"

    - name: "Map '{{ device_name }}' to 'Serial port {{ device_num }}'"
      set_fact:
        device_label: "Serial port {{ device_num }}"
      when: "'serial' in device_name"
  when: >
    ('Ethernet' in device_name) or
    ('floppy' in device_name) or
    ('serial' in device_name)

- block:
    - name: "Map '{{ device_name }}' to '{{ device_name | regex_replace('ide', 'IDE ') }}'"
      set_fact:
        cd_ctrl_label: "{{ device_name | regex_replace('ide', 'IDE ') }}"
      when: "'ide' in device_name"

    - name: "Map '{{ device_name }}' to '{{ device_name | regex_replace('sata', 'SATA controller ') }}'"
      set_fact:
        cd_ctrl_label: "{{ device_name | regex_replace('sata', 'SATA controller ') }}"
      when: "'sata' in device_name"

    - include_tasks: vm_get_devices_with_label.yml
      vars:
        device_label: "{{ cd_ctrl_label }}"

    # Search for the CD/DVD drive device
    - name: "Find CD/DVD drive device with controllerKey = {{ vm_devices_with_label[0].key }} and unitNumber = {{ device_unit }}"
      set_fact:
        cd_device: "{{ vm_device }}"
      with_items: "{{ vm_config.config.hardware.device }}"
      loop_control:
        loop_var: vm_device
      when:
        - vm_device.controllerKey | int == vm_devices_with_label[0].key | int
        - vm_device.unitNumber | int == device_unit | int

    - name: "Map '{{ device_name }}:{{ device_unit }}' to '{{ cd_device.deviceInfo.label }}'"
      set_fact:
        device_label: "{{ cd_device.deviceInfo.label }}"
  when: "'ide' in device_name or 'sata' in device_name"

- include_tasks: vm_get_devices_with_label.yml

- name: "Device status detected by VMware Tools"
  debug: var=device_status

- name: "Device status in VM config"
  debug: var=vm_devices_with_label

- name: Check device has correct status reported
  assert:
    that:
      - vm_devices_with_label[0].connectable.connected == device_is_connected
    fail_msg: "Device status detected by VMware Tools: '{{ device_status }}', but device status in VM config: {{ device_label }} connected is {{ vm_devices_with_label[0].connectable.connected }}"
    success_msg: "Device status detected by VMware Tools: '{{ device_status }}', the same in VM config: {{ device_label }} connected is {{ vm_devices_with_label[0].connectable.connected }}"
