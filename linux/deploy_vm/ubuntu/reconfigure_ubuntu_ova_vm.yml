# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Reset deploy_casename in case user doesn't provide correct guest_id
- name: "Set fact of the deploy VM test case name"
  ansible.builtin.set_fact:
    deploy_casename: "deploy_ubuntu_ova"

# Add serial port for Ubuntu OVA when hardware_version > 10. Or else, it hangs when during booting
- include_tasks: ../../../common/vm_add_serial_port.yml
  when:
    - vm_hardware_version_num is defined
    - vm_hardware_version_num | int > 10

# Create the seed ISO to modify login information
- include_tasks: ../../utils/create_seed_iso.yml
  vars:
    user_data_template: "ubuntu-ova-user-data.j2"
    local_hostname: "ubuntu-{{ hostname_timestamp }}"
    mode: '0644'

# Upload seed ISO to VM path on ESXi server
- include_tasks: ../../../common/esxi_upload_datastore_file.yml
  vars:
    src_file_path: "{{  seed_iso_path }}"
    dest_file_path: "{{ vm_dir_name }}/{{ seed_iso_path | basename }}"

- name: "Initialize CDROM device for attaching seed.iso"
  ansible.builtin.set_fact:
    vm_cdrom_controller_type: "sata"
    vm_cdrom_controller_num: 0
    vm_cdrom_unit_num: 0

- include_tasks: ../../../common/vm_get_cdrom_devices.yml

- name: "Set facts of existing CDROM devices count and SATA CDROM device"
  ansible.builtin.set_fact:
    vm_sata_cdrom: "{{ cdrom_device_list | selectattr('controller_label', 'match', 'SATA.*') }}"
  when:
    - cdrom_device_list is defined
    - cdrom_device_list | length > 0

- name: "Set CDROM device for attaching seed.iso"
  ansible.builtin.set_fact:
    vm_cdrom_controller_num: "{{ (vm_sata_cdrom | length) // 2 }}"
    vm_cdrom_unit_num: "{{ (vm_sata_cdrom | length) % 2 }}"
  when:
    - vm_sata_cdrom is defined
    - vm_sata_cdrom | length > 0

# Attach seed ISO to Ubuntu Linux VM
- include_tasks: ../../../common/vm_configure_cdrom.yml
  vars:
    cdrom_type: iso
    cdrom_iso_file: "{{ vm_files_path_ds }}/{{ seed_iso_path | basename }}"
    cdrom_controller_type: "{{ vm_cdrom_controller_type }}"
    cdrom_controller_num: "{{ vm_cdrom_controller_num }}"
    cdrom_unit_num: "{{ vm_cdrom_unit_num }}"
    cdrom_state: present

# Power on VM to update login information
- include_tasks: ../../common/vm_set_power_state.yml
  vars:
    vm_power_state_set: 'powered-on'
- name: "Wait 120 seconds for system booting"
  ansible.builtin.pause:
    seconds: 120

# Skip to check guest full name here because we will check it
# in TD1 case
- include_tasks: ../../../common/vm_wait_guest_fullname.yml
  vars:
    wait_guest_fullname: "Ubuntu Linux (64-bit)"

# Get guest ip
- include_tasks: ../../../common/update_inventory.yml
  vars:
    update_inventory_timeout: 300

# Eject all ISOs from guest
- name: "Eject seed ISO from Ubuntu Linux"
  include_tasks: ../../utils/eject_cdrom_in_guest.yml

# Remove temporary folders
- name: "Remove temporary directory {{ tmp_seed_dir }}"
  include_tasks: ../../../common/delete_local_file.yml
  vars:
    local_path: "{{ tmp_seed_dir }}"

# Shutdown VM to reconfigure CDROMs and remove serial port
- include_tasks: ../utils/shutdown.yml

# Get all CDROM devices on the Ubuntu Linux VM
- include_tasks: ../../../common/vm_get_cdrom_devices.yml

# Disconnect all ISOs from Ubuntu Linux VM
- name: "Disconnect all ISOs from Ubuntu Linux VM"
  block:
    - name: "Change VM's CDROM to client device"
      include_tasks: ../../../common/vm_configure_cdrom.yml
      vars:
        cdrom_type: client
        cdrom_controller_type: "{% if 'IDE' in vm_cdrom.controller_label %}ide{% else %}sata{% endif %}"
        cdrom_controller_num: "{{ vm_cdrom.bus_num }}"
        cdrom_unit_num: "{{ vm_cdrom.unit_num }}"
        cdrom_state: present
      with_items: "{{ cdrom_device_list }}"
      loop_control:
        loop_var: vm_cdrom

    - name: "Remove the new added SATA CDROM device"
      include_tasks: ../../../common/vm_configure_cdrom.yml
      vars:
        cdrom_type: client
        cdrom_controller_type: "{{ vm_cdrom_controller_type }}"
        cdrom_controller_num: "{{ vm_cdrom_controller_num }}"
        cdrom_unit_num: "{{ vm_cdrom_unit_num }}"
        cdrom_state: absent
      when: cdrom_device_list | length > 1
  when:
    - cdrom_device_list is defined
    - cdrom_device_list | length > 0

- name: "Remove serial port from VM"
  block:
    - include_tasks: ../../common/vm_remove_serial_port.yml

    - ansible.builtin.fail:
        msg: "Failed to remove serial port from VM"
      when: >
        remove_serial_port is undefined or
        remove_serial_port.changed is undefined or
        not remove_serial_port.changed
  when:
    - vm_hardware_version_num is defined
    - vm_hardware_version_num | int > 10
    - vm_serial_port_file_path is defined
    - vm_serial_port_file_path

- include_tasks: ../../common/vm_set_power_state.yml
  vars:
    vm_power_state_set: 'powered-on'
