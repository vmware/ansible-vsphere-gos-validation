# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set fact of the timestamp"
  set_fact:
    iso_timestamp: "{{ lookup('pipe','date +%s') }}"

- name: "Set facts of unattend install cache and file names"
  set_fact:
    unattend_iso_cache: "{{ main_playbook_path }}/cache/{{ iso_timestamp }}"
    unattend_iso_file_name: "{{ guest_id }}{{ '_'.join(''.join(unattend_install_conf.split('.')[:-1]).split('/')) }}-{{ iso_timestamp }}.iso"
    unattend_install_template: "{{ main_playbook_path }}/autoinstall/{{ unattend_install_conf }}"
    unattend_os_type: "{{ unattend_install_conf.strip('/').split('/')[0] }}"

- debug:
    msg: "The unattend install config file is {{ unattend_install_template }}"

- name: "Set fact of the absolute path of unattend install config file and ISO"
  set_fact:
    new_unattend_install_conf: "{{ unattend_iso_cache }}/{{ unattend_install_template.split('/')[-1] }}"
    generated_unattend_iso: "{{ unattend_iso_cache }}/{{ unattend_iso_file_name }}"

- debug:
    msg: "The unattend install ISO to be generated is {{ generated_unattend_iso }}"

- name: "Create temp folder for generating unattend install ISO file"
  file:
    path: "{{ unattend_iso_cache }}"
    mode: "0777"
    state: directory

- name: "Get user password hash"
  set_fact:
    vm_password_hash: "{{ vm_password | password_hash('sha512') }}"

# For nvme boot disk, boot device name shoule be nvme0n1 instead of sda
- name: "Set boot disk name"
  set_fact:
    boot_disk_name: "{{ 'nvme0n1' if boot_disk_controller == 'nvme' else 'sda' }}"

- name: "Create unattend config file from template"
  template:
    src: "{{ unattend_install_template }}"
    dest: "{{ new_unattend_install_conf }}"
    mode: "0644"

- name: "Add a new user {{ vm_username }} in {{ unattend_os_type }} unattend install config file"
  lineinfile:
    path: "{{ new_unattend_install_conf }}"
    insertafter: "^rootpw"
    line: 'user --name={{ vm_username }} --password={{ vm_password_hash }} --groups=root,wheel --iscrypted --gecos="{{ vm_username }}"'
  when:
    - unattend_os_type in ["CentOS", "RHEL"]
    - vm_username is defined and vm_username != "root"

# Add new user for SLE
- block:
    - name: "Add a new user {{ vm_username }} in SLE unattend install config file"
      xml:
        path: "{{ new_unattend_install_conf }}"
        xpath: "/x:profile/x:users"
        namespaces:
          x: "http://www.suse.com/1.0/yast2ns"
        pretty_print: True
        input_type: "xml"
        add_children:
          - |
             <user t="map">
               <authorized_keys t="list"/>
               <encrypted t="boolean">true</encrypted>
               <fullname>test</fullname>
               <gid>0</gid>
               <home>/root/test</home>
               <home_btrfs_subvolume t="boolean">false</home_btrfs_subvolume>
               <password_settings t="map">
                 <expire/>
                 <flag/>
                 <inact/>
                 <max/>
                 <min/>
                 <warn/>
               </password_settings>
               <shell>/bin/bash</shell>
               <uid>101</uid>
               <user_password>{{ vm_password_hash }}</user_password>
               <uesrname>{{ vm_username }}</uesrname>
             </user>

    - name: "Print XML content in pretty format"
      xml:
        path: "{{ new_unattend_install_conf }}"
        pretty_print: True
  when:
    - unattend_os_type == "SLE"
    - vm_username is defined and vm_username != "root"

- name: "Print the content of {{ unattend_os_type }} unattend install config file"
  debug:
    msg: "{{  lookup('file', new_unattend_install_conf) | split('\n') }}"

- name: "Create a guest OS unattend install ISO file"
  include_tasks: ../../common/create_iso.yml
  vars:
    create_iso_src: ["{{ new_unattend_install_conf }}"]
    create_iso_dest: "{{ generated_unattend_iso }}"
    create_iso_vol_ident: 'OEMDRV'

- name: "Set fact of the dest path of unattend install iso on ESXi host"
  set_fact:
    transferred_unattend_iso: "{{ vm_datastore_path }}/{{ unattend_iso_file_name }}"

- debug:
    msg: "The unattend install ISO will be transferred to {{ transferred_unattend_iso }} on ESXi host"

- name: "Transfer generated unattend install ISO to ESXi host"
  include_tasks: ../../common/transfer_file_remote.yml
  vars:
    transfer_file_remote_src: "{{ generated_unattend_iso }}"
    transfer_file_remote_dest: "{{ transferred_unattend_iso }}"
    transfer_file_remote_server: "{{ esxi_hostname }}"

- name: "Set fact of unattended install ISO path on datastore {{ datastore }}"
  set_fact:
    transferred_unattend_iso: "[{{ datastore }}] {{ unattend_iso_file_name }}"

- name: "Remove cache folder {{ unattend_iso_cache }}"
  file:
    path: "{{ unattend_iso_cache }}"
    state: absent
