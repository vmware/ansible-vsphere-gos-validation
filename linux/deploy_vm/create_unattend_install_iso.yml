# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set fact of the timestamp"
  set_fact:
    iso_timestamp: "{{ lookup('pipe','date +%s') }}"

- name: "Set facts of unattend install cache and file names"
  set_fact:
    unattend_iso_cache: "{{ main_playbook_path }}/cache/{{ iso_timestamp }}"
    unattend_iso_file_name: "{{ guest_id }}{{ '_'.join(''.join(unattend_install_conf.split('.')[:-1]).split('/')) }}-{{ iso_timestamp }}.iso"
    unattend_install_template: "{{ main_playbook_path }}/autoinstall/{{ unattend_install_conf }}"
    unattend_os_type: "{{ unattend_install_conf.strip('/').split('/')[1] }}"

- debug:
    msg: "The unattend install config file is {{ unattend_install_template }}"

- name: "Set fact of the absolute path of unattend install config file and ISO"
  set_fact:
    new_unattend_install_conf: "{{ unattend_iso_cache }}/{{ unattend_install_template.split('/')[-1] }}"
    generated_unattend_iso: "{{ unattend_iso_cache }}/{{ unattend_iso_file_name }}"

- debug:
    msg: "The unattend install ISO to be generated is {{ generated_unattend_iso }}"

- name: "Create temp folder for generating unattend install ISO file"
  file:
    path: "{{ unattend_iso_cache }}"
    mode: "0777"
    state: directory

- name: "Get user password hash"
  set_fact:
    vm_password_hash: "{{ vm_password | password_hash('sha512') }}"

- name: "Set root password in unattend config file"
  template:
    src: "{{ unattend_install_template }}"
    dest: "{{ new_unattend_install_conf }}"
    mode: "0644"

- name: "Add new user {{ vm_username }} in {{ unattend_os_type }} unattend install config file"
  lineinfile:
    path: "{{ new_unattend_install_conf }}"
    insertafter: "^rootpw"
    line: 'user --name={{ vm_username }} --password={{ vm_password_hash }} --iscrypted --gecos="{{ vm_username }}"'
  when:
    - unattend_os_type in ["CentOS", "RHEL"]
    - vm_username is defined and vm_username != "root"

# Add new user for SLE
- block:
    - name: "Add a new user {{ vm_username }} in SLE unattend install config file"
      xml:
        path: "{{ new_unattend_install_conf }}"
        xpath: "/x:profile/x:users"
        namespaces:
          x: "http://www.suse.com/1.0/yast2ns"
        pretty_print: True
        add_children:
          - user:
              t: "map"
              _:
                - authorized_keys: ""
                    t: "list"
                - encrypted: "true"
                    t: "boolean"
                - fullname: "{{ vm_username }}"
                - gid: "100"
                - home: "/home/{{ vm_username }}"
                - home_btrfs_subvolume: "false"
                    t: "boolean"
                - password_settings:
                    t: "map"
                    _:
                      - expire: ""
                      - flag: ""
                      - inact: ""
                      - max: ""
                      - min: ""
                      - warn: ""
                - shell: "/bin/bash"
                - uid: "101"
                - user_password: "{{ vm_password_hash }}"
                - uesrname: "{{ vm_username }}"
  when:
    - unattend_os_type == "SLE"
    - vm_username is defined and vm_username != "root"

# For nvme boot disk, boot device name shoule be nvme0n1 instead of sda
- block:
    - name: "Replace sda with nvme device name"
      replace:
        path: "{{ new_unattend_install_conf }}"
        regexp: "=sda"
        replace: "=nvme0n1"
      with_items:
        - ["=sda", "=nvme0n1"]
        - ["/dev/sda", "/dev/nvme0n1"]
  when: boot_disk_controller == 'nvme'

- name: "Print the content of {{ unattend_os_type }} unattend install config file"
  debug:
    msg: "{{  lookup('file', new_unattend_install_conf) | split('\n') }}"

- name: "Create a guest OS unattend install ISO file"
  include_tasks: ../../common/create_iso.yml
  vars:
    create_iso_src: ["{{ new_unattend_install_conf }}"]
    create_iso_dest: "{{ generated_unattend_iso }}"
    create_iso_vol_ident: 'OEMDRV'

- name: "Set fact of the dest path of unattend install iso on ESXi host"
  set_fact:
    transferred_unattend_iso: "{{ vm_datastore_path }}/{{ unattend_iso_file_name }}"

- debug:
    msg: "The unattend install ISO will be transferred to {{ transferred_unattend_iso }} on ESXi host"

- name: "Transfer generated unattend install ISO to ESXi host"
  include_tasks: ../../common/transfer_file_remote.yml
  vars:
    transfer_file_remote_src: "{{ generated_unattend_iso }}"
    transfer_file_remote_dest: "{{ transferred_unattend_iso }}"
    transfer_file_remote_server: "{{ esxi_hostname }}"

- name: "Set fact of unattended install ISO path on datastore {{ datastore }}"
  set_fact:
    transferred_unattend_iso: "[{{ datastore }}] {{ unattend_iso_file_name }}"

- name: "Remove cache folder {{ unattend_iso_cache }}"
  file:
    path: "{{ unattend_iso_cache }}"
    state: absent
