# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# This task will set the ISO file list for OS installation
# using configured parameter: os_installation_iso_url or os_installation_iso_list,
# and passed parameter: transferred_unattend_iso.
#
- block:
    - name: "Check if 'os_installation_iso_url' parameter value is valid"
      fail:
        msg: "os_installation_iso_url parameter is not valid, please set it to the ftp/http/https URL for OS installation ISO file download."
      when: not os_installation_iso_url
    - include_tasks: download_iso_and_transfer.yml
    - name: "Set fact of ISO file list and length"
      set_fact:
        os_installation_iso_list: "{{ [transferred_install_iso] }}"
        os_install_iso_list_len: 1
  when: os_installation_iso_url is defined

- block:
    - name: "Check if 'os_installation_iso_list' parameter value is valid"
      fail:
        msg: "os_installation_iso_list parameter is not valid, please set it to a list of ISO file paths,
              e.g., ['[datastore] file_path1/file_name1', '[datastore] file_path2/file_name2']"
      when: >
        (os_installation_iso_list is undefined) or
        (os_installation_iso_list is string) or
        (os_installation_iso_list | length == 0)

    - name: "Set fact of the length of configured 'os_installation_iso_list' parameter value"
      set_fact:
        os_install_iso_list_len: "{{ os_installation_iso_list | length }}"
    - name: Display the number of configured ISO files
      debug: var=os_install_iso_list_len

    - name: "Check the length of 'os_installation_iso_list' parameter value"
      fail:
        msg: "The default maximum length of parameter 'os_installation_iso_list' value is set to 3, the configured value is '{{ os_installation_iso_list }}',
              list length is '{{ os_install_iso_list_len }}', if you request to increase this limit please file an issue."
      when: os_install_iso_list_len | int > 3

    - name: "Check configured path in 'os_installation_iso_list' list is in valid format '[datastore] file_path1/file_name1'"
      debug: var=item
      with_items: "{{ os_installation_iso_list }}"
      failed_when: item is not regex("^\[.*\]\s.+")
  when: os_installation_iso_url is undefined

- name: "Append generated unattend ISO file to the list"
  set_fact:
    os_installation_iso_list: "{{ os_installation_iso_list + [transferred_unattend_iso] }}"
    os_install_iso_list_len: "{{ os_install_iso_list_len | int + 1 }}"
  when: transferred_unattend_iso is defined
