# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Initialize undefined variables
- name: "Initialize variables for new VM settings"
  set_fact:
    boot_disk_controller: "{{ boot_disk_controller if (boot_disk_controller is defined and boot_disk_controller) else 'paravirtual' }}"
    firmware: "{{ firmware if (firmware is defined and firmware) else 'efi' }}"
    network_adapter_type: "{{ network_adapter_type if (network_adapter_type is defined and network_adapter_type) else 'vmxnet3' }}"
    autoinstall_complete_msg: "Autoinstall is completed."

- name: "Set CPU number to {{ cpu_cores_per_socket }}"
  set_fact:
    cpu_number: "{{ cpu_cores_per_socket }}"
  when:
    - cpu_number is undefined or not cpu_number
    - cpu_cores_per_socket is defined and cpu_cores_per_socket

- name: "Set fact of the deploy VM test case name"
  set_fact:
    deploy_casename: "deploy_vm_{{ firmware }}_{{ boot_disk_controller }}_{{ network_adapter_type }}"

- name: "Initialize the fact whether to install guest OS with desktop"
  set_fact:
    install_guest_with_desktop: False

- block:
    - include_tasks: get_iso_file_list.yml

    - include_tasks: ubuntu/prepare_ubuntu_iso_install.yml
      when: "'ubuntu' in guest_id"

    - block:
        - name: "Set default unattend install conf file for Photon OS"
          set_fact:
            unattend_install_conf: "Photon/ks.cfg"
          when: guest_id == 'vmwarePhoton64Guest'

        - name: "Set default unattend install conf file for Debian"
          set_fact:
            unattend_install_conf: "Debian/10/preseed.cfg"
          when: "'debian10' in guest_id or 'debian11' in guest_id"
      when: unattend_install_conf is undefined or not unattend_install_conf

    - debug:
        msg: "unattend_install_conf is not defined or set to a file path, will not generate unattend iso file"
      when: unattend_install_conf is undefined or not unattend_install_conf

    # Generate unattend install iso file
    - include_tasks: create_unattend_install_iso.yml
      when: unattend_install_conf is defined and unattend_install_conf

    # Compose VM CDROMs to mount OS install ISO files
    - include_tasks: compose_vm_cdroms.yml
    # Check configured OS install ISO file and unattend ISO file exist
    - include_tasks: check_configured_cdrom_iso.yml
    # Create a new VM
    - include_tasks: ../../common/vm_create.yml
      when: boot_disk_controller != 'ide'
    - include_tasks: ../../common/vm_create_with_ide_disk.yml
      when: boot_disk_controller == 'ide'

    - include_tasks: ../../common/vm_get_vm_info.yml

    # Add a serial port to monitor autoinstall process
    - include_tasks: ../../common/vm_add_serial_port.yml

    - block:
        - include_tasks: ../../common/vm_get_video_card.yml

        - name: Get VM default video memory size
          set_fact:
            vm_default_video_memory_mb: "{{ (vm_video_cart_facts.instance.video_memory | int) / 1024 }}"

        # Increase VM's video card memory to 8 MB in case desktop can't be loaded
        - include_tasks: ../../common/vm_set_video_card.yml
          vars:
            video_memory_mb: 8
          when: vm_default_video_memory_mb | int < 8
      when: install_guest_with_desktop

    # Enable secureboot
    - include_tasks: ../../common/vm_set_boot_options.yml
      vars:
        secure_boot_enabled_set: True
      when:
        - firmware is defined and firmware | lower == 'efi'
        - secureboot_enabled is defined and secureboot_enabled

    - include_tasks: ../../common/vm_set_power_state.yml
      vars:
        vm_power_state_set: 'powered-on'
    - name: Sleep 5 seconds to wait boot screen display
      pause:
        seconds: 5

    - include_tasks: ubuntu/ubuntu_install_os.yml
      when: "'ubuntu' in guest_id"

    # For SLES, OS installation with BIOS firmware, sendkey to boot
    # screen to start new installation instead of booting from local
    - include_tasks: ../../common/vm_guest_send_key.yml
      vars:
        keys_send:
          - DOWNARROW
          - ENTER
      when:
        - unattend_install_conf is defined
        - "'SLE' in unattend_install_conf"
        - firmware is defined and firmware|lower == "bios"

    # For RHEL, CentOS, RockyLinux, OracleLinux, sendkey to boot screen to not do
    # disk check and start installation directly. RockyLinux is using Other 4.x or
    # later Linux (64-bit) as guest OS type.
    - include_tasks: ../../common/vm_guest_send_key.yml
      vars:
        keys_send:
          - UPARROW
          - ENTER
      when:
        - unattend_install_conf is defined
        - ('RHEL' in unattend_install_conf) or ('CentOS' in unattend_install_conf)

    # Wait autoinstall complete message appear in serial port output file
    - include_tasks: ../../common/vm_wait_log_msg.yml
      vars:
        vm_wait_log_name: "{{ vm_serial_port_output_file | basename }}"
        vm_wait_log_msg: "{{ autoinstall_complete_msg }}"
        vm_wait_log_retries: 720

    # For Photon OS and Ubuntu
    - include_tasks: ../../common/vm_wait_guest_fullname.yml
      when:
        - unattend_install_conf is defined
        - unattend_install_conf is match('Photon') or unattend_install_conf is match('Ubuntu')

    # Get guest IP
    - include_tasks: ../../common/update_inventory.yml
      vars:
        update_inventory_timeout: 600

    # Retrieve guest system info
    - include_tasks: ../utils/get_linux_system_info.yml

    - block:
        # For SLE, RHEL8/CentOS8/OracleLinux8 with desktop: display-manager
        # service running at the end of installation to wait user login.
        # Otherwise, systemd-logind service running at the end of installaiton
        # to wait user login
        - name: "Set fact of service name for waiting at first time of OS boot"
          set_fact:
            wait_service_name: |-
              {%- if guest_os_with_gui -%}display-manager
              {%- else -%}systemd-logind
              {%- endif -%}

        - include_tasks: ../utils/wait_for_service_status.yml
          vars:
            - service_name: "{{ wait_service_name }}"
            - wait_service_status: "running"
      when:
        - guest_os_with_gui is defined
        - guest_os_family in ["RedHat", "Suse"] or guest_os_ansible_distribution == "Ubuntu"

    # Eject unattend/seed iso and delete it from datastore
    - include_tasks: eject_del_unattend_install_iso.yml
      when:
        - transferred_unattend_iso is defined
        - transferred_unattend_iso

    # Remove serial port
    - include_tasks: ../utils/shutdown.yml

    # Disconnect OS image from Ubuntu Linux VM and change to client device
    - name: "Change VM's CD/DVD Drive 1 to client device"
      include_tasks: ../../common/vm_configure_cdrom.yml
      vars:
        cdrom_type: client
        cdrom_controller_num: 0
        cdrom_unit_num: 0
      when:  guest_os_ansible_distribution == "Ubuntu"

    - include_tasks: ../../common/vm_remove_serial_port.yml

    - fail:
        msg: "Failed to remove serial port from VM"
      when: >
        remove_serial_port is undefined or
        remove_serial_port.changed is undefined or
        not remove_serial_port.changed

    - include_tasks: ../../common/vm_set_power_state.yml
      vars:
        vm_power_state_set: 'powered-on'
  rescue:
    - name: "Set not take snapshot if vm create failed"
      set_fact:
        take_fail_snapshot: False
      when: not(vm_create_result is defined and vm_create_result.changed)
    - name: "Set rescue step flags"
      set_fact:
        revert_to_base: False
        exit_testing_when_fail: True
    - include_tasks: ../setup/test_rescue.yml
