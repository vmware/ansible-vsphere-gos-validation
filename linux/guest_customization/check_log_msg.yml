# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Check specific message appears in GOSC log file
# Parameters:
#   check_log_file: The log file to check
#   check_msg_regexp: The regular expression of message to check
#   check_msg_state: The message state is 'present' or 'absent' in log file.
# Return:
#   gosc_log_success: True if message is found; otherwise it is false

- name: "Check '{{ check_msg_regexp }}' in GOSC log"
  include_tasks: ../utils/file_content_search.yml
  vars:
    path: "{{ check_log_file }}"
    regexp: "{{ check_msg_regexp }}"

- name: "Initialize error message for checking GOSC log"
  set_fact:
    check_msg_error: ""

- block:
    - name: "Set error message for checking GOSC log"
      set_fact:
        check_msg_error: "Not found '{{ check_msg_regexp }}' in GOSC log, which should exist in GOSC log"
      when: regexp_found | int == 0

    - name: "Update GOSC log check result "
      set_fact:
        gosc_log_success: "{{ (gosc_log_success | bool) and (regexp_found | int > 0) }}"
  when: check_msg_state == 'present'

- block:
    - name: "Set error message for checking GOSC log"
      set_fact:
        check_msg_error: "Found '{{ check_msg_regexp }}' in GOSC log, which should not exist in GOSC log"
      when: regexp_found | int > 0

    - name: "Update GOSC log check result "
      set_fact:
        gosc_log_success: "{{ (gosc_log_success | bool) and (regexp_found | int == 0) }}"
  when: check_msg_state == 'absent'

- include_tasks: set_gosc_validation_result.yml
  vars:
    gosc_check_item: "gosc_log_success"
    gosc_check_error_msg: "{{ check_msg_error }}"
