# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Initialize timezone check result"
  set_fact:
    guest_timezone: ""
    timezone_success: ""

- name: "Initialize hardware clock check result for perl GOSC"
  set_fact:
    guest_hwclockUTC: ""
    hwclock_success: ""
  when: gosc_workflow == "perl"

# Try to get timezone info by 'timedatectl' command
- include_tasks: ../../common/vm_shell_in_guest.yml
  vars:
    vm_shell_cmd: "/usr/bin/timedatectl"
    vm_shell_args: "status"
    vm_shell_out: "/tmp/timedatectl_status.txt"

# If 'timedatectl' command succeed
- block:
    - include_tasks: ../../common/vm_guest_file_operation.yml
      vars:
        operation: "fetch_file"
        src_path: "/tmp/timedatectl_status.txt"
        dest_path: "{{ current_test_log_folder }}/timedatectl_status.txt"

    - name: "Get time zone from 'timedatectl status'"
      set_fact:
        guest_timedate_status: "{{ lookup('file', current_test_log_folder ~ '/timedatectl_status.txt') | regex_search('\\s*Time zone:\\s*[^\\n]+\\n?') }}"

    - name: "Set fact of guest time zone after GOSC"
      set_fact:
        guest_timezone: "{{ guest_timedate_status | regex_replace('.*\\s*Time zone:\\s*([^\\s]+)\\s*.*\\n?', '\\1')}}"

    - block:
        - name: "Get hwclock from 'timedatectl status'"
          include_tasks: ../utils/file_content_search.yml
          vars:
            path: "{{ current_test_log_folder }}/timedatectl_status.txt"
            regexp: "^ *RTC in local TZ: no"
          register: hwclock_result
        - name: "Save guest hardware clock setting after GOSC"
          set_fact:
            guest_hwclockUTC: "{{ regexp_found | int > 0 }}"
      when: (gosc_workflow == "perl")
  when: vm_shell_result.exit_code is defined and vm_shell_result.exit_code == 0

# If 'timedatectl' command failed
# Get timezone by reading symbolic link of /etc/localtime
- block:
    - include_tasks: ../../common/vm_shell_in_guest.yml
      vars:
        vm_shell_cmd: "/usr/bin/readlink"
        vm_shell_args: "/etc/localtime"
        vm_shell_out: "/tmp/readlink_etc_localtime.txt"

    - include_tasks: ../../common/vm_guest_file_operation.yml
      vars:
        operation: "fetch_file"
        src_path: "/tmp/readlink_etc_localtime.txt"
        dest_path: "{{ current_test_log_folder }}/readlink_etc_localtime.txt"

    - name: "Get timezone info from /etc/localtime"
      set_fact:
        guest_timezone: "{{ lookup('file', current_test_log_folder ~ '/readlink_etc_localtime.txt') | replace('/usr/share/zoneinfo/','') }}"

    # Get hwclock by running command "hwclock -D" when test perl GOSC
    - block:
        - include_tasks: ../../common/vm_shell_in_guest.yml
          vars:
            vm_shell_cmd: "/usr/sbin/hwclock"
            vm_shell_args: "-D"
            vm_shell_out: "/tmp/hwclock_D.txt"
        - include_tasks: ../../common/vm_guest_file_operation.yml
          vars:
            operation: "fetch_file"
            src_path: "/tmp/hwclock_D.txt"
            dest_path: "{{ current_test_log_folder }}/hwclock_D.txt"
        - name: "Get hwclock from 'hwclock -D'"
          include_tasks: ../utils/file_content_search.yml
          vars:
            path: "{{ current_test_log_folder }}/hwclock_D.txt"
            regexp: "^Hardware clock is on UTC time"
        - name: "Save hardware clock settting after GOSC"
          set_fact:
            guest_hwclockUTC: "{{ regexp_found | int > 0 }}"
      when: gosc_workflow == "perl"
  when: vm_shell_result.exit_code is undefined or vm_shell_result.exit_code != 0

# Check guest time zone
- name: "Check guest timezone is customized"
  set_fact:
    timezone_success: "{{ guest_timezone == linux_gosc_spec['timezone'] }}"

- name: "Print timezone check result"
  debug: var=timezone_success

- include_tasks: set_gosc_validation_result.yml
  vars:
    gosc_check_item: "timezone_success"
    gosc_check_error_msg: "VM timezone is {{ guest_timezone }}, expected timezone is {{ linux_gosc_spec['timezone'] }}"

# Check guest hwclock
# cloud-init GOSC doesn't support hwclock customization
- block:
    - name: Check guest hwclock is customized
      set_fact:
        hwclock_success: "{{ guest_hwclockUTC == linux_gosc_spec['hwclockUTC'] }}"
    - name: "Print hardware clock check result"
      debug: var=hwclock_success

    - include_tasks: set_gosc_validation_result.yml
      vars:
        gosc_check_item: "hwclock_success"
        gosc_check_error_msg: "VM hwclockUTC is {{ guest_hwclockUTC }}, expected hwclockUTC is {{ linux_gosc_spec['hwclockUTC'] }}"
  when: gosc_workflow == "perl"
