# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Reconfigure guest OS on existing VM to prepare for GOS validation testing
#
# For Ubuntu or Debian , modify sshd config to keep connection alive
- include_tasks: ../utils/ssh_keep_alive.yml
  when: guest_os_family in ["Debian", "FreeBSD"]

# Diable auto update for Ubuntu
- include_tasks: ../utils/disable_auto_update.yml
  when: guest_os_ansible_distribution in ["Ubuntu"]

- name: "Reconfigure VMware Photon OS"
  block:
    - include_tasks: ../../common/vm_get_vmtools_status.yml
      when: vmtools_is_running is undefined or not vmtools_is_running

    - include_tasks: ../utils/disable_iptables.yml
      when:
        - (new_vm is undefined) or (not new_vm | bool)
        - vmtools_is_running

    # VMware Photon OS needs to disable DNSSEC and DNSOverTLS while connecting online repo
    - name: "Disable DNSSEC and DNSOverTLS settings for VMware Photon OS"
      include_tasks: ../utils/set_dns.yml

    - name: "Update VMware Photon OS repo cache"
      include_tasks: ../utils/repo_update.yml
      vars:
        check_update_cmd: "tdnf makecache"

    - name: "Install 'gawk', 'python3-rpm', 'tar' on VMware Photon OS"
      include_tasks: ../utils/install_uninstall_package.yml
      vars:
        package_list: ["gawk", "python3-rpm", "tar"]
        package_state: "present"
  when: guest_os_ansible_distribution == "VMware Photon OS"

- name: "Reconfigure SLED"
  block:
    - name: "Check 'PackageKit' service state"
      include_tasks: ../utils/get_service_info.yml
      vars:
        service_name: "packagekit.service"

    - name: "Stop and disable 'PackageKit' service"
      block:
        - name: "Stop and disable 'PackageKit' service"
          ansible.builtin.service:
            name: 'packagekit.service'
            state: 'stopped'
            enabled: false
          delegate_to: "{{ vm_guest_ip }}"

        # Reboot VM to make sure packagekit.service is disabled and stopped
        - include_tasks: ../utils/reboot.yml
      when:
        - service_info
        - service_info.state is defined
        - service_info.state in ['active', 'running']

    - name: "Remove 'PackageKit' package from SLED"
      include_tasks: ../utils/install_uninstall_package.yml
      vars:
        package_list: ["PackageKit"]
        package_state: "absent"
  when: guest_os_ansible_distribution == "SLED"
