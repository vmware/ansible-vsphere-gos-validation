# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Below tasks will be executed at the beginning of each Linux test case.
# If base snapshot does not exist, will take a snapshot of VM as the
# base snapshot, if it exists, then revert to it directly.
#
- name: "Set current test case name and log path on local machine"
  set_fact:
    current_testcase_name: "{{ ansible_play_name }}"
    current_test_log_folder: "{{ testrun_log_path }}/{{ ansible_play_name }}"

# Check base snapshot existence and/or revert to it
- include_tasks: base_snapshot_check_revert.yml

# Get VM guest IP
- include_tasks: ../../common/update_inventory.yml

- name: Print VM guest IP address
  debug: var=vm_guest_ip

# Get VMware tools status if required
- include_tasks: ../../common/vm_get_vmtools_status.yml

# Get guest OS system info
- include_tasks: ../utils/get_linux_system_info.yml
  when: guest_os_system_info_retrieved is undefined or not guest_os_system_info_retrieved

# Get VMware tools version info
- include_tasks: ../utils/get_guest_ovt_version_build.yml
  when:
    - vmtools_is_installed is defined
    - vmtools_is_installed | bool
    - vmtools_info_from_vmtoolsd is undefined or not vmtools_info_from_vmtoolsd

# Get VM guest info guest id, guest full name and guest detailed data
- include_tasks: ../../common/vm_get_guest_info.yml
  when:
    - vmtools_is_running is defined
    - vmtools_is_running | bool
    - guestinfo_gathered is undefined or not guestinfo_gathered

# Create a base snapshot if it does not exist
- include_tasks: create_base_snapshot.yml
  when: not (base_snapshot_exists | bool)

# Skip test case run when VMware tools is required but not installed or not running
- include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: "Skip test case due to VMware tools installed: {{ vmtools_is_installed | default(False) }}, running: {{ vmtools_is_running | default(False) }}"
  when:
    - skip_test_no_vmtools is defined
    - skip_test_no_vmtools
    - not (vmtools_is_running is defined and vmtools_is_running | bool)
