# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
#
# Get open-vm-tools version, build, and install type
# Parameter:
#   ovt_install_type (optional): If ovt_install_type is set, use it to set vmtools_install_type
#

- name: "Initialize facts about VMware Tools info"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: ""
    vmtools_version: ""
    vmtools_major_version: ""
    vmtools_build_number: ""
    vmtools_install_type: "unknown"
    vmtools_info_retrieved: false

- name: "Get path of vmware-toolbox-cmd"
  include_tasks: get_vmware_toolbox_cmd_path.yml

- name: "Get VMware Tools daemon version"
  ansible.builtin.command: "{{ vmware_toolbox_cmd_path }} -v"
  register: ovt_version
  delegate_to: "{{ vm_guest_ip }}"

- name: "Set fact of VMware Tools info, major version and build number in guest OS"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: "{{ ovt_version.stdout }}"
    vmtools_major_version: "{{ ovt_version.stdout.split('.')[0] }}"
    vmtools_build_number: "{{ ovt_version.stdout | regex_findall('\\d+') | last }}"

- name: "Set fact of VMware Tools version"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd | regex_search('(\\d+\\.){2}\\d+') }}"
  when: vmtools_major_version | int <= 12

- name: "Set fact of VMware Tools version"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd | regex_search('(\\d+\\.){3}\\d+') }}"
  when: vmtools_major_version | int > 12

# Neither ovt_verify_pkg_install or ovt_verify_src_install was executed in current testing
- name: "Get open-vm-tools install type on {{ guest_os_ansible_distribution }}"
  when:
    - guest_os_ansible_distribution not in ['Flatcar', 'RHCOS']
    - ovt_install_type is undefined
  block:
    - name: "Get installed packages on guest OS"
      include_tasks: get_installed_packages.yml

    # Check whether open-vm-tools or open-vm-tools-nox11 (for FreeBSD without GUI) is installed
    - name: "Set fact of open-vm-tools install type to 'package' for {{ guest_os_ansible_distribution }}"
      ansible.builtin.set_fact:
        vmtools_install_type: "package"
      when:
        - guest_installed_packages | length > 0
        - guest_installed_packages | select('match', 'open-vm-tools(-nox11)?') | length > 0

- name: "Set fact of open-vm-tools install type to 'package' for {{ guest_os_ansible_distribution }}"
  ansible.builtin.set_fact:
    vmtools_install_type: "package"
  when: guest_os_ansible_distribution in ['Flatcar', 'RHCOS']

# Either ovt_verify_pkg_install or ovt_verify_src_install was executed in current testing
- name: "Set fact of open-vm-tools install type to '{{ ovt_install_type }}' for {{ guest_os_ansible_distribution }}"
  ansible.builtin.set_fact:
    vmtools_install_type: "{{ ovt_install_type }}"
  when: ovt_install_type is defined

- name: "Print open-vm-tools version, build and install type"
  ansible.builtin.debug:
    msg:
      - "Guest OS open-vm-tools info is {{ vmtools_info_from_vmtoolsd }}"
      - "Guest OS open-vm-tools version is {{ vmtools_version }}"
      - "Guest OS open-vm-tools build number is {{ vmtools_build_number }}"
      - "Guest OS open-vm-tools install type is {{ vmtools_install_type }}"

- name: "Set fact that VMware Tools info has been retrieved"
  ansible.builtin.set_fact:
    vmtools_info_retrieved: true
