# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
# check if cloudinit exists
# for cloudinit GOSC, if not exist, will install it, if not installed, then the test "failed"
# for perl GOSC, if not exist, never mind, if exists, then disable it
#
- name: "Check /etc/cloud/cloud.cfg existence"
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloud_init_cfg
  delegate_to: "{{ vm_guest_ip }}"

- name: "Get cloud-init version only when cloud-init gosc workflow"
  block:
    - block:
        - include_tasks: repo_update.yml
        - include_tasks: install_uninstall_package.yml
          vars:
            package_name: "cloud-init"
            package_state: "present"
            update_cache: True
      when: not cloud_init_cfg.stat.exists

    - name: "Check /etc/cloud/cloud.cfg existence in cloud-init work flow"
      stat:
        path: /etc/cloud/cloud.cfg
      register: cloud_init_cfg_retry
      delegate_to: "{{ vm_guest_ip }}"

    - name: "Assert /etc/cloud/cloud.cfg exist for cloud-init GOSC"
      assert:
        that:
          - cloud_init_cfg_retry.stat.exists
        fail_msg: "/etc/cloud/cloud.cfg doesn't exist"

    # Check if cloud-init services is enabled, if not, enable them
    - include_tasks: service_operation.yml
      vars:
        enable_service: 'yes'
      loop:
        - cloud-init-local
        - cloud-init
        - cloud-config
        - cloud-final
      loop_control:
        loop_var: service_name
  when:
    - gosc_workflow is defined
    - gosc_workflow == "cloud-init"

- include_tasks: cloudinit_version_get.yml
  when: >
    (cloud_init_cfg is defined and
     cloud_init_cfg.stat is defined and
     cloud_init_cfg.stat.exists) or
    (cloud_init_cfg_retry is defined and
     cloud_init_cfg_retry.stat is defined and
     cloud_init_cfg_retry.stat.exists)
