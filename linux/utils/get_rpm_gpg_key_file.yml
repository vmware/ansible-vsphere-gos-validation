# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get RPM GPG Key file path
#
- name: "Initialize the default RPM GPG key file path"
  ansible.builtin.set_fact:
    guest_rpm_gpg_key_path: ""
    guest_rpm_gpg_key_exists: false

- name: "Set default RPM GPG key file for RHEL"
  ansible.builtin.set_fact:
    guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  when: guest_os_ansible_distribution == "RedHat"

- name: "Set default RPM GPG key file for {{ vm_guest_os_distribution }}"
  ansible.builtin.set_fact:
    guest_rpm_gpg_key_path: |-
      {%- if guest_os_ansible_distribution_major_ver | int == 7 -%}
      /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
      {%- elif guest_os_ansible_distribution_major_ver | int in [8, 9] -%}
      /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
      {%- elif guest_os_ansible_distribution_major_ver | int >= 10 -%}
      /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
      {%- endif -%}
  when: guest_os_ansible_distribution == "CentOS"

- name: "Set default RPM GPG key file for Oracle Linux"
  ansible.builtin.set_fact:
    guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-oracle"
  when: guest_os_ansible_distribution == "OracleLinux"

- name: "Set default RPM GPG key file for Rocky Linux"
  when: guest_os_ansible_distribution == "Rocky"
  block:
    - name: "Set GPG key path for Rocky Linux {{ guest_os_ansible_distribution_ver }}"
      ansible.builtin.set_fact:
        guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial"
      when: guest_os_ansible_distribution_major_ver | int == 8

    - name: "Set GPG key path for Rocky Linux {{ guest_os_ansible_distribution_ver }}"
      ansible.builtin.set_fact:
        guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-{{ guest_os_ansible_distribution_major_ver }}"
      when: guest_os_ansible_distribution_major_ver | int >= 9

- name: "Set RPM GPG key file for VMware Photon OS"
  when: guest_os_ansible_distribution == "VMware Photon OS"
  block:
    - name: "Set command for updating GPG key file"
      ansible.builtin.set_fact:
        guest_gpg_key_update_cmd: |-
          {%- if guest_os_ansible_distribution_major_ver | int == 3 -%}tdnf update -y photon-repos-3.0-8.ph3 --refresh
          {%- elif guest_os_ansible_distribution_major_ver | int == 4 -%}tdnf update -y photon-repos-4.0-3.ph4 --enablerepo=photon --refresh
          {%- endif -%}

    # 1024bit GPG key expired on VMware Photon OS 3.0 & 4.0, we need to get 4096 bit GPG key
    # VMware Photon 5.0 already has 4096 bit GPG key, no need to update
    - name: "Update and set RPM GPG key for VMware Photon OS {{ guest_os_ansible_distribution_ver }}"
      when: guest_gpg_key_update_cmd
      block:
        - name: "Update RPM GPG key on VMware Photon OS {{ guest_os_ansible_distribution_ver }}"
          ansible.builtin.shell: "{{ guest_gpg_key_update_cmd }}"
          delegate_to: "{{ vm_guest_ip }}"

        - name: "Update RPM GPG key files in repositories config"
          ansible.builtin.shell: "sed -r -i 's#gpgkey=(file:///etc/pki/rpm-gpg/VMWARE-RPM-GPG-KEY)$#gpgkey=\\1 \\1-4096#' /etc/yum.repos.d/*.repo"
          delegate_to: "{{ vm_guest_ip }}"
          ignore_errors: true

    # Use 4096 bit GPG key on VMware Photon OS
    - name: "Set default RPM GPG key file for VMware Photon OS {{ guest_os_ansible_distribution_ver }}"
      ansible.builtin.set_fact:
        guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/VMWARE-RPM-GPG-KEY-4096"

- name: "Set default RPM GPG key file for ProLinux"
  ansible.builtin.set_fact:
    guest_rpm_gpg_key_path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-prolinux-{{ guest_os_ansible_distribution_major_ver }}-release"
  when: guest_os_ansible_distribution == "ProLinux"

- name: "Check GPG key file '{{ guest_rpm_gpg_key_path }}' exists or not"
  when: guest_rpm_gpg_key_path
  block:
    - name: "Check GPG key file '{{ guest_rpm_gpg_key_path }}' exists or not"
      include_tasks: get_file_stat_info.yml
      vars:
        guest_file_path: "{{ guest_rpm_gpg_key_path }}"

    - name: "Set fact of RPM GPG key file exists or not"
      ansible.builtin.set_fact:
        guest_rpm_gpg_key_exists: "{{ guest_file_exists }}"

- name: "GPG key file doesn't exist"
  when: not (guest_rpm_gpg_key_exists | bool)
  block:
    - name: "No RPM GPG key file on VMware Photon OS"
      ansible.builtin.fail:
        msg: "Not found RPM GPG key file {{ guest_rpm_gpg_key_path }} VMware Photon OS"
      when: guest_os_ansible_distribution == "VMware Photon OS"

    - name: "Look for an alternative RPM GPG key file for {{ guest_os_ansible_distribution }}"
      when: guest_os_ansible_distribution != "VMware Photon OS"
      block:
        - name: "Look for RPM GPG key files"
          ansible.builtin.command: "find /etc/pki/rpm-gpg/ -name 'RPM-GPG-KEY-*'"
          delegate_to: "{{ vm_guest_ip }}"
          register: list_rpm_gpg_keys
          changed_when: false
          ignore_errors: true

        - name: "Set default GPG key file for {{ guest_os_ansible_distribution }}"
          ansible.builtin.set_fact:
            guest_rpm_gpg_key_path: "{{ list_rpm_gpg_keys.stdout_lines[0] }}"
            guest_rpm_gpg_key_exists: true
          when:
            - list_rpm_gpg_keys.stdout_lines is defined
            - list_rpm_gpg_keys.stdout_lines | length > 0

        - name: "Set RPM GPG key file to empty as no RPM GPG key file found"
          ansible.builtin.set_fact:
            guest_rpm_gpg_key_path: ""
          when: >
            list_rpm_gpg_keys.stdout_lines is undefined or
            list_rpm_gpg_keys.stdout_lines | length == 0
