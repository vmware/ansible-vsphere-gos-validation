# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Add package repository from local CDROM
# Parameter
#   vm_cdrom_device_num: The CD/DVD device label number, such as 1, 2, etc

- name: "Check OS ISO image path is provided by os_installation_iso_list"
  ansible.builtin.assert:
    that:
      - os_installation_iso_list is defined
      - os_installation_iso_list | length >= 1
    fail_msg: "Please add OS ISO image path to variable os_installation_iso_list"
    success_msg: "Get OS ISO image path: {{ os_installation_iso_list[0] }}"

- name: "Set default CD/DVD device label number"
  ansible.builtin.set_fact:
    vm_cdrom_device_num: 1
  when: vm_cdrom_device_num is undefined or vm_cdrom_device_num | int < 1

- name: "Initiliaze variables for adding local repository"
  ansible.builtin.set_fact:
    guest_os_ansible_devices: ""
    guest_os_ansible_mounts: ""
    guest_cdrom_device_name: "sr{{ vm_cdrom_device_num | int - 1 }}"
    guest_cdrom_device_fact: ""
    guest_cdrom_mount_fact: ""
    guest_cdrom_mount_path: "/mnt/cdrom"

- name: "Eject all connected CDROM devices"
  include_tasks: ../utils/eject_cdrom_in_guest.yml

- name: "Connect CD/DVD drive 1 to guest OS ISO image"
  include_tasks: ../../common/vm_connect_cdrom_to_iso.yml
  vars:
    vm_cdrom_iso_file: "{{ os_installation_iso_list[0] }}"

- name: "Get the fact of system devices"
  include_tasks: ../../common/get_system_info.yml
  vars:
    filter: "ansible_devices"

- name: "Set the fact of all OS devices"
  ansible.builtin.set_fact:
    guest_os_ansible_devices: "{{ guest_system_info.ansible_devices }}"
  when: guest_system_info.ansible_devices is defined

- name: "Check VM has CDROM device"
  ansible.builtin.assert:
    that:
      - guest_cdrom_device_name in guest_os_ansible_devices
    fail_msg: "VM {{ vm_name }} has no CDROM device"
    success_msg: "VM {{ vm_name }} has CDROM device"

- name: "Set the fact of CDROM device connecting to ISO image"
  ansible.builtin.set_fact:
    guest_cdrom_device_fact: "{{ guest_os_ansible_devices[guest_cdrom_device_name] }}"

- name: "Print CDROM device fact"
  ansible.builtin.debug: var=guest_cdrom_device_fact

- name: "Get all filesystem mount points in guest OS"
  include_tasks: ../../common/get_system_info.yml
  vars:
    filter: "ansible_mounts"

- name: "Set the fact of all guest OS mount points"
  ansible.builtin.set_fact:
    guest_os_ansible_mounts: "{{ guest_system_info.ansible_mounts }}"
  when: guest_system_info.ansible_mounts is defined

- name: "Set the fact of CDROM device mount points"
  ansible.builtin.set_fact:
    guest_cdrom_mount_fact: "{{ guest_os_ansible_mounts | selectattr('device', 'equalto', '/dev/' + guest_cdrom_device_name) }}"

- name: "Print CDROM device mount fact"
  ansible.builtin.debug: var=guest_cdrom_mount_fact

- name: "Umount auto mounted CDROM device"
  include_tasks: set_mount_point.yml
  vars:
    mount_point_path: "{{ item.mount }}"
    mount_point_src: "{{ item.device }}"
    mount_state: "unmounted"
  with_items: "{{ guest_cdrom_mount_fact }}"
  when: guest_cdrom_mount_fact | length >= 1

- name: "Mount CDROM device to {{ guest_cdrom_mount_path }}"
  include_tasks: set_mount_point.yml
  vars:
    mount_point_path: "{{ guest_cdrom_mount_path }}"
    mount_point_src: "/dev/{{ guest_cdrom_device_name }}"
    mount_state: "mounted"
    mount_fstype: "iso9660"

- name: "Set the local DVD repository name"
  ansible.builtin.set_fact:
    dvd_repo_name: "{{ guest_os_ansible_distribution }}_{{ guest_os_ansible_distribution_ver }}_DVD"

# Add repository from CDROM for RedHat and Suse family OS
- name: "Add repositories from CDROM for {{ vm_guest_os_distribution }}"
  when: guest_os_family in ['Suse', 'RedHat']
  block:
    # Find the dir having repodata
    - name: "Find repodata in {{ guest_cdrom_mount_path }}"
      ansible.builtin.command: "find {{ guest_cdrom_mount_path }} -name repodata"
      register: find_repodata_result
      delegate_to: "{{ vm_guest_ip }}"

    - name: "Check the CDROM device has repodata"
      ansible.builtin.assert:
        that:
          - find_repodata_result.stdout_lines is defined
          - find_repodata_result.stdout_lines | length >= 1
        fail_msg: "Not found repodata under {{ guest_cdrom_mount_path }}"
        success_msg: "Found repodata: {{ find_repodata_result.stdout_lines | default('') }}"

    - name: "Add package repositories from the CDROM device"
      include_tasks: add_repo_from_baseurl.yml
      vars:
        repo_name: "{{ dvd_repo_name }}_{{ repodata_path | dirname | basename }}"
        repo_baseurl: "{{ repodata_path | dirname }}"
        gpg_check: "{{ guest_os_ansible_distribution == 'RedHat' }}"
      with_items: "{{ find_repodata_result.stdout_lines }}"
      loop_control:
        loop_var: repodata_path
