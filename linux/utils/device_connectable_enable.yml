# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Add isolation.device settings in vmx
- name: "Initialize vm_advanced_settings for isolation.device.connectable.disable and isolation.device.edit.disable"
  ansible.builtin.set_fact:
    vm_advanced_settings_exist: false
    vm_advanced_settings:
      - key: "isolation.device.connectable.disable"
        value: "FALSE"
      - key: "isolation.device.edit.disable"
        value: "FALSE"

# Check if above advanced settings already configured
- name: "Get VM's extra config"
  include_tasks: ../../common/vm_get_extra_config.yml

- name: "Set fact of existence of expected extra config"
  ansible.builtin.set_fact:
    vm_advanced_settings_exist: true
  when:
    - vm_advanced_settings[0].key in vm_extra_config
    - vm_extra_config[vm_advanced_settings[0].key] == vm_advanced_settings[0].value
    - vm_advanced_settings[1].key in vm_extra_config
    - vm_extra_config[vm_advanced_settings[1].key] == vm_advanced_settings[1].value

# Set key-value pairs when not in VMX file
- name: "Add isolation.device settings to VM's extra config"
  block:
    - name: "Shutdown OS"
      include_tasks: shutdown.yml

    - name: "Add isolation.device settings to VM's extra config"
      include_tasks: ../../common/vm_set_extra_config.yml

    - name: "Power on VM"
      include_tasks: ../../common/vm_set_power_state.yml
      vars:
        vm_power_state_set: 'powered-on'

    - name: "Update VM's IP in inventory"
      include_tasks: ../../common/update_inventory.yml

    - name: "Get VM's extra config"
      include_tasks: ../../common/vm_get_extra_config.yml

    - name: "Check isolation.device settings are present in VM's extra config after VM power-on"
      ansible.builtin.assert:
        that:
          - vm_extra_config['isolation.device.connectable.disable'] is defined
          - vm_extra_config['isolation.device.connectable.disable'] == 'FALSE'
          - vm_extra_config['isolation.device.edit.disable'] is defined
          - vm_extra_config['isolation.device.edit.disable'] == 'FALSE'
        fail_msg: >-
          The isolation.device settings are not correct in VM's extra config after VM power-on.
          In VM's extra config,
          isolation.device.connectable.disable = {{ vm_extra_config['isolation.device.connectable.disable'] |
                                                   default('') }},
          isolation.device.edit.disable = {{ vm_extra_config['isolation.device.edit.disable'] |
                                                   default('') }}.

  when: not vm_advanced_settings_exist
