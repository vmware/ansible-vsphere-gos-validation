# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Create seed ISO file for cloud-init config
# Parameters:
# user_data_template: the path to cloud-init user-data template
# local_hostname: the VM hostname to be set via cloud-init

- name: "Create a temporary directory for creating cloud-init seed.iso"
  include_tasks: ../../common/create_temp_file_dir.yml
  vars:
    tmp_dir: "{{ local_cache }}"
    tmp_state: "directory"
    tmp_prefix: "seed_"

- name: "Set fact of temp path of the seed file"
  ansible.builtin.set_fact:
    tmp_seed_dir: "{{ tmp_path }}"

- name: "Set the path to seed.iso"
  ansible.builtin.set_fact:
    user_data_path: "{{ tmp_seed_dir }}/user-data"
    meta_data_path: "{{ tmp_seed_dir }}/meta-data"
    seed_iso_path: "{{ tmp_seed_dir }}/seed.iso"

- include_tasks: get_local_ssh_public_key.yml
  when: ssh_public_key is undefined or not ssh_public_key

- name: "Create user-data file for cloud-init local datasource"
  ansible.builtin.template:
    src: "{{ user_data_template }}"
    dest: "{{ user_data_path }}"
    mode: "0644"
  vars:
    vm_password_hash: "{{ vm_password | password_hash('sha512') }}"

- name: "Create meta-data file for cloud-init local datasource"
  ansible.builtin.file:
    path: "{{ meta_data_path }}"
    state: touch
    mode: "0644"

- name: "Set hostname in cloud-init meta-data"
  ansible.builtin.lineinfile:
    path: "{{ meta_data_path }}"
    line: "local-hostname: {{ local_hostname }}"

- name: "Collect cloud-init meta data and user data to log folder"
  ansible.builtin.copy:
    src: "{{ cloud_init_data }}"
    dest: "{{ current_test_log_folder }}/{{ cloud_init_data | basename }}"
  with_items:
    - "{{ meta_data_path }}"
    - "{{ user_data_path }}"
  loop_control:
    loop_var: cloud_init_data

- name: "Create seed.iso as cloud-init local datasource"
  include_tasks: ../../common/create_iso.yml
  vars:
    create_iso_src:
      - "{{ user_data_path }}"
      - "{{ meta_data_path }}"
    create_iso_dest: "{{ seed_iso_path }}"
    create_iso_vol_ident: "cidata"
    create_iso_inter_level: 4
    create_iso_joliet: 3
    create_iso_rock: 1.09

- name: "Check {{ seed_iso_path }} existence"
  ansible.builtin.stat:
    path: "{{ seed_iso_path }}"
  register: seed_st
  failed_when: not seed_st.stat.exists
