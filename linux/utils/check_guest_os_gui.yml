# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Check whether guest OS has desktop environment and
# get display manager if deskotp environment is installed"
- name: "Set fact of guest OS having desktop environment and display manager"
  ansible.builtin.set_fact:
    guest_os_with_gui: false
    guest_os_display_manager: ""

# Set default guest_os_with_gui by checking Xorg exists or not
- name: "Check Xorg exists or not"
  ansible.builtin.shell: "type Xorg"
  ignore_errors: true
  delegate_to: "{{ vm_guest_ip }}"
  register: xorg_result

- name: "Set fact of guest OS having desktop environment"
  ansible.builtin.set_fact:
    guest_os_with_gui: true
  when:
    - xorg_result is defined
    - xorg_result.rc is defined
    - xorg_result.rc  == 0

- name: "Get guest OS display manager"
  block:
    - name: "Get guest OS display manager service detail"
      ansible.builtin.shell: "systemctl status display-manager.service"
      register: "display_manager_status"
      changed_when: false
      ignore_errors: true
      delegate_to: "{{ vm_guest_ip }}"

    - name: "Set fact of guest OS display manager"
      ansible.builtin.set_fact:
        guest_os_display_manager: >-
          {{
            display_manager_status.stdout_lines[0] | lower |
            regex_search('\w*\.service', ignorecase=True) |
            replace('.service', '')
          }}
      when:
        - display_manager_status is defined
        - display_manager_status.stdout_lines is defined
        - display_manager_status.stdout_lines | length > 0
  when: guest_os_with_gui | bool

- ansible.builtin.debug:
    msg:
      - "Guest OS has desktop environment: {{ guest_os_with_gui }}"
      - "Guest OS display manager: {{ guest_os_display_manager }}"
