# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Check whether guest OS has desktop environment and
# get display manager if deskotp environment is installed
- name: "Initialize facts of guest OS having desktop environment and display manager"
  ansible.builtin.set_fact:
    guest_os_with_gui: false
    guest_os_display_manager: ""

- name: "Check Linux guest OS has desktop environment or not"
  when: guest_os_ansible_system == "linux"
  block:
    - name: "Get guest OS display manager service detail"
      ansible.builtin.shell: "systemctl status display-manager.service"
      register: display_manager_status
      changed_when: false
      ignore_errors: true
      delegate_to: "{{ vm_guest_ip }}"

    - name: "Set facts of guest OS desktop environment for {{ guest_os_ansible_distribution }}"
      ansible.builtin.set_fact:
        guest_os_with_gui: true
        guest_os_display_manager: |-
          {%- if "GNOME Display Manager" in display_manager_status.stdout_lines[0] -%}gdm
          {%- elif "Light Display Manager" in display_manager_status.stdout_lines[0] -%}lightdm
          {%- elif "X Display Manager" in display_manager_status.stdout_lines[0] -%}xdm
          {%- elif "LXDE Display Manager" in display_manager_status.stdout_lines[0] -%}lxdm
          {%- elif "Simple Desktop Display Manager" in display_manager_status.stdout_lines[0] -%}sddm
          {%- elif guest_os_ansible_distribution == 'Astra Linux (Orel)' -%}fly-dm
          {%- endif -%}
      when:
        - display_manager_status.rc is defined
        - display_manager_status.rc == 0
        - display_manager_status.stdout_lines is defined
        - display_manager_status.stdout_lines | length > 0

- name: "Check FreeBSD has desktop environment or not"
  when: guest_os_ansible_system == "freebsd"
  block:
    - name: "Check Xorg or Xwayland is running or not"
      ansible.builtin.shell: "pgrep -l 'Xorg|Xwayland'"
      ignore_errors: true
      delegate_to: "{{ vm_guest_ip }}"
      register: pgrep_result

    - name: "Set facts of guest OS desktop environment for {{ vm_guest_os_distribution }}"
      when:
        - pgrep_result.rc is defined
        - pgrep_result.rc == 0
        - pgrep_result.stdout_lines is defined
        - pgrep_result.stdout_lines | length > 0
      block:
        - name: "Set fact of guest OS having desktop environment"
          ansible.builtin.set_fact:
            guest_os_with_gui: true

        - name: "Check display manager on {{ vm_guest_os_distribution }}"
          ansible.builtin.shell: "grep -io -E '^(gdm|slim|lightdm|sddm|xdm)_enable=.*YES' /etc/rc.conf"
          ignore_errors: true
          delegate_to: "{{ vm_guest_ip }}"
          register: check_dm_result

        - name: "Set fact of guest OS display manager"
          ansible.builtin.set_fact:
            guest_os_display_manager: "{{ check_dm_result.stdout_lines[0].split('_')[0] }}"
          when:
            - check_dm_result.rc is defined
            - check_dm_result.rc == 0
            - check_dm_result.stdout_lines is defined
            - check_dm_result.stdout_lines | length > 0

- name: "Display guest OS desktop facts"
  ansible.builtin.debug:
    msg:
      - "Guest OS has desktop environment: {{ guest_os_with_gui }}"
      - "Guest OS display manager: {{ guest_os_display_manager }}"
