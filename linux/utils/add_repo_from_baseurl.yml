# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Add a package repository with given baseurl
# Parameter
#   repo_name: (Required)The repository name
#   repo_baseurl: (Required)The base url of the repository or the local repo dir
#   repo_mirrorlist: (Optional)The URL to a mirror list of the repository, which is used for RHEL-like OS.
#   repo_description: (Optional)The description of the repository
#   gpg_check: (Optinoal)True to check GPG key
#   gpg_key_path: (Optional)The GPG key path

- name: "Check repo name and baseurl parameters are valid"
  assert:
    that:
      - repo_name is defined and repo_name
      - repo_baseurl is defined and repo_baseurl
    fail_msg: "Invalid parameters: repo_name={{ repo_name | default('undefined') }}, repo_baseurl={{ repo_baseurl | default('undefined') }}"

- name: "Set default GPG key"
  set_fact:
    gpg_key_path: |-
      {%- if guest_os_ansible_distribution == "RedHat" -%}file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      {%- elif guest_os_ansible_distribution == "CentOS" -%}file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
      {%- elif guest_os_ansible_distribution == "Rocky" -%}file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
      {%- elif guest_os_ansible_distribution == "OracleLinux"  -%}file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
      {%- elif guest_os_ansible_distribution == "VMware Photon OS"  -%}file:///etc/pki/rpm-gpg/VMWARE-RPM-GPG-KEY
      {%- else -%}{%- endif -%}
  when:
    - gpg_check is defined
    - gpg_check
    - gpg_key_path is undefined or not gpg_key_path

- name: "Initialize the prefix for local repository"
  set_fact:
    repo_baseurl_prefix: ""

- block:
    - name: "Set the prefix for local yum repository"
      set_fact:
        repo_baseurl_prefix: "file://"
      when:
        - repo_baseurl is sequence
        - repo_baseurl[0] == '/'

    - name: "Add repository {{ repo_name }} from {{ repo_baseurl }}"
      yum_repository:
        name: "{{ repo_name }}"
        description: "{{ repo_description | default(repo_name) }}"
        baseurl: "{{ repo_baseurl_prefix }}{{ repo_baseurl }}"
        mirrorlist: "{{ repo_mirrorlist | default(omit) }}"
        enabled: True
        gpgcheck: "{{ gpg_check | default(False) }}"
        gpgkey: "{{ gpg_key_path | default(omit) }}"
        skip_if_unavailable: True
      delegate_to: "{{ vm_guest_ip }}"
      register: add_yum_repo_result

    - debug: var=add_yum_repo_result

    - block:
        - name: "Get new repo file path"
          set_fact:
            new_yum_repo_path: "{{ add_yum_repo_result.diff.after_header }}"

        - name: "Remove spaces in repo file"
          shell: "sed -i 's/ *= */=/' {{ new_yum_repo_path }}"
          delegate_to: "{{ vm_guest_ip }}"
      when:
        - add_yum_repo_result is defined
        - add_yum_repo_result.diff is defined
        - add_yum_repo_result.diff.after_header is defined
  when: guest_os_family in ["RedHat", "VMware Photon OS"]

# Add repo for SLES/SLED
- block:
    - name: "Set the prefix for local zypper repository"
      set_fact:
        repo_baseurl_prefix: "dir:"
      when:
        - repo_baseurl is sequence
        - repo_baseurl[0] == '/'

    - name: "Add zypper repository {{ repo_name }}"
      zypper_repository:
        name: "{{ repo_name }}"
        repo: "{{ repo_baseurl_prefix }}{{ repo_baseurl }}"
        state: "present"
        disable_gpg_check: True
        enabled: True
        runrefresh: True
      delegate_to: "{{ vm_guest_ip }}"
  when: guest_os_family == "Suse"
