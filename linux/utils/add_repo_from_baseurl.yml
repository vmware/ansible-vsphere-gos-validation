# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Add a package repository with given baseurl
# Parameter
#   repo_name: (Required)The repository name
#   repo_baseurl: (Required)The base url of the repository or the local repository dir
#   repo_mirrorlist: (Optional)The URL to a mirror list of the repository, which is used for RHEL-like OS.
#   repo_description: (Optional)The description of the repository
#   gpg_check: (Optinoal)True to check GPG key
#   gpg_key_path: (Optional)The GPG key path

- name: "Check repository name and baseurl parameters are valid"
  ansible.builtin.assert:
    that:
      - repo_name is defined and repo_name
      - repo_baseurl is defined and repo_baseurl
    fail_msg: >-
      Invalid parameters: repo_name is {{ repo_name | default('undefined') }},
      repo_baseurl is {{ repo_baseurl | default('undefined') }}

- name: "Add yum repository on {{ vm_guest_os_distribution }}"
  when: guest_os_ansible_pkg_mgr is match('yum|dnf')
  block:
    - name: "Set default RPM GPG key"
      when:
        - gpg_check is defined
        - gpg_check
        - gpg_key_path is undefined or not gpg_key_path
      block:
        - name: "Get default RPM GPG key file"
          include_tasks: get_rpm_gpg_key_file.yml

        - name: "Set default RPM GPG key"
          ansible.builtin.set_fact:
            gpg_key_path: "file://{{ guest_rpm_gpg_key_path }}"
          when: guest_rpm_gpg_key_path

        - name: "Test failed because not found RPM GPG key"
          ansible.builtin.fail:
            msg: "Can't not add repository when GPG check is enabled but RPM GPG key is not found."
          when: not guest_rpm_gpg_key_path

    - name: "Set fact of the prefix of repository base URL"
      ansible.builtin.set_fact:
        repo_baseurl_prefix: "{{ (repo_baseurl.startswith('/')) | ternary('file://', '') }}"

    - name: "Add repository {{ repo_name }} from {{ repo_baseurl }}"
      ansible.builtin.yum_repository:
        name: "{{ repo_name }}"
        description: "{{ repo_description | default(repo_name) }}"
        baseurl: "{{ repo_baseurl_prefix }}{{ repo_baseurl }}"
        mirrorlist: "{{ repo_mirrorlist | default(omit) }}"
        enabled: true
        gpgcheck: "{{ gpg_check | default(false) }}"
        gpgkey: "{{ gpg_key_path | default(omit) }}"
        skip_if_unavailable: true
      delegate_to: "{{ vm_guest_ip }}"
      register: add_yum_repo_result

    - name: "Display the result of adding yum repository"
      ansible.builtin.debug: var=add_yum_repo_result

    - name: "Update yum repository file"
      when:
        - add_yum_repo_result is defined
        - add_yum_repo_result.diff is defined
        - add_yum_repo_result.diff.after_header is defined
      block:
        - name: "Get new repository file path"
          ansible.builtin.set_fact:
            new_yum_repo_path: "{{ add_yum_repo_result.diff.after_header }}"

        - name: "Remove spaces in repository file"
          ansible.builtin.shell: "sed -i 's/ *= */=/' {{ new_yum_repo_path }}"
          delegate_to: "{{ vm_guest_ip }}"

- name: "Add zypper repository on {{ vm_guest_os_distribution }}"
  when: guest_os_ansible_pkg_mgr == 'zypper'
  block:
    - name: "Set fact of the prefix of repository base URL"
      ansible.builtin.set_fact:
        repo_baseurl_prefix: "{{ (repo_baseurl.startswith('/')) | ternary('dir:', '') }}"

    - name: "Add zypper repository {{ repo_name }}"
      community.general.zypper_repository:
        name: "{{ repo_name }}"
        repo: "{{ repo_baseurl_prefix }}{{ repo_baseurl }}"
        state: "present"
        disable_gpg_check: true
        enabled: true
        runrefresh: true
      delegate_to: "{{ vm_guest_ip }}"
