# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Workaround for getting distribution info about RHEL variant OS like ProLinux
# which doesn't have correct information in /etc/redhat-release
- include_tasks: get_file_stat_info.yml
  vars:
    guest_file_path: "/etc/redhat-release"

- name: "Set fact of /etc/redhat-release file info"
  ansible.builtin.set_fact:
    guest_redhat_release_exists: "{{ guest_file_exists }}"
    guest_redhat_release_stat: "{{ guest_file_stat }}"

- name: "Check and correct OS release in /etc/redhat-release"
  block:
    - include_tasks: get_file_stat_info.yml
      vars:
        guest_file_path: "/etc/system-release"

    - name: "Overwrithe /etc/redhat-release with /etc/system-release"
      ansible.builtin.shell: "cat /etc/system-release > /etc/redhat-release"
      delegate_to: "{{ vm_guest_ip }}"
      when:
        - guest_file_exists | bool
        - guest_file_stat.islnk | default(false)
        - guest_file_stat.lnk_source | default('') != "/etc/redhat-release"
  when:
    - guest_redhat_release_exists | bool
    - not (guest_redhat_release_stat.islink | default(false))

- include_tasks: ../../common/get_guest_system_info.yml

# Get Debian OS version from /etc/debian_version
- block:
    - name: "Get Debian version"
      ansible.builtin.command: cat /etc/debian_version
      register: debian_version_result
      delegate_to: "{{ vm_guest_ip }}"

    - name: "Update guest OS distribution version"
      ansible.builtin.set_fact:
        guest_os_ansible_distribution_ver: "{{ debian_version_result.stdout }}"
        guest_os_ansible_distribution_minor_ver: "{{ debian_version_result.stdout.split('.')[-1] }}"
      when: debian_version_result.stdout is defined and debian_version_result.stdout
  when: guest_os_ansible_distribution == "Debian"

- name: "Set OS family for {{ guest_os_ansible_distribution }} to RedHat"
  ansible.builtin.set_fact:
    guest_os_family: "RedHat"
  when:
    - "'ansible_distribution_file_variety' in guest_system_info"
    - guest_system_info.ansible_distribution_file_variety == "RedHat"
    - guest_os_family != "RedHat"

- name: "Set fact of OS bit"
  ansible.builtin.set_fact:
    guest_os_bit: "{% if guest_os_ansible_architecture in ['x86_64', 'amd64', 'aarch64'] %}64-bit{% else %}32-bit{% endif %}"

- include_tasks: check_guest_os_gui.yml

- name: "Print Linux guest OS information"
  ansible.builtin.debug:
    msg:
      - "Guest OS: {{ guest_os_ansible_distribution }}"
      - "Guest OS type: {{ guest_os_ansible_system }}"
      - "Guest OS arch: {{ guest_os_ansible_architecture }}"
      - "Guest OS bit: {{ guest_os_bit }}"
      - "Guest OS major version: {{ guest_os_ansible_distribution_major_ver }}"
      - "Guest OS minor version: {{ guest_os_ansible_distribution_minor_ver }}"
      - "Guest OS version: {{ guest_os_ansible_distribution_ver }}"
      - "Guest OS kernel: {{ guest_os_ansible_kernel }}"
      - "Guest OS release: {{ guest_os_ansible_distribution_release }}"
      - "Guest OS family: {{ guest_os_family }}"
      - "Guest OS with desktop environment: {{ guest_os_with_gui }}"
      - "Guest OS display manager: {{ guest_os_display_manager }}"

- name: "Set fact of VM guest OS type"
  ansible.builtin.set_fact:
    vm_guest_os_distribution: "{{ guest_os_ansible_distribution }} {{ guest_os_ansible_distribution_ver }} {{ guest_os_ansible_architecture }}"

- name: "Set fact that ansible system information about guest OS has been retrieved"
  ansible.builtin.set_fact:
    guest_os_system_info_retrieved: true
