# Copyright 2022-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   Get a list of block devices in guest OS
# Paramters:
#   guest_device_type: Get devices with such type, e.g. disk, pmem, rom, etc. Default is all devices.
# Return:
#   guest_device_list: A list of all guest devices or a list of guest devices with given type
#                      and attributes of name, type, size in bytes and filesystem type
#
- name: "Initialize the fact of device list in guest OS"
  ansible.builtin.set_fact:
    guest_device_list: []

- name: "Get device list on Linux"
  when: guest_os_ansible_system == 'linux'
  block:
    - name: "Get device list of type {{ guest_device_type }} on {{ vm_guest_os_distribution }}"
      ansible.builtin.shell: "lsblk -o NAME,TYPE,SIZE,FSTYPE -b --nodeps | grep -i {{ guest_device_type }}"
      delegate_to: "{{ vm_guest_ip }}"
      changed_when: false
      ignore_errors: true
      register: list_device_result

    - name: "Set fact of {{ guest_device_type }} device list on {{ vm_guest_os_distribution }}"
      ansible.builtin.set_fact:
        guest_device_list: >
          {{
             guest_device_list | union([
                 dict(['name', 'type', 'size', 'fstype'] |
                      zip_longest(item.split(), fillvalue=''))
             ])
          }}
      with_items: "{{ list_device_result.stdout_lines }}"
      when:
        - list_device_result is defined
        - list_device_result.stdout_lines is defined
        - list_device_result.stdout_lines | length > 0

- name: "Get device list on FreeBSD"
  when: guest_os_ansible_system == 'freebsd'
  block:
    - name: "Get device list of type {{ guest_device_type }} on {{ vm_guest_os_distribution }}"
      include_tasks: freebsd_get_geom_list.yml
      vars:
        freebsd_geom_class: "DISK"

    - name: "Update fact of GEOM class list with {{ guest_device_type }} only"
      ansible.builtin.set_fact:
        freebsd_device_list: "{{ freebsd_geom_list | selectattr('name', 'match', 'cd\\d+') }}"
      when: guest_device_type | lower == 'rom'

    - name: "Update fact of GEOM class list with {{ guest_device_type }} only"
      ansible.builtin.set_fact:
        freebsd_device_list: "{{ freebsd_geom_list | rejectattr('name', 'match', 'cd\\d+') }}"
      when: guest_device_type | lower != 'rom'

    - name: "Set fact of {{ guest_device_type }} device list on {{ vm_guest_os_distribution }}"
      ansible.builtin.set_fact:
        guest_device_list: >
          {{
             guest_device_list |
             union([{'name': item.name,
                     'size': item.provider.mediasize | default(0),
                     'model': item.provider.config.descr | default('') }])
          }}
      with_items: "{{ freebsd_device_list }}"
      when: freebsd_device_list | length > 0

- name: "Print device list in guest OS"
  ansible.builtin.debug: var=guest_device_list
