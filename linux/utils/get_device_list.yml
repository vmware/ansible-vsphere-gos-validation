# Copyright 2022-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   Get a list of block devices in guest OS
# Paramters:
#   guest_device_type: Get devices with such type, e.g. disk, pmem, rom, etc. Default is all devices.
# Return:
#   guest_device_list: A list of all guest devices or a list of guest devices with given type
#                      and attributes of name, type, size in bytes and filesystem type
#
- name: "Initialize the fact of device list and command"
  ansible.builtin.set_fact:
    guest_device_list: []
    get_device_list_cmd: |-
      {%- if guest_os_family == 'FreeBSD' -%}lsblk -d | grep -v SIZE | grep -v cd0
      {%- else -%}lsblk -o NAME,TYPE,SIZE,FSTYPE -b --nodeps
      {%- endif -%}

- name: "Update command to get device list with type of {{ guest_device_type }}"
  ansible.builtin.set_fact:
    get_device_list_cmd: "{{ get_device_list_cmd ~ ' | grep ' ~ guest_device_type }}"
  when:
    - guest_device_type is defined
    - guest_device_type
    - guest_os_family != "FreeBSD"

- name: "Get block device list"
  ansible.builtin.shell: "{{ get_device_list_cmd }}"
  delegate_to: "{{ vm_guest_ip }}"
  changed_when: false
  ignore_errors: true
  register: lsblk_result

- name: "Set the fact of block device list for {{ guest_os_ansible_distribution }}"
  ansible.builtin.set_fact:
    guest_device_list: >
      {{
         guest_device_list | union([
             dict(['name', 'type', 'size', 'fstype'] |
                  zip_longest(item.split(), fillvalue=''))
         ])
      }}
  with_items: "{{ lsblk_result.stdout_lines }}"
  when:
    - guest_os_family != 'FreeBSD'
    - lsblk_result is defined
    - lsblk_result.stdout_lines is defined
    - lsblk_result.stdout_lines | length > 0

- name: "Set the fact of block device list for FreeBSD"
  ansible.builtin.set_fact:
    guest_device_list: >
      {{
         guest_device_list | union([
             dict(['name', 'size', 'model'] |
                  zip_longest(item.split(None, maxsplit=2), fillvalue=''))
         ])
      }}
  with_items: "{{ lsblk_result.stdout_lines }}"
  when:
    - guest_os_family == 'FreeBSD'
    - lsblk_result is defined
    - lsblk_result.stdout_lines is defined
    - lsblk_result.stdout_lines | length > 0

- name: "Print device list in guest OS"
  ansible.builtin.debug: var=guest_device_list
