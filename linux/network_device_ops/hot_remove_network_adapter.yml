# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Hot remove the new network adapter
#
- name: "Hot remove the new network adapter from VM"
  include_tasks: ../../common/vm_remove_network_adapter.yml
  vars:
    netadapter_mac_addr: "{{ new_network_adapter_mac_addr }}"
    vm_remove_adapter_ignore_errors: True

- name: "Network adapter hot-remove succeeded"
  ansible.builtin.debug:
    msg: "Successfully hot removed new {{ adapter_type }} network adapter {{ new_network_adapter }}"
  when:
    - remove_adapter.changed is defined
    - remove_adapter.changed

- name: "Network adapter hot-remove failed"
  when: >-
    (remove_adapter.changed is undefined or
     not remove_adapter.changed)
  block:
    - name: "Known issue - PVRDMA network adapter hot-remove caused kernel crash on Oracle Linux 8.8"
      ansible.builtin.debug:
        msg:
          - "Hot removing PVRDMA network adapter could cause kernel crash on Oracle Linux 8.8."
          - "Please refer to https://kb.vmware.com/s/article/93131 for details."
      tags:
        - known_issue
      when:
        - remove_adapter.module_stderr is defined
        - (remove_adapter.module_stderr | 
           regex_findall("The guest operating system did not respond to a hot-remove request for device '.*' in a timely manner.") | length > 0)
        - adapter_type == "pvrdma"
        - esxi_version is version('7.0.0', '>=')
        - esxi_version is version('8.0.0', '<')
        - guest_os_ansible_distribution == "OracleLinux"
        - guest_os_ansible_distribution_ver == '8.8'

    - name: "Failed to hot remove new {{ adapter_type }} network adapter {{ new_network_adapter }}"
      ansible.builtin.fail:
        msg: "{{ remove_adapter }}"

- name: "Check VM connection is not broken after hot-remove"
  include_tasks: ../../common/vm_wait_connection.yml
  vars:
    vm_wait_connection_timeout: 60

- name: "Get network adapter status after hot-remove"
  include_tasks: ../utils/get_network_adapters_status.yml

- name: "Set fact of network adapter info after hot-remove"
  ansible.builtin.set_fact:
    network_adapters_after_hotremove: "{{ guest_network_adapters }}"

- name: "Assert new {{ adapter_type }} adapter interface is removed"
  ansible.builtin.assert:
    that:
      - network_adapters_after_hotremove | difference(network_adapters_before_hotadd) | length == 0
    fail_msg: "After hot removing the new network adapter from VM {{ vm_name }}, guest OS still can detect it"
    success_msg: "The new {{ adapter_type }} adapter interface is removed in guest OS on VM {{ vm_name }}"
