# Copyright 2025 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Reload network configs after making changes
#
- name: "Set fact of the command to reload network configs on {{ vm_guest_os_distribution }}"
  ansible.builtin.set_fact:
    network_reload_cmd: |-
      {%- if guest_os_network_manager == 'systemd-networkd' -%}
          networkctl reload
      {%- elif guest_os_network_manager == 'netplan' -%}
          netplan apply
      {%- elif guest_os_network_manager == 'NetworkManager' -%}
          nmcli connection reload && systemctl restart NetworkManager
      {%- elif guest_os_ansible_distribution == 'FreeBSD' -%}
          service netif restart && service routing restart && dhclient {{ guest_primary_nic_name }}
      {%- elif (guest_os_network_manager == 'wicked' and primary_nic_known_issue and
                new_network_adapter_name != guest_primary_nic_name) -%}
          systemctl restart wicked
      {%- endif -%}

- name: "Reload network configs on {{ vm_guest_os_distribution }}"
  when: network_reload_cmd
  block:
    - name: "Reload network configs so that changes can take effect"
      ansible.builtin.shell: "{{ network_reload_cmd }}"
      delegate_to: "{{ vm_guest_ip }}"
      async: 20
      poll: 0
      ignore_errors: true

    - name: "Sleep 30s for network reloading"
      ansible.builtin.pause:
        seconds: 30

    - name: "Update VM's guest IP in case it's changed"
      include_tasks: ../../common/update_inventory.yml
