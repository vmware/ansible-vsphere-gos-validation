# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for test PVRDMA network adapter hot-add/remove, connect and disconnect.
#
- name: pvrdma_network_device_ops
  hosts: localhost
  gather_facts: false
  vars:
    adapter_type: "pvrdma"
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            create_test_log_folder: true

        - name: "Check whether guest OS supports PVRDMA testing"
          include_tasks: check_pvrdma_support_status.yml

        - name: "Initialize facts for PVRDMA server VM and client VM"
          ansible.builtin.set_fact:
            pvrdma_server_vm_name: "{{ vm_name }}"
            pvrdma_server_vm_guest_ip: "{{ vm_guest_ip }}"
            pvrdma_server_test_log_folder: "{{ current_test_log_folder }}/{{ vm_name }}"
            pvrdma_client_vm_name: "{{ vm_name }}_client_{{ current_test_timestamp }}"
            pvrdma_client_vm_guest_ip: ""
            pvrdma_client_test_log_folder: "{{ current_test_log_folder }}/{{ vm_name }}_client_{{ current_test_timestamp }}"
            pvrdma_client_vm_invalid_ips: ["{{ vm_guest_ip }}"]

        - name: "Create test log folders for server VM and client VM"
          include_tasks: ../../common/create_directory.yml
          vars:
            dir_path: "{{ item }}"
            dir_mode: "0755"
          with_items:
            - "{{ pvrdma_server_test_log_folder }}"
            - "{{ pvrdma_client_test_log_folder }}"

        - name: "Set fact of current test log folder with server VM's test log folder"
          ansible.builtin.set_fact:
            current_test_log_folder: "{{ pvrdma_server_test_log_folder }}"

        - name: "Prepare for PVRDMA network adapter testing"
          include_tasks: prepare_network_device_test.yml

        - name: "Get RDMA devices in guest OS before hot-add"
          include_tasks: ../utils/get_rdma_device_info.yml

        - name: "Set fact of RDMA device before hot-add"
          ansible.builtin.set_fact:
            rdma_devices_before_hotadd: "{{ guest_rdma_device_info }}"

        - name: "Pepare vSphere Distributed Switch and Port Group for PVRDMA testing"
          include_tasks: ../../common/vds_network_setup.yml

        - name: "Tag VMkernel adapter and enable firewall rule on ESXi host for PVRDMA communication"
          include_tasks: ../../common/esxi_enable_pvrdma_configs.yml
          vars:
            pvrdma_vmk_nic: "{{ vds_vmk_device_name }}"

        - name: "Set the port group name for new network adapter"
          ansible.builtin.set_fact:
            vm_portgroup_name: "{{ vds_portgroup_name }}"

        - name: "Set facts for PVRDMA network config on server VM and client VM"
          ansible.builtin.set_fact:
            pvrdma_server_vm_ipv4: "{{ vds_vmk_ip_addr | ansible.utils.ipmath(1) }}"
            pvrdma_server_vm_net_prefix: "{{ vds_vmk_net_prefix }}"
            pvrdma_server_vm_gateway: "{{ vds_vmk_ip_addr }}"
            pvrdma_client_vm_ipv4: "{{ vds_vmk_ip_addr | ansible.utils.ipmath(2) }}"
            pvrdma_client_vm_primary_nic_mac: ""

        # Clone a new VM as client VM from current VM, and current VM as server
        - name: "Clone a new VM as client VM from current VM"
          include_tasks: ../../common/vm_instant_clone.yml
          vars:
            parent_vm_name: "{{ pvrdma_server_vm_name }}"
            cloned_vm_name: "{{ pvrdma_client_vm_name }}"

        # On server VM
        - name: "Set facts of new network adapter config for server VM"
          ansible.builtin.set_fact:
            new_nic_network: "{{ (pvrdma_server_vm_ipv4 ~ '/' ~ pvrdma_server_vm_net_prefix) | ansible.utils.ipaddr('network') }}"
            new_nic_ipv4: "{{ pvrdma_server_vm_ipv4 }}"
            new_nic_net_prefix: "{{ pvrdma_server_vm_net_prefix }}"
            new_nic_gateway: "{{ pvrdma_server_vm_gateway }}"

        - name: "Hot add a new {{ adapter_type }} network adapter on server VM and apply network config"
          include_tasks: hot_add_network_adapter.yml

        - name: "Update server VM guest IP when it changes"
          ansible.builtin.set_fact:
            pvrdma_client_vm_invalid_ips: "{{ pvrdma_client_vm_invalid_ips | union([vm_guest_ip]) }}"
            pvrdma_server_vm_guest_ip: "{{ vm_guest_ip }}"
          when: pvrdma_server_vm_guest_ip != vm_guest_ip

        - name: "Set fact of the PVRDMA network adapter mac address for server VM"
          ansible.builtin.set_fact:
            new_nic_mac_addr: "{{ new_network_adapter_mac_addr }}"

        - name: "Validate network adapter status changes on server VM"
          include_tasks: network_status_validate.yml

        - name: "Check PVRDMA device status and reload it if necessary on server VM"
          include_tasks: check_and_reload_pvrdma.yml

        # Switch to client VM
        - name: "Perform PVRDMA testing on client VM"
          include_tasks: pvrdma_client_network_device_ops.yml

        # Switch to server VM
        - name: "Switch to server VM"
          ansible.builtin.set_fact:
            vm_name: "{{ pvrdma_server_vm_name }}"
            vm_guest_ip: "{{ pvrdma_server_vm_guest_ip }}"
            current_test_log_folder: "{{ pvrdma_server_test_log_folder }}"

        - name: "Hot remove the new {{ adapter_type }} network adapter from server VM"
          include_tasks: hot_remove_network_adapter.yml
          vars:
            new_network_adapter_mac_addr: "{{ new_nic_mac_addr }}"

        - name: "Remove VMkernel adapter tag and disable firewall rule for PVRDMA communication"
          include_tasks: ../../common/esxi_disable_pvrdma_configs.yml

        - name: "Cleanup network"
          include_tasks: ../../common/vds_network_cleanup.yml
      rescue:
        - name: "Switch to server VM"
          ansible.builtin.set_fact:
            vm_name: "{{ pvrdma_server_vm_name }}"
            vm_guest_ip: "{{ pvrdma_server_vm_guest_ip }}"
            current_test_log_folder: "{{ pvrdma_server_test_log_folder }}"
          when:
            - pvrdma_server_vm_name is defined
            - pvrdma_server_vm_guest_ip is defined
            - pvrdma_server_test_log_folder is defined

        - name: "Collect server VM's guest OS information for triage"
          include_tasks: ../setup/linux_test_rescue.yml

        - name: "Collect server VM's RDMA devices"
          include_tasks: ../utils/get_rdma_device_info.yml

        - name: "Dump server VM's RDMA devices info to a json file"
          ansible.builtin.copy:
            dest: "{{ current_test_log_folder }}/ib_devinfo.json"
            content: "{{ guest_rdma_device_info }}"

        - name: "Collect server VM information at test failure"
          include_tasks: ../../common/test_rescue.yml
