# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is to check 'VGAuthService' service status in guest OS when
# open-vm-tools install type is "package". If the install type is not "package",
# this test case will be skipped with result "Not Applicable".
# If VMware Tools is not installed or not running, this test case result will be
# "Blocked".
#
- name: vgauth_check_service
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        - name: "Skip this test case for {{ guest_os_ansible_distribution }}"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "{{ guest_os_ansible_distribution }} doesn't have VGAuth service"
            skip_reason: "Not Supported"
          when: >-
            (guest_os_ansible_distribution == 'FreeBSD' or
             (guest_os_ansible_distribution == 'Flatcar' and
              guest_os_ansible_distribution_ver is version('3760.2.0', '<')))

        - name: "Skip test case when current open-vm-tools is not installed from package"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip test case because current open-vm-tools install type is {{ vmtools_install_type }}"
            skip_reason: "Not Applicable"
          when: vmtools_install_type != 'package'

        - name: "Set facts of VGAuthService process and service"
          include_tasks: ../utils/set_vgauth_facts.yml

        - name: "Check VGAuthService process is running"
          include_tasks: ../utils/check_process_status.yml
          vars:
            process_uid: "{{ vgauth_process.uid }}"
            process_name: "{{ vgauth_process.cmd }}"
            expected_process_state: "present"

        - name: "Initialize the fact that VGAuthService is not upheld"
          ansible.builtin.set_fact:
            vgauth_service_is_upheld: false

        # Since Flatcar Stable 3760.2.0, VGAuthService default status is disabled,
        # but it can be started via a dependency in
        # /usr/lib/systemd/system/multi-user.target.d/open-vm-tools-sysext-upholds.conf
        # See https://github.com/flatcar/Flatcar/issues/1330#issuecomment-1905544304
        - name: "Check VGAuthService is upheld or not for Flatcar"
          when: guest_os_ansible_distribution == "Flatcar"
          block:
            - name: "Get properties of systemd unit 'multi-user.target'"
              include_tasks: ../utils/get_systemd_unit_properties.yml
              vars:
                guest_systemd_unit: "multi-user.target"

            - name: "Update the fact that VGAuthService is upheld"
              ansible.builtin.set_fact:
                vgauth_service_is_upheld: true
              when:
                - guest_systemd_unit_properties.DropInPaths is defined
                - guest_systemd_unit_properties.DropInPaths is search('open-vm-tools-sysext-upholds.conf')
                - guest_systemd_unit_properties.Upholds is defined
                - guest_systemd_unit_properties.Upholds is search(vgauth_service_name ~ '.service')

        - name: "Check VGAuthService state and status is as expected"
          include_tasks: ../utils/check_service_status.yml
          vars:
            service_name: "{{ vgauth_service_name }}"
            expected_service_state: "running"
            expected_service_status: "{{ 'enabled' if not vgauth_service_is_upheld else '' }}"
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
      always:
        - name: "Collect VGAuthServcie logs"
          include_tasks: ../utils/collect_vgauth_logs.yml
          vars:
            vgauth_log_file_src: "{{ vgauth_latest_log_file }}"
          when:
            - vgauth_latest_log_file is defined
            - vgauth_latest_log_file
