# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for get inbox drivers' versions in Linux VM with
# open-vm-tools installed, and will write drivers version info into file
# 'inbox_driver_versions.txt' in the log path of current test run.
#
- name: check_inbox_driver
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            create_test_log_folder: true
            skip_test_no_vmtools: false

        # Use info in /etc/os-release to set the release value, unless it can't provide a complete version, e.g.
        # - VMware Photon OS doesn't have version in its PRETTY_NAME
        # - Debian and Pardus only have major version in its PRETTY_NAME and VERSION
        # Then use ansible distribution info to set the release value.
        # SLED/SLES 15 or earlier releases have "SP" in its PRETTY_NAME, so always use PRETTY_NAME for SLED/SLES
        - name: "Set fact of the OS Release version"
          ansible.builtin.set_fact:
            os_release_version: >-
              {%- if guest_os_release.PRETTY_NAME | default('') and
               (guest_os_ansible_distribution in ['SLED', 'SLES'] or
                guest_os_ansible_distribution_ver in guest_os_release.PRETTY_NAME)-%}
                  {{ guest_os_release.PRETTY_NAME }}
              {%- elif guest_os_release.NAME | default('') and guest_os_ansible_distribution_ver in guest_os_release.VERSION | default('') -%}
                  {{ guest_os_release.NAME ~ ' ' ~ guest_os_release.VERSION }}
              {%- else -%}
                  {{ guest_os_ansible_distribution ~ ' ' ~ guest_os_ansible_distribution_ver }}
              {%- endif %} {{ guest_os_ansible_architecture }}

        - name: "Initialize the fact of inbox drivers' versions dict"
          ansible.builtin.set_fact:
            inbox_drivers_versions: {'Release': "{{ os_release_version }}",
                                     'kernel': "{{ guest_os_ansible_kernel }}",
                                     'open-vm-tools': 'N/A',
                                     'cloud-init': 'N/A'}

        - name: "Collect open-vm-tools version"
          ansible.builtin.set_fact:
            inbox_drivers_versions: "{{ inbox_drivers_versions | combine({'open-vm-tools': vmtools_info_from_vmtoolsd}) }}"
          when:
            - vmtools_is_ovt
            - vmtools_install_type == "package"

        - name: "Get cloud-init version"
          include_tasks: ../utils/get_cloudinit_version.yml

        - name: "Collect cloud-init version"
          ansible.builtin.set_fact:
            inbox_drivers_versions: "{{ inbox_drivers_versions | combine({'cloud-init': cloudinit_version}) }}"
          when:
            - cloudinit_version is defined
            - cloudinit_version

        - name: "Get Xorg version"
          include_tasks: get_xorg_version.yml

        - name: "Get Linux inbox drivers"
          include_tasks: get_inbox_drivers.yml
          when: guest_os_ansible_distribution != "FreeBSD"

        - name: "Get FreeBSD inbox drivers"
          include_tasks: get_freebsd_inbox_drivers.yml
          when: guest_os_ansible_distribution == "FreeBSD"

      rescue:
        - name: "Collect Linux guest OS information for triage"
          include_tasks: ../setup/linux_test_rescue.yml

        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
      always:
        - name: "Dump inbox drivers versions into a json file"
          when:
            - inbox_drivers_versions is defined
            - inbox_drivers_versions | length > 0
          block:
            - name: "Print inbox drivers versions"
              ansible.builtin.debug: var=inbox_drivers_versions

            - name: "Create test case log direcotry"
              include_tasks: ../../common/create_directory.yml
              vars:
                dir_path: "{{ current_test_log_folder }}"

            - name: "Set fact of the output file path"
              ansible.builtin.set_fact:
                os_release_info_file_path: "{{ current_test_log_folder }}/{{ vm_guest_os_distribution.replace('/', '-').replace(' ', '-') | lower }}.json"

            - name: "The inbox drivers versions will be dump to a json file"
              ansible.builtin.debug: var=os_release_info_file_path

            - name: "Dump inbox drivers versions"
              ansible.builtin.copy:
                dest: "{{ os_release_info_file_path }}"
                content: "{{ [inbox_drivers_versions] | to_nice_json }}"
                mode: '0644'
