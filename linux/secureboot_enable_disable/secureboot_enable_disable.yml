# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for check VM secure boot can be enabled
# and disabled successfully when VM firmware is UEFI and VM hardware
# version >= 13. After secure boot enabled below line will be added
# into vmx file:
#   uefi.secureBoot.enabled = "TRUE"
# Note: This test case will not check if target guest OS supports
# secure boot before enable it, please refer to VMware KB article for
# secure boot support matrix.
#
- name: secureboot_enable_disable
  hosts: localhost
  gather_facts: no
  vars_files:
    - "{{ testing_vars_file | default('../../vars/test.yml') }}"
  tasks:
    - block:
        - include_tasks: ../setup/test_setup.yml

        - include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip testcase because {{ guest_os_ansible_distribution }} {{ guest_os_ansible_distribution_ver }} doesn't support secure boot."
          when: >
            (guest_os_ansible_distribution == "Rocky" and guest_os_ansible_distribution_ver is version('8.4', '<=')) or
            (guest_os_ansible_distribution == "Astra Linux (Orel)")

        - include_tasks: ../../common/vm_get_boot_info.yml

        - include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "The VM's config doesn't support secureboot testing: VM hardware version is {{ vm_hardware_version_num }}, firmware is {{ vm_firmware }}"
          when: >
            (vm_firmware | lower != "efi") or
            (vm_hardware_version_num | int < 13)

        - name: "Initialize test result variables"
          set_fact:
            secureboot_enabled_pass: False
            secureboot_disabled_pass: False

        - include_tasks: ../utils/shutdown.yml

        # Enable secureboot when secureboot is not enabled
        - include_tasks: ../../common/vm_set_boot_options.yml
          vars:
            secure_boot_enabled_set: True
          when: not vm_secureboot_enabled

        - include_tasks: ../../common/vm_set_power_state.yml
          vars:
            vm_power_state_set: 'powered-on'

        - include_tasks: ../../common/update_inventory.yml

        - include_tasks: ../../common/vm_wait_log_msg.yml
          vars:
            vm_wait_log_name: "vmware.log"
            vm_wait_log_msg: "Image APPROVED"
            vm_wait_log_retries: 1
            vm_wait_log_ignore_errors: True

        - include_tasks: ../utils/get_system_firmware.yml

        - name: "Set fact of secure boot enable test result"
          set_fact:
            secureboot_enabled_pass: True
          when:
            - vm_wait_log_msg_success | bool
            - guest_firmware == "EFI"

        # Disable secureboot
        - include_tasks: ../utils/shutdown.yml

        - include_tasks: ../../common/vm_set_boot_options.yml
          vars:
            secure_boot_enabled_set: False

        - include_tasks: ../../common/vm_set_power_state.yml
          vars:
            vm_power_state_set: 'powered-on'

        - include_tasks: ../../common/update_inventory.yml

        - include_tasks: ../utils/get_system_firmware.yml

        - name: "Set fact of secure boot disable test result"
          set_fact:
            secureboot_disabled_pass: True
          when: guest_firmware == "EFI"

        - name: "Check secure boot enable and disable test results"
          assert:
            that:
              - secureboot_enabled_pass and secureboot_disabled_pass
            fail_msg: "Enable secureboot result: {{ secureboot_enabled_pass }}, disable secureboot result: {{ secureboot_disabled_pass }}"
            success_msg: "Enable secureboot result: {{ secureboot_enabled_pass }}, disable secureboot result: {{ secureboot_disabled_pass }}"
      rescue:
        - include_tasks: ../setup/test_rescue.yml
