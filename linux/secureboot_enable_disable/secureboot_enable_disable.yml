# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for check VM secure boot can be enabled
# and disabled successfully when VM firmware is UEFI and VM hardware
# version >= 13. After secure boot enabled below line will be added
# into vmx file:
#   uefi.secureBoot.enabled = "TRUE"
# Note: This test case will not check if target guest OS supports
# secure boot before enable it, please refer to VMware KB article for
# secure boot support matrix.
#
- name: secureboot_enable_disable
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            create_test_log_folder: true

        - name: "Get VM boot config"
          include_tasks: ../../common/vm_get_boot_info.yml

        - name: "Skip test case '{{ ansible_play_name }}' for {{ vm_firmware }} VM"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Secure boot is not applicable for VM with {{ vm_firmware }} firmware"
            skip_reason: "Not Applicable"
          when: vm_firmware | lower != "efi"

        - name: "Check secure boot is supported or not"
          include_tasks: check_secureboot_support_status.yml

        - name: "Initialize test result variables"
          ansible.builtin.set_fact:
            secureboot_enabled_pass: false
            secureboot_disabled_pass: false

        - name: "Shutdown guest OS"
          include_tasks: ../utils/shutdown.yml

        - name: "Enable secure boot for VM"
          include_tasks: ../../common/vm_set_boot_options.yml
          vars:
            secure_boot_enabled_set: true
          when: not vm_secureboot_enabled

        - name: "Power on VM"
          include_tasks: ../../common/vm_set_power_state.yml
          vars:
            vm_power_state_set: 'powered-on'

        - name: "Update inventory"
          include_tasks: ../../common/update_inventory.yml

        - name: "Check VM image is approved in vmware.log when secure boot is enabled"
          include_tasks: ../../common/vm_wait_log_msg.yml
          vars:
            vm_wait_log_name: "vmware.log"
            vm_wait_log_msg: "Image APPROVED"
            vm_wait_log_retries: 1
            vm_wait_log_ignore_errors: true

        - name: "Get system firmware in guest OS"
          include_tasks: ../utils/get_system_firmware.yml

        - name: "Set fact of secure boot enable test result"
          ansible.builtin.set_fact:
            secureboot_enabled_pass: true
          when:
            - vm_wait_log_msg_success | bool
            - guest_firmware == "EFI"

        # Disable secureboot
        - name: "Shutdown guest OS"
          include_tasks: ../utils/shutdown.yml

        - name: "Disable secure boot for VM"
          include_tasks: ../../common/vm_set_boot_options.yml
          vars:
            secure_boot_enabled_set: false

        - name: "Power on VM after disabling secure boot"
          include_tasks: ../../common/vm_set_power_state.yml
          vars:
            vm_power_state_set: 'powered-on'

        - name: "Update inventory"
          include_tasks: ../../common/update_inventory.yml

        - name: "Get system firmware in guest OS"
          include_tasks: ../utils/get_system_firmware.yml

        - name: "Set fact of secure boot disable test result"
          ansible.builtin.set_fact:
            secureboot_disabled_pass: true
          when: guest_firmware == "EFI"

        - name: "Check secure boot enable and disable test results"
          ansible.builtin.assert:
            that:
              - secureboot_enabled_pass and secureboot_disabled_pass
            fail_msg: "Enable secureboot result: {{ secureboot_enabled_pass }}, disable secureboot result: {{ secureboot_disabled_pass }}"
            success_msg: "Enable secureboot result: {{ secureboot_enabled_pass }}, disable secureboot result: {{ secureboot_disabled_pass }}"
      rescue:
        - name: "Collect Linux guest OS information for triage"
          include_tasks: ../setup/linux_test_rescue.yml

        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
