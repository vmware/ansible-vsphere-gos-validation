# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is to verify open-vm-tools packages, processes, and service
# status in guest OS when open-vm-tools install type is "package". 
# The VMware Tools status should be installed and running, open-vm-tools packages
# should be installed, vmtoolsd processes should be running and service should
# be enabled and running.
# If open-vm-tools install type is not "package", this test case will be skipped
# with result "Not Applicable".
# If VMware Tools status is not installed or not running, this test case result
# will be "Blocked".
#
- name: ovt_verify_status
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        - name: "Skip test case when current open-vm-tools is not installed from package"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip test case because current open-vm-tools install type is {{ vmtools_install_type }}"
            skip_reason: "Not Applicable"
          when: vmtools_install_type != 'package'

        - name: "Check VMware Tools status is running"
          include_tasks: check_vmtools_status.yml
          vars:
            expected_vmtools_status: "running"

        - name: "Set facts of open-vm-tools processes and services"
          include_tasks: ../utils/set_ovt_facts.yml

        - name: "Add user 'vmware' to check vmusr process"
          when: ovt_processes | length == 2
          block:
            - name: "Add new user 'vmware' if it doesn't exist"
              include_tasks: ../utils/add_user.yml
              vars:
                guest_user_name: "vmware"

            - name: "Enalbe auto login for user 'vmware'"
              include_tasks: ../utils/enable_auto_login.yml
              vars:
                autologin_user: "vmware"

            - name: "Reboot guest OS and login as user 'vmware'"
              include_tasks: ../utils/reboot.yml

        - name: "Check open-vm-tools packages are installed"
          include_tasks: check_ovt_package.yml
          vars:
            expected_package_state: "present"
          with_items: "{{ ovt_packages }}"
          loop_control:
            loop_var: package_name
          when: guest_os_ansible_distribution != 'Flatcar'

        - name: "Check open-vm-tools processes are running"
          include_tasks: ../utils/check_process_status.yml
          vars:
            expected_process_state: "present"
            process_uid: "{{ ovt_process.uid }}"
            process_name: "{{ ovt_process.cmd }}"
          with_items: "{{ ovt_processes }}"
          loop_control:
            loop_var: ovt_process

        - name: "Initialize the fact that open-vm-tools service is not upheld"
          ansible.builtin.set_fact:
            ovt_service_is_upheld: false

        # Since Flatcar Stable 3760.2.0, open-vm-tools service default status is disabled,
        # but it can be started via a dependency in
        # /usr/lib/systemd/system/multi-user.target.d/open-vm-tools-sysext-upholds.conf
        # See https://github.com/flatcar/Flatcar/issues/1330#issuecomment-1905544304
        - name: "Check open-vm-tools service is upheld or not for Flatcar"
          when: guest_os_ansible_distribution == "Flatcar"
          block:
            - name: "Get properties of systemd unit 'multi-user.target'"
              include_tasks: ../utils/get_systemd_unit_properties.yml
              vars:
                guest_systemd_unit: "multi-user.target"
                guest_systemd_show_properties: "DropInPaths,Upholds"

            - name: "Update the fact that open-vm-tools service is upheld"
              ansible.builtin.set_fact:
                ovt_service_is_upheld: true
              when:
                - guest_systemd_unit_properties.DropInPaths is defined
                - guest_systemd_unit_properties.DropInPaths is search('open-vm-tools-sysext-upholds.conf')
                - guest_systemd_unit_properties.Upholds is defined
                - guest_systemd_unit_properties.Upholds is search(ovt_service_name ~ '.service')

        - name: "Check state and status of open-vm-tools service {{ ovt_service_name }}"
          include_tasks: ../utils/check_service_status.yml
          vars:
            service_name: "{{ ovt_service_name }}"
            expected_service_state: "running"
            expected_service_status: "{{ 'enabled' if not ovt_service_is_upheld else '' }}"
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
