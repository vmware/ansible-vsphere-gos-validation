# Copyright 2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
#
- name: "Set fact to update VMware Tools by default"
  ansible.builtin.set_fact:
    update_vmtools: true
  when: update_vmtools is undefined

- name: "Test setup"
  include_tasks: ../setup/test_setup.yml

- name: "Skip test case because VM has open-vm-tools installed and update_vmtools is false"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: "Test case '{{ ansible_play_name }}' is skipped because VM has open-vm-tools and update_vmtools is set to: {{ update_vmtools }}"
    skip_reason: "Skipped"
  when:
    - vmtools_is_installed
    - not update_vmtools

# Flatcar and RHCOS doesn't support to install open-vm-tools
- name: "Skip test case for {{ guest_os_ansible_distribution }}"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: "Skip test case {{ ansible_play_name }} because {{ guest_os_ansible_distribution }} doesn't support installing open-vm-tools"
    skip_reason: "Not Supported"
  when: guest_os_ansible_distribution in ['Flatcar', 'RHCOS']

- name: "Skip test case when current open-vm-tools is not installed from package"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: >-
      Skip test case because current open-vm-tools install type is {{ vmtools_install_type }},
      and the uninstall method is unknown.
    skip_reason: "Not Applicable"
  when:
    - vmtools_is_installed
    - vmtools_install_type != 'package'

- name: "Set open-vm-tools default install type"
  ansible.builtin.set_fact:
    linux_ovt_install_type: "package"
  when: linux_ovt_install_type is undefined or not linux_ovt_install_type

- name: "Check open-vm-tools install type is valid"
  ansible.builtin.assert:
    that:
      - linux_ovt_install_type in ['package', 'source']
    fail_msg: "The value of 'linux_ovt_install_type' must be 'package' or 'source'"
    success_msg: "The open-vm-tools install type is {{ linux_ovt_install_type }}"

- name: "Skip test case when open-vm-tools install type is not applicable"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: >-
      Skip test case {{ ansible_play_name }} when open-vm-tools install type is
      set to {{ linux_ovt_install_type }}
    skip_reason: "Skipped"
  when: >-
    (ansible_play_name == 'ovt_verify_pkg_install' and linux_ovt_install_type != 'package') or
    (ansible_play_name == 'ovt_verify_src_install' and linux_ovt_install_type != 'source')

- name: "Block test case because of missing linux_ovt_tarball_url for open-vm-tools source install"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: >-
      Skip test case {{ ansible_play_name }} because 'linux_ovt_tarball_url' is not set, which is
      required when open-vm-tools install type is {{ linux_ovt_install_type }}.
    skip_reason: "Blocked"
  when:
    - linux_ovt_install_type == 'source'
    - linux_ovt_tarball_url is undefined or not linux_ovt_tarball_url

# At present, only Debian, Ubuntu, Pardus and FreeBSD are supported to
# install open-vm-tools from source.
# We will gradually expand guest OS support scope in future
- name: "Skip test case for {{ guest_os_ansible_distribution }}"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: >-
      Skip test case {{ ansible_play_name }} because installing open-vm-tools from
      source is not supported on {{ guest_os_ansible_distribution }} at present.
    skip_reason: "Not Supported"
  when:
    - linux_ovt_install_type == "source"
    - guest_os_family not in ["Suse", "Debian", "FreeBSD"]

- name: "Initialize fact whether to uninstall open-vm-tools"
  ansible.builtin.set_fact:
    uninstall_tools: "{{ vmtools_is_installed }}"

- name: "Set facts of open-vm-tools packages, processes and service"
  include_tasks: ../utils/set_ovt_facts.yml

- name: "Set facts of VGAuthService process and service"
  include_tasks: ../utils/set_vgauth_facts.yml

- name: "Get OS commands to uninstall or install open-vm-tools"
  include_tasks: get_install_uninstall_cmd.yml

- name: "Uninstall open-vm-tools packages for reinstall"
  when: uninstall_tools | bool
  block:
    # Download original services files for reuse
    - name: "Download original open-vm-tools service files"
      include_tasks: download_service_files.yml
      when: linux_ovt_install_type == "source"

    - name: "Uninstall open-vm-tools packages"
      include_tasks: uninstall_ovt.yml

- name: "Configure package repositories on {{ vm_guest_os_distribution }}"
  include_tasks: ../utils/config_repos.yml
  when: guest_os_ansible_system == "linux"
