# Copyright 2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is to verify open-vm-tools installation with guest OS package manager.
# If guest OS doesn't have open-vm-tools, this case will install open-vm-tools from OS ISO image
# (e.g. RHEL, SLES, SLED, etc),or install from official online repository (e.g. Ubuntu, Debian,
# VMware Photon OS, CentOS, etc).
# If it already has open-vm-tools installed from package, and update_tools parameter is set "true"
# in vars/test.yml, it will reinstall open-vm-tools.
# If it already has open-vm-tools not installed from package, this test case will be skipped with
# result "Not Applicable" because of unknown uninstall method.
#
- name: ovt_verify_pkg_install
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - include_tasks: ../setup/test_setup.yml

        - name: "Set update VMware tools by default"
          ansible.builtin.set_fact:
            update_vmtools: true
          when: update_vmtools is undefined

        # Flatcar and RHCOS doesn't support to install open-vm-tools
        - include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip test case because {{ guest_os_ansible_distribution }} doesn't support installing open-vm-tools"
            skip_reason: "Not Supported"
          when: guest_os_ansible_distribution in ['Flatcar', 'RHCOS']

        # VM has open-vm-tools installed and update_vmtools is set false
        - include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Test case '{{ ansible_play_name }}' is skipped because update_vmtools is set to: {{ update_vmtools }}"
            skip_reason: "Skipped"
          when: not update_vmtools | bool

        - name: "Skip test case when current open-vm-tools is not installed from package"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: >-
              Skip test case because current open-vm-tools install type is {{ vmtools_install_type }},
              and the uninstall method is unknown.
            skip_reason: "Not Applicable"
          when:
            - vmtools_is_installed is defined
            - vmtools_is_installed
            - vmtools_install_type != 'package'

        # Initialize variables
        - name: "Initialize variables for installing open-vm-tools"
          ansible.builtin.set_fact:
            uninstall_tools: false
            install_tools: false

        - name: "Set the fact for uninstalling open-vm-tools"
          ansible.builtin.set_fact:
            uninstall_tools: true
          when:
            - vmtools_is_installed is defined
            - vmtools_is_installed

        - name: "Set facts of open-vm-tools packages, processes and service"
          include_tasks: ../utils/set_ovt_facts.yml

        - name: "Set facts of VGAuthService process and service"
          include_tasks: ../utils/set_vgauth_facts.yml

        - name: "Get OS commands to uninstall or install open-vm-tools"
          include_tasks: get_install_uninstall_cmd.yml

        - name: "Uninstall open-vm-tools for reinstall"
          include_tasks: uninstall_ovt.yml
          when:
            - uninstall_tools is defined
            - uninstall_tools

        # Initialize the variable for installing tools
        - name: "Set the fact for installing tools"
          ansible.builtin.set_fact:
            install_tools: true
          when: >
            (vmtools_is_installed is undefined) or
            (not vmtools_is_installed) or
            (vmtools_is_removed is defined and vmtools_is_removed)

        # Install open-vm-tools packages
        - include_tasks: install_ovt.yml
          when:
            - install_tools is defined
            - install_tools

        # Refresh VM guest info
        - include_tasks: ../../common/vm_get_guest_info.yml

        # Take a new snapshot and set it as base snapshot when test passes
        - include_tasks: ../../common/reset_base_snapshot.yml
          when:
            - install_tools is defined
            - install_tools
      rescue:
        - include_tasks: ../../common/test_rescue.yml
          vars:
            exit_testing_when_fail: true
