# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Set the parameters in static and DHCP GOSC specifications
# Note: refer to this page to set time zone id and name:
# https://msdn.microsoft.com/en-us/library/ms912391.aspx
#
- name: "Prepare router VM, vSwitch and portgroup"
  include_tasks: ../../common/network_testbed_setup.yml
  when:
    - (router_vm_deployed is undefined) or (not router_vm_deployed | bool)
    - gosc_network_type == "static"

- name: "Save the VM password before GOSC"
  ansible.builtin.set_fact:
    vm_passwd_before_gosc: "{{ vm_password }}"
  when: vm_username | lower == "administrator"

- name: "Set fact of Windows GOSC spec with common items"
  ansible.builtin.set_fact:
    win_gosc_spec: {
      'gosc_hostname': "win-gosc-{{ gosc_network_type }}",
      'gosc_timezone_id': "2",
      'gosc_timezone_name': "Hawaiian Standard Time",
      'gosc_autologon': true,
      'gosc_autologon_count': 10,
      'gosc_logon_password': "B1gd3m0z!",
      'gosc_echo_file': "C:\\win_gosc_runonce.txt",
      'gosc_echo_string': "Windows {{ gosc_network_type }} GOSC automation test"
    }

- name: "Add run once command to Windows GOSC spec"
  ansible.builtin.set_fact:
    win_gosc_spec: >-
      {{ win_gosc_spec | combine({'gosc_runonce':
      "cmd.exe /c echo " ~ win_gosc_spec.gosc_echo_string ~ " > " ~ win_gosc_spec.gosc_echo_file}) }}

- name: "Set fact of Windows GOSC spec with static IP"
  ansible.builtin.set_fact:
    win_gosc_spec: >-
      {{ win_gosc_spec | combine({
      'gosc_dns_servers': ['192.168.0.1', '192.168.0.2'],
      'gosc_ip': '192.168.192.10',
      'gosc_domain': "gosc.test.com",
      'gosc_dns_suffix': ["test.com", "gosc.test.com"],
      'gosc_gateway': vlan_gateway,
      'gosc_netmask': '255.255.255.0',
      'gosc_network': portgroup_name}) }}
  when: gosc_network_type == "static"

- name: "Set fact of Windows GOSC spec with DHCP IP"
  ansible.builtin.set_fact:
    win_gosc_spec: >-
      {{ win_gosc_spec | combine({'gosc_network': (gosc_dhcp_network | default('VM Network'))}) }}
  when: gosc_network_type == "dhcp"

- name: "Print Windows GOSC spec"
  ansible.builtin.debug: var=win_gosc_spec

- name: "Set fact of default Windows dir"
  ansible.builtin.set_fact:
    win_windows_dir: '$env:windir'
    win_dir_separator: '\'
- name: "Get directory path in Windows guest OS"
  include_tasks: ../utils/win_get_path.yml
  vars:
    win_get_path_specified: "{{ win_windows_dir }}"
- name: "Set fact of the absolute path of Windows dir"
  ansible.builtin.set_fact:
    win_windows_dir: "{{ win_get_path_absolute }}"

- name: "Handle known issues"
  include_tasks: handle_guest_known_issues.yml

- name: "Shutdown guest OS before executing GOSC"
  include_tasks: ../utils/win_shutdown_restart.yml
  vars:
    set_win_power_state: "shutdown"
