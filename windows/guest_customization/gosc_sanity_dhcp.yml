# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for check guest customization with DHCP
# network configuration. If VMware tools is not installed, the test
# result is 'No Run'.
# Note: VM guest customization requires vCenter server.
#
- name: gosc_sanity_dhcp
  hosts: localhost
  gather_facts: false
  tasks:
    - block:
        - include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        - include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Test case '{{ ansible_play_name }}' is blocked because vCenter server is not configured"
            skip_reason: "Blocked"
          when: vcenter_is_defined is undefined or not vcenter_is_defined | bool

        - include_tasks: win_gosc_prepare.yml
        - name: Set fact of the network customize type to dhcp
          ansible.builtin.set_fact:
            customize_network_type: 'dhcp'
            vm_dhcp_gosc_start: true
        - include_tasks: win_gosc_execution.yml
          vars:
            customize_network: "{{ gosc_dhcp_network | default('VM Network') }}"
            timeout: 2400

        # Check guest customization state is completed
        - include_tasks: ../../common/vm_wait_log_msg.yml
          vars:
            vm_wait_log_name: "vmware.log"
            vm_wait_log_msg: "Chipset: The guest has requested that the virtual machine be hard reset.*|GuestRpc: Reinitializing Channel 0.*"
            vm_wait_log_retries: 60
            vm_wait_log_delay: 30
            vm_wait_log_msg_times: 2
          when:
            - esxi_version is defined and esxi_version
            - esxi_version is version('6.5.0', '=')
        - include_tasks: ../../common/vm_wait_gosc_completed.yml
          when: >
            (esxi_version is undefined) or
            (not esxi_version) or
            (esxi_version is version('6.5.0', '>'))

        # Wait guest get IP address
        - include_tasks: ../../common/vm_wait_guest_ip.yml

        # Get guest IP after customization from guestinfo
        - include_tasks: ../../common/vm_get_ip_from_vmtools.yml
        - name: Set fact of the guest IP after GOSC
          ansible.builtin.set_fact:
            guest_ip_after_gosc: "{{ vm_guest_ip }}"
        - include_tasks: ../utils/win_check_winrm.yml

        # Get guest hostname after customization from guestinfo
        - include_tasks: ../../common/vm_wait_guest_hostname.yml
          vars:
            wait_guest_hostname: "{{ customize_gos_hostname }}"

        - include_tasks: ../../common/vm_get_config.yml
          vars:
            property_list: ['guest.hostName']
        - name: Set fact of the hostname after GOSC
          ansible.builtin.set_fact:
            hostname_after_gosc: "{{ vm_config.guest.hostName }}"
        - ansible.builtin.debug:
            msg: "Get guest OS hostname/IP after customization: {{ hostname_after_gosc }}/{{ guest_ip_after_gosc }}"

        - name: Check if IP address and hostname changed after customization
          ansible.builtin.assert:
            that:
              - "{{ hostname_before_gosc != hostname_after_gosc }}"
              - "{{ hostname_after_gosc == customize_gos_hostname }}"
            success_msg: "Check hostname after GOSC succeed."
            fail_msg: "Check hostname after GOSC failed."

        # After customize Administrator user password changed
        # Add customizated IP address to Ansible hosts
        - include_tasks: ../utils/add_windows_host.yml
          vars:
            vm_password: "{{ customize_logon_password }}"
          when: vm_username | lower == "administrator"

        - name: "Add customizated IP address to Ansible hosts using user '{{ vm_username }}'"
          include_tasks: ../utils/add_windows_host.yml
          when: vm_username | lower != "administrator"

        # Check auto admin logon and count
        - include_tasks: check_autologon_count.yml
        # Check run once command executed
        - include_tasks: check_runonce_command.yml
        # Check timezone configured
        - include_tasks: check_timezone.yml
      rescue:
        - include_tasks: ../../common/test_rescue.yml
      always:
        - block:
            - include_tasks: ../../common/vm_get_power_state.yml
            # Get all gosc logs from guest to local
            - include_tasks: get_gosc_logs_network.yml
              when: vm_power_state_get == "poweredOn"
          when: vm_dhcp_gosc_start is defined and vm_dhcp_gosc_start
