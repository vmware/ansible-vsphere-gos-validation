# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for check guest customization with DHCP
# network configuration. If VMware tools is not installed, the test
# result is 'No Run'.
# Note: VM guest customization requires vCenter server.
#
- name: gosc_sanity_dhcp
  hosts: localhost
  gather_facts: no
  vars_files:
    - "{{ testing_vars_file | default('../../vars/test.yml') }}"
  tasks:
    - block:
        - include_tasks: ../setup/test_setup.yml
        - block:
            - include_tasks: win_gosc_prepare.yml
            - name: Set fact of the network customize type to dhcp
              set_fact:
                customize_network_type: 'dhcp'
            - include_tasks: win_gosc_execution.yml
              vars:
                customize_network: "{{ gosc_dhcp_network | default('VM Network') }}"
                timeout: 2400

            # Check guest customization state is completed
            - include_tasks: check_guest_reset_time.yml
              when:
                - esxi_version is defined and esxi_version
                - esxi_version is version('6.5.0', '=') 
            - include_tasks: ../../common/vm_wait_gosc_completed.yml
              when: >
                (esxi_version is undefined) or
                (not esxi_version) or
                (esxi_version is version('6.5.0', '>'))

            # Wait guest get IP address
            - include_tasks: ../../common/vm_wait_guest_ip.yml

            # Get guest IP after customization from guestinfo
            - include_tasks: ../../common/vm_get_ip_from_vmtools.yml
            - name: Set fact of the guest IP after GOSC
              set_fact:
                guest_ip_after_gosc: "{{ vm_guest_ip }}"
            - include_tasks: ../utils/win_check_winrm.yml

            # Get guest hostname after customization from guestinfo
            - include_tasks: ../../common/vm_wait_guest_hostname.yml
              vars:
                wait_guest_hostname: "{{ customize_gos_hostname }}"

            - include_tasks: ../../common/vm_get_config.yml
              vars:
                property_list: ['guest.hostName']
            - name: Set fact of the hostname after GOSC
              set_fact:
                hostname_after_gosc: "{{ vm_config.guest.hostName }}"
            - debug:
                msg: "Get guest OS hostname/IP after customization: {{ hostname_after_gosc }}/{{ guest_ip_after_gosc }}"

            - name: Check if IP address and hostname changed after customization
              assert:
                that:
                  - "{{ hostname_before_gosc != hostname_after_gosc }}"
                  - "{{ hostname_after_gosc == customize_gos_hostname }}"
                success_msg: "Check hostname after GOSC succeed."
                fail_msg: "Check hostname after GOSC failed."

            # After customize Administrator user password changed
            # Add customizated IP address to Ansible hosts
            - include_tasks: ../utils/add_windows_host.yml
              vars:
                vm_password: "{{ customize_logon_password }}"
              when: vm_username | lower == "administrator"

            - name: "Add customizated IP address to Ansible hosts using user '{{ vm_username }}'"
              include_tasks: ../utils/add_windows_host.yml
              when: vm_username | lower != "administrator"

            # Check auto admin logon and count
            - include_tasks: check_autologon_count.yml
            # Check run once command executed
            - include_tasks: check_runonce_command.yml
            # Check timezone configured
            - include_tasks: check_timezone.yml
          when:
            - vmtools_is_installed and vmtools_is_running
            - vcenter_is_defined is defined and vcenter_is_defined
        - name: "Skip testcase: {{ ansible_play_name }}"
          debug:
            msg: "Skip test case '{{ ansible_play_name }}', VMware tools installed: {{ vmtools_is_installed }}, running: {{ vmtools_is_running }}, or vCenter configured: {{ vcenter_is_defined | default('NA') }}"
          when: not vmtools_is_installed or not vmtools_is_running or vcenter_is_defined is undefined
      rescue:
        - include_tasks: ../setup/rescue_cleanup.yml
          vars:
            current_testcase_name: "{{ ansible_play_name }}"
            rescue_revert_base_snapshot: False
      always:
        # Get all gosc logs from guest to local
        - include_tasks: get_gosc_logs_network.yml
        # Revert back to snapshot if taken before GOSC
        - include_tasks: win_gosc_cleanup.yml
