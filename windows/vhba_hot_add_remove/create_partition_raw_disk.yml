# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Copy diskpart script to Windows guest and run it to create partition on raw disk
- name: Set fact of the diskpart file path
  set_fact:
    diskpart_file_path: "{{ playbook_dir }}/diskpart.txt"
- name: Check diskpart script file exists in current path
  stat:
    path: "{{ diskpart_file_path }}"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: diskpart_file_stat
- name: Display the check file existence result
  debug: var=diskpart_file_stat
  when: enable_debug is defined and enable_debug

- name: Check if diskpart file exists
  assert:
    that:
      - "{{ diskpart_file_stat.stat.isreg is defined and diskpart_file_stat.stat.isreg }}"
    success_msg: "diskpart script file exists"
    fail_msg: "diskpart script file not exist: {{ diskpart_file_path }}"

- include_tasks: ../utils/win_get_raw_disk_num.yml
- include_tasks: ../utils/win_get_unused_drive_letter.yml
- include_tasks: ../utils/win_check_disk_online.yml
  vars:
    win_check_disk_online_num: "{{ win_get_raw_disk_num }}"

# Transfer diskpart script file from local to remote Windows guest OS
- include_tasks: ../utils/win_copy_file_from_local.yml
  vars:
    src_path_local: "{{ diskpart_file_path }}"
    dest_path_remote: "C:\\test_diskpart\\"
- name: Set fact of the remote diskpart file path
  set_fact:
    diskpart_file_path_win: "C:\\test_diskpart\\diskpart.txt"
- include_tasks: ../utils/win_check_file_exist.yml
  vars:
    win_check_file_exist_file: "{{ diskpart_file_path_win }}"
- name: Check diskpart script file copied to guest OS
  assert:
    that:
      - "{{ win_check_file_exist_result }}"
    success_msg: "diskpart file found in guest OS"
    fail_msg: "diskpart file not found in guest OS: {{ diskpart_file_path_win }}"

# Edit diskpart script file in remote Windows guest OS
- name: Modify raw disk number in diskpart script file
  win_lineinfile:
    path: "{{ diskpart_file_path_win }}"
    regexp: 'select disk *'
    line: "select disk {{ win_get_raw_disk_num }}"
  delegate_to: "{{ vm_guest_ip }}"

- name: Modify new drive letter in diskpart script file
  win_lineinfile:
    path: "{{ diskpart_file_path_win }}"
    regexp: 'assign letter*'
    line: "assign letter={{ drive_letter_new }}"
  delegate_to: "{{ vm_guest_ip }}"
  when: drive_letter_new is defined

# New added disk is already online while in Windows Server Core it's not online
- name: Remove online disk if disk is already online
  win_lineinfile:
    path: "{{ diskpart_file_path_win }}"
    regexp: 'online disk'
    state: absent
  delegate_to: "{{ vm_guest_ip }}"
  when: win_check_disk_online_result

- include_tasks: ../utils/win_create_disk_partition.yml

- name: Set fact of the file path to do disk write test
  set_fact:
    write_test_file_path_win: "{{ drive_letter_new }}:\\test_disk_write.txt"
- name: Create new file on disk drive in guest OS
  include_tasks: ../utils/win_create_file.yml
  vars:
    new_empty_file_path: "{{ write_test_file_path_win }}"

- name: Generate string content to write to disk drive
  set_fact:
    test_line: "This is the test line to write to the file. "
- name: Set fact of the content to write to file
  set_fact:
    write_file_content: "{% for i in range(0, 20) %} '{{ test_line }}\n{{ test_line }}' {% endfor %}"
- name: Write content to file created on disk drive
  include_tasks: ../utils/win_write_to_file.yml
  vars:
    write_file_path: "{{ write_test_file_path_win }}"

- include_tasks: ../utils/win_check_file_exist.yml
  vars:
    win_check_file_exist_file: "{{ write_test_file_path_win }}"
- name: Check file created on disk drive in guest OS
  assert:
    that:
      - "{{ win_check_file_exist_result }}"
    success_msg: "New created file found in guest OS"
    fail_msg: "New created file not found in guest OS: {{ write_test_file_path_win }}"
