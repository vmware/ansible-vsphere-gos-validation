# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Set fact of the file path to do disk write test"
  ansible.builtin.set_fact:
    write_test_file_path_win: "{{ drive_letter_new }}:\\test_disk_write.txt"
    test_line: "This is the test line to write to the file. "

- include_tasks: ../utils/win_create_file.yml
  vars:
    new_empty_file_path: "{{ write_test_file_path_win }}"
- include_tasks: ../utils/win_write_to_file.yml
  vars:
    write_file_path: "{{ write_test_file_path_win }}"
    write_file_content: "{% for i in range(0, 20) %} '{{ test_line }}\n{{ test_line }}' {% endfor %}"

- include_tasks: ../utils/win_check_file_exist.yml
  vars:
    win_check_file_exist_file: "{{ write_test_file_path_win }}"
- name: "Check file created on new disk in guest OS"
  ansible.builtin.assert:
    that:
      - "{{ win_check_file_exist_result }}"
    success_msg: "New created file found in guest OS"
    fail_msg: "New created file not found in guest OS: {{ write_test_file_path_win }}"

- include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "type {{ write_test_file_path_win }}"
- name: "Save the result of getting new file content"
  ansible.builtin.set_fact:
    get_file_content_result1: "{{ win_powershell_cmd_output }}"
- name: "Check file content"
  ansible.builtin.assert:
    that:
      - get_file_content_result1.stdout is defined
      - get_file_content_result1.stdout
      - "test_line in get_file_content_result1.stdout"
    fail_msg: "The file content is '{{ get_file_content_result1.stdout }}', which should contain: '{{ test_line }}'"

- name: "Set boot disk"
  block:
    - name: "Boot order change of hot-add disk to new SATA controller for OS with BIOS firmware"
      ansible.builtin.debug:
        msg:
            - "The disk boot order may be changed after hot-add new disk which causes failure of powering on VM."
            - "Specify the boot disk as workaround. "

    - include_tasks: ../../common/vm_set_boot_options.yml
      vars:
        boot_hdd_name: "{{ boot_disk_label }}"
        boot_order_list:
          - disk
  when:
    - boot_disk_label
    - add_new_controller

# Check new created file still exist after guest OS restart
- include_tasks: ../utils/win_shutdown_restart.yml
  vars:
    set_win_power_state: "restart"

- include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "type {{ write_test_file_path_win }}"
    win_execute_cmd_ignore_error: true
- name: "Save the result of getting new file content after guest restart"
  ansible.builtin.set_fact:
    get_file_content_result2: "{{ win_powershell_cmd_output }}"

# If get new file content failed check disk status firstly
- name: "Get new disk online status after guest restart"
  block:
    - include_tasks: ../utils/win_execute_cmd.yml
      vars:
        win_powershell_cmd: "Get-Disk | Where-Object IsOffline -eq $True | select DiskNumber,UniqueId | ft -hidetableheaders"
    - name: "Set fact of offline disk status"
      ansible.builtin.set_fact:
        new_disk_is_online: "{{ true if win_powershell_cmd_output.stdout_lines is defined and win_powershell_cmd_output.stdout_lines | length == 0 else false }}"
  when:
    - get_file_content_result2.rc is defined
    - get_file_content_result2.rc != 0

- name: "Handle get new file content failure"
  block:
    - name: "Known issue - workaround of hot adding disk to new LSILogicSAS controller in Windows Server"
      ansible.builtin.debug:
        msg:
          - "After Windows Server guest restart the new added disk to the new LSILogicSAS controller will be offline. Ignore this known issue."
          - "Online this disk as a workaround for hot adding disk to the new LSILogicSAS controller test."
      tags:
        - known_issue
    - include_tasks: ../utils/win_execute_cmd.yml
      vars:
        win_powershell_cmd: "Get-Disk | Where-Object IsOffline -eq $True | Set-Disk -IsOffline $False"
    - include_tasks: ../utils/win_execute_cmd.yml
      vars:
        win_powershell_cmd: "type {{ write_test_file_path_win }}"
        win_execute_cmd_ignore_error: true
    - name: "Save the result of getting new file content after online disk"
      ansible.builtin.set_fact:
        get_file_content_result2: "{{ win_powershell_cmd_output }}"
  when:
    - get_file_content_result2.rc is defined
    - get_file_content_result2.rc != 0
    - new_disk_is_online is defined
    - not new_disk_is_online
    - test_disk_controller_type == 'lsilogicsas'
    - test_purpose == "hot-add"
    - guest_os_ansible_distribution is defined
    - "'Windows Server' in guest_os_ansible_distribution" 

- name: "Check file content"
  ansible.builtin.assert:
    that:
      - get_file_content_result2.rc is defined
      - get_file_content_result2.rc == 0
      - get_file_content_result2.stdout is defined
      - get_file_content_result2.stdout == get_file_content_result1.stdout
    fail_msg: "The file content after guest restart is '{{ get_file_content_result2.stdout }}', which is not the same as before guest restart: '{{ get_file_content_result1.stdout }}'"
