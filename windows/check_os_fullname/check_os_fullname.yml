# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for checking VM guest OS fullname
# and guest OS ID are reported correctly in the VM guest info
# by VMware Tools. When VMware Tools is not installed or not
# running in the guest OS, this test case result is 'Blocked'.
#
- name: check_os_fullname
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        - name: "Get VM guest info"
          include_tasks: ../../common/vm_get_guest_info.yml

        - name: "Set fact of the pre-defined guest OS info list"
          include_tasks: win_guest_os_info.yml

        - name: "Print the guest OS info before checking"
          ansible.builtin.debug:
            msg:
              - "OS architecture got in guest OS: {{ guest_os_ansible_architecture }}"
              - "OS fullname got in guest OS: {{ guest_os_ansible_distribution }}"
              - "OS fullname got in VM guest info: {{ guestinfo_guest_full_name }}"
              - "VM guest ID configured: {{ vm_guest_id }}"
              - "VM guest ID got in VM guest info: {{ guestinfo_guest_id }}"
              - "VM hardware version: {{ vm_hardware_version }}"
 
        - name: "Set fact of current OS name"
          ansible.builtin.set_fact:
            current_gos: "{{ guest_os_ansible_distribution.strip('Microsoft ') }}"

        - name: "Get OS info in the pre-defined guest OS info list matched current OS"
          ansible.builtin.set_fact:
            current_gos_info: "{{ win_gos_info | selectattr('win_guest', 'equalto', current_gos) }}"

        - name: "Check current OS in the pre-defined guest OS info list"
          ansible.builtin.assert:
            that:
              - current_gos_info | length == 1
            fail_msg: >
              "The pre-defined guest OS info list does not contain this OS version: {{ current_gos }},
              please check whether this guest OS is supported and add it to the list accordingly."

        - name: "Set fact of the matched current OS info"
          ansible.builtin.set_fact:
            current_gos_info: "{{ current_gos_info[0] }}"

        - name: "Handle Windows 11 known issue"
          include_tasks: win11_guest_info_exception.yml

        - name: "Check guest fullname in VM guest info"
          include_tasks: check_vm_guest_info.yml
          when: win11_70u3c_exception is undefined
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
