# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Hardware requirements to run MDAG:
# 1. CPU hardware virtualization is enabled.
# 2. Minimum 4 cores (logical processors)
# 3. Minimum 8-GB RAM
#
- name: "Initialize the VM hardware related variables"
  ansible.builtin.set_fact:
    vm_nested_virt_status: false
    vm_initial_cpu_num: ""
    vm_initial_mem_mb: ""

- name: "Get CPU hardware virtualization status, CPU number and memory size"
  include_tasks: ../../common/vm_get_config.yml
  vars:
    property_list: ['config.nestedHVEnabled', 'config.hardware.memoryMB', 'config.hardware.numCPU']

- name: "Set facts of VM hardware related info"
  ansible.builtin.set_fact:
    vm_nested_virt_status: "{{ vm_config.config.nestedHVEnabled }}"
    vm_initial_cpu_num: "{{ vm_config.config.hardware.numCPU }}"
    vm_initial_mem_mb: "{{ vm_config.config.hardware.memoryMB }}"
  when:
    - vm_config.config is defined
    - vm_config.config.nestedHVEnabled is defined
    - vm_config.config.hardware.memoryMB is defined
    - vm_config.config.hardware.numCPU is defined

- name: "Edit VM Settings"
  block:
    - name: "Shutdown VM"
      include_tasks: ../utils/win_shutdown_restart.yml
      vars:
        set_win_power_state: "shutdown"

    - name: "Enable CPU hardware virtualization for the VM"
      include_tasks: ../../common/vm_set_nested_virtual.yml
      vars:
        vm_nested_virt: true
      when: not vm_nested_virt_status

    - name: "Set VM CPU number to 4"
      include_tasks: ../../common/vm_set_cpu_number.yml
      vars:
        num_cores_per_socket: 2
        num_cpus: 4
      when: vm_initial_cpu_num | int < 4

    - name: "Set VM memory size to 8 GB"
      include_tasks: ../../common/vm_set_memory_size.yml
      vars:
        memory_mb: 8192
      when: vm_initial_mem_mb | int < 8 * 1024

    - name: "Power on the VM"
      include_tasks: ../../common/vm_set_power_state.yml
      vars:
        vm_power_state_set: 'powered-on'

    - name: "Update the inventory"
      include_tasks: ../utils/win_update_inventory.yml
  when: >
    (not vm_nested_virt_status) or
    (vm_initial_cpu_num | int < 4) or 
    (vm_initial_mem_mb | int < 8 * 1024) 

- name: "Enable MDAG"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "Enable-WindowsOptionalFeature -Online -NoRestart -FeatureName {{ mdag_feature_name }}"

- name: "Restart the guest OS"
  include_tasks: ../utils/win_shutdown_restart.yml
  vars:
    set_win_power_state: "restart"

- name: "Get MDAG feature state"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "(Get-WindowsOptionalFeature -Online -FeatureName {{ mdag_feature_name }}).State"

- name: "Check if MDAG is enabled in guest OS"
  ansible.builtin.assert:
    that:
      - win_powershell_cmd_output.stdout_lines is defined
      - win_powershell_cmd_output.stdout_lines | length == 1
      - win_powershell_cmd_output.stdout_lines[0].strip() == 'Enabled'
    fail_msg: "MDAG feature state in guest OS is not 'Enabled': '{{ win_powershell_cmd_output.stdout_lines | default('') }}'"

- name: "Set the MDAG related process name"
  ansible.builtin.set_fact:
    mdag_process: "vmmemMDAG"
    virtual_process: "vmcompute"

- name: "Initialize the status of MDAG process"
  ansible.builtin.set_fact:
    mdag_process_running: false

- name: "Get virtual process {{ virtual_process }} before restart"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "Get-Process -Name {{ virtual_process }}"

- name: "Get MDAG process {{ mdag_process }}"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "Get-Process -Name {{ mdag_process }}"
    win_execute_cmd_ignore_error: true

- name: "Set running status of MDAG process"
  ansible.builtin.set_fact:
    mdag_process_running: "{{ win_powershell_cmd_output.rc == 0 }}"
  when: win_powershell_cmd_output.rc is defined

- name: "Check MDAG process {{ mdag_process }} after restart"
  block:
    - name: "Restart the guest OS"
      include_tasks: ../utils/win_shutdown_restart.yml
      vars:
        set_win_power_state: "restart"

    - name: "Get MDAG process {{ mdag_process }} after restart"
      include_tasks: ../utils/win_execute_cmd.yml
      vars:
        win_powershell_cmd: "Get-Process -Name {{ mdag_process }}"
        win_execute_cmd_ignore_error: true

    - name: "Set running status of MDAG process"
      ansible.builtin.set_fact:
        mdag_process_running: "{{ win_powershell_cmd_output.rc == 0 }}"
      when: win_powershell_cmd_output.rc is defined
  when:
    - guest_os_build_num | int > 22000
    - not mdag_process_running

- name: "Display status of the MDAG process {{ mdag_process }}"
  ansible.builtin.debug:
    msg: "MDAG process {{ mdag_process }} running status: {{ mdag_process_running }}"
