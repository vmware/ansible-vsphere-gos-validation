# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Below tasks will be executed at the beginning of each test case, to check
# if base snapshot exists, revert to the base snapshot when it exists.
# If base snapshot does not exist, then take a snapshot of VM as the base snapshot.
#
- name: "Set current test case index, name and log folder"
  include_tasks: ../../common/set_current_testcase_facts.yml
  vars:
    create_test_log_folder: "{{ create_current_test_folder is defined and create_current_test_folder }}"
    test_log_folder_mode: "0777"

- name: "Check base snapshot existence and/or revert to it"
  include_tasks: ../../common/base_snapshot_check_revert.yml

- name: "Check VM settings"
  include_tasks: ../../common/check_vm_settings.yml
  when: vm_settings_checked is undefined

- name: "Get VMware Tools status"
  include_tasks: ../../common/vm_get_vmtools_status.yml

- name: "Get VM VBS enable status"
  when:
    - vm_firmware == 'efi'
    - saved_vm_vbs_status is undefined
  block:
    - name: "Get VM VBS enable status"
      include_tasks: ../../common/vm_get_vbs_status.yml
    - name: "Save VM VBS enable status"
      ansible.builtin.set_fact:
        saved_vm_vbs_status: "{{ vm_vbs_enabled }}"

- name: "Handle VMCI known issue on {{ esxi_cpu_vendor }} ESXi {{ esxi_version }} build {{ esxi_build }}"
  include_tasks: handle_vmci_known_issue.yml
  when:
    - esxi_cpu_vendor == 'intel'
    - base_snapshot_exists | default(false)
    - saved_vm_vbs_status is defined and saved_vm_vbs_status
    - vmtools_is_installed
    - vm_hardware_version_num | int > 20
    - esxi_version is version('8.0.0', '>')
    - esxi_version is version('8.0.3', '<=')
    - esxi_build | int <= 24414501

- name: "Block test case because VMware Tools is not installed or not running"
  include_tasks: ../../common/skip_test_case.yml
  vars:
    skip_msg: "Test case is blocked because VMware Tools installed: {{ vmtools_is_installed }}, running: {{ vmtools_is_running }}"
    skip_reason: "Blocked"
  when:
    - skip_test_no_vmtools is defined
    - skip_test_no_vmtools
    - not vmtools_is_running

- name: "Get VM guest IP"
  include_tasks: ../../common/vm_get_ip.yml
  vars:
    vm_get_ip_timeout: 600

- name: "Check Windows winrm is connectable"
  include_tasks: ../utils/win_check_winrm.yml

- name: "Add Windows host to in-memory inventory"
  include_tasks: ../utils/add_windows_host.yml

- name: "Print VM guest IP address"
  ansible.builtin.debug: var=vm_guest_ip

# Windows Update will cause OS poweroff or restart taking a long time,
# or GOSC test cases failure, here try to pause Windows Update 7 days
- name: "Pause Windows Update"
  include_tasks: ../utils/win_pause_resume_win_update.yml
  vars:
    win_update_ops: 'pause'
  when: not base_snapshot_exists

- name: "Get VMware Tools version and build"
  include_tasks: ../utils/win_get_vmtools_version_build.yml
  when:
    - vmtools_is_installed
    - vmtools_info_from_vmtoolsd is undefined or not vmtools_info_from_vmtoolsd

- name: "Get guest OS system info"
  include_tasks: ../utils/get_windows_system_info.yml
  when: guest_os_system_info_retrieved is undefined or not guest_os_system_info_retrieved

- name: "Get VM guest info including guest id, full name, family and detailed data"
  include_tasks: ../../common/vm_get_guest_info.yml
  when:
    - vmtools_is_running
    - guestinfo_gathered is undefined or not guestinfo_gathered

- name: "Take a base snapshot if it does not exist"
  include_tasks: create_base_snapshot.yml
  when: not base_snapshot_exists

- name: "Set fact of whether VM boot disk controller is known"
  ansible.builtin.set_fact:
    vm_boot_disk_ctrl_got: "{{ win_boot_disk_ctrl_type is defined and win_boot_disk_ctrl_type }}"

- name: "Get boot disk controller type in guest OS"
  include_tasks: ../utils/win_get_boot_disk_ctrl_type.yml
  when: not vm_boot_disk_ctrl_got
