# Copyright 2022-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Initialize the VBS status of VM and VBS status in guest OS"
  ansible.builtin.set_fact:
    vm_vbs_enabled_before: false
    guest_vbs_enabled_before: false

- name: "Get VM VBS status before enable"
  include_tasks: ../../common/vm_get_vbs_status.yml
- name: "Set fact of VM VBS current status before enable"
  ansible.builtin.set_fact:
    vm_vbs_enabled_before: "{{ vm_vbs_enabled }}"

- name: "VM VBS is not enabled"
  block:
    - name: "Shutdown guest OS before enabling VBS on VM"
      include_tasks: ../utils/win_shutdown_restart.yml
      vars:
        set_win_power_state: "shutdown"
    - name: "Enable VBS on VM"
      include_tasks: ../utils/win_enable_vbs_vm.yml
      vars:
        win_enable_vbs: true
    - name: "Power on VM"
      include_tasks: ../../common/vm_set_power_state.yml
      vars:
        vm_power_state_set: "powered-on"
    - name: "Update in-memory inventory after VM power on"
      include_tasks: ../utils/win_update_inventory.yml
    - name: "Get VM VBS status"
      include_tasks: ../../common/vm_get_vbs_status.yml
    - name: "Check VM VBS status after enable"
      ansible.builtin.assert:
        that:
          - vm_vbs_enabled
        fail_msg: "VM VBS status is '{{ vm_vbs_enabled }}', not enabled after enabling it."
  when: not vm_vbs_enabled_before

- name: "Get Device Guard available security properties in guest OS"
  include_tasks: ../utils/win_get_dg_security_properties.yml

- name: "Enable VBS and security services in guest OS"
  include_tasks: ../utils/win_enable_vbs_guest.yml

- name: "Get VBS status and running security services"
  include_tasks: ../utils/win_get_vbs_guest.yml

# AvailableSecurityProperties:
# 0. 	If present, no relevant properties exist on the device.
# 1. 	If present, hypervisor support is available.
# 2. 	If present, Secure Boot is available.
# 3. 	If present, DMA protection is available.
# 4. 	If present, Secure Memory Overwrite is available.
# 5. 	If present, NX protections are available.
# 6. 	If present, SMM mitigations are available.
# 7. 	If present, MBEC/GMET is available.
# 8. 	If present, APIC virtualization is available.
#
- name: "Set expected security properties"
  ansible.builtin.set_fact:
    expected_security_properties: >-
      {%- if esxi_cpu_vendor == "intel" and guest_os_build_num | int == 10240 -%}
        {{ range(1, 4) | list }}
      {%- elif (esxi_cpu_vendor == "amd" and guest_os_build_num | int == 17763) or 
        (esxi_cpu_vendor == "intel" and guest_os_build_num | int == 14393) -%}
        {{ range(1, 7) | list }}
      {%- else -%}
        {{ range(1, 8) | list }}
      {%- endif -%}

- name: "Handle known issue"
  block:
    - name: "Known issue - NX protections are not present in AvailableSecurityProperties on ESXi 7.0.3"
      ansible.builtin.debug:
        msg:
          - "The issue of 'NX protections are not present in guest OS AvailableSecurityProperties' exists on this ESXi 7.0.3 build '{{ esxi_build }}', which is fixed in ESXi 7.0U3l patch build 21424296. Please refer to KB article: https://knowledge.broadcom.com/external/article?articleId=313267."
      tags:
        - known_issue
  when:
    - esxi_version is version('7.0.3', '==')
    - esxi_build | int < 21424296
    - expected_security_properties | difference(win_dg_security_properties) == [5]

- name: "Check available security properties got in guest OS"
  ansible.builtin.assert:
    that:
      - win_dg_security_properties | sort == expected_security_properties
    fail_msg: >-
      Available security properties list got in guest OS: {{ win_dg_security_properties }}, 
      '{{ expected_security_properties | difference(win_dg_security_properties) }}' is missed compared with 
      expected list '{{ expected_security_properties }}'.
  when: >
    (esxi_version is version('7.0.3', '>') or esxi_version is version('7.0.3', '<')) or
    (esxi_version is version('7.0.3', '==') and esxi_build | int >= 21424296)

# SecurityServicesRunning:
# 0.    No services running.
# 1.    If present, Windows Defender Credential Guard is running.
# 2.    If present, HVCI is running.
# 3.    If present, System Guard Secure Launch is running.
# 4.    If present, SMM Firmware Measurement is running.
# VirtualizationBasedSecurityStatus:
# 2 means VBS is enabled and running
# 1 means VBS is enabled but not running
# 0 means VBS is not enabled
#
- name: "Check VBS and running security service status"
  ansible.builtin.assert:
    that:
      - win_vbs_status_guest | int == 2
      - "'1' in win_vbs_running_service"
      - "'2' in win_vbs_running_service"
    fail_msg: "VBS status is '{{ win_vbs_status_guest }}' not expected '2', or HVCI '2'/Credential Guard '1' is not in the SecurityServicesRunning list: '{{ win_vbs_running_service }}'."
  when: guest_os_build_num | int > 10240

- name: "Check VBS is enabled"
  ansible.builtin.assert:
    that:
      - win_vbs_status_guest | int == 1
    fail_msg: "VBS status is '{{ win_vbs_status_guest }}' not expected '1'."
  when: guest_os_build_num | int == 10240
