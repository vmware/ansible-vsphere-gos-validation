# Copyright 2022-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# There is known issue on PVSCSI driver and VMXNET3 driver in VMware Tools 12.0.5 and later,
# Please refer to this KB article: https://knowledge.broadcom.com/external/article?articleId=318260
#
- name: "Initialize the fact of loaded driver version"
  ansible.builtin.set_fact:
    win_incompatible_driver_issue: false
    win_pvscsi_version: "{{ win_pvscsi_before.DriverVersion }}"
    win_vmxnet3_version: "{{ win_vmxnet3_before.DriverVersion }}"

- name: "Handle known issue"
  block:
    - name: "Set fact of the incompatible drivers issue condition met"
      ansible.builtin.set_fact:
        win_incompatible_driver_issue: true

    - name: "Known issue - PVSCSI and VMXNET3 drivers not compatible with Windows Server after upgrade"
      ansible.builtin.debug:
        msg:
          - "PVSCSI and VMXNET3 drivers installed by VMware Tools (12.0.5 =< VMware Tools version < 12.2.0) in Windows Server 2019 are not compatible with Windows Server 2022 and later after upgrade."
          - "Refer to KB: https://knowledge.broadcom.com/external/article?articleId=318260."
          - "Windows Server 2022 will load inbox PVSCSI and VMXNET3 drivers automatically when there is network connection during guest OS upgrading."
      tags:
        - known_issue
      when: "'Windows Server 2019' in win_distr_before_upgrade"

    - name: "Handle known issue for Windows 10"
      block:
        - name: "Known issue - workaround of PVSCSI and VMXNET3 drivers not compatible with guest OS after upgrade"
          ansible.builtin.debug:
            msg:
              - "PVSCSI and VMXNET3 drivers installed by VMware Tools (12.0.5 =< VMware Tools version < 12.2.0) in Windows 10 are not compatible with Windows 11 and later after upgrade."
              - "KB article: https://knowledge.broadcom.com/external/article?articleId=318260."
              - "The workaround is removing incompatible drivers then installing compatible drivers before OS upgrade."
          tags:
            - known_issue
        - name: "Remove PVSCSI driver and install compatible one"
          include_tasks: remove_reinstall_driver.yml
          vars:
            win_driver_to_remove: "{{ win_pvscsi_before }}"
          when: win_pvscsi_version is version('1.3.25.0', '>=')
        - name: "Remove VMXNET3 driver and install compatible one"
          include_tasks: remove_reinstall_driver.yml
          vars:
            win_driver_to_remove: "{{ win_vmxnet3_before }}"
          when: win_vmxnet3_version is version('1.9.9.0', '>=')
        - name: "Restart guest OS"
          include_tasks: ../utils/win_shutdown_restart.yml
          vars:
            set_win_power_state: "restart"
        - name: "Get PVSCSI and VMXNET3 driver version"
          include_tasks: ../wintools_uninstall_verify/get_pvscsi_vmxnet3_info.yml
        - name: "Check loaded PVSCSI driver is 1.3.17.0"
          ansible.builtin.assert:
            that:
              - win_pvscsi_before.DriverVersion is defined
              - win_pvscsi_before.DriverVersion == "1.3.17.0"
            fail_msg: "After removing PVSCSI driver '{{ win_pvscsi_version }}' and install PVSCSI driver '1.3.17.0', the loaded PVSCSI driver version is: '{{ win_pvscsi_before.DriverVersion }}', not expected '1.3.17.0'."
          when: win_pvscsi_version is version('1.3.25.0', '>=')
        - name: "Check loaded VMXNET3 driver is 1.9.5.0"
          ansible.builtin.assert:
            that:
              - win_vmxnet3_before.DriverVersion is defined
              - win_vmxnet3_before.DriverVersion == "1.9.5.0"
            fail_msg: "After removing VMXNET3 driver '{{ win_vmxnet3_version }}' and install VMXNET3 driver '1.9.5.0', the loaded VMXNET3 driver version is: '{{ win_vmxnet3_before.DriverVersion }}', not expected '1.9.5.0'."
          when: win_vmxnet3_version is version('1.9.9.0', '>=')
      when: "'Windows 10' in win_distr_before_upgrade"
  when:
    - vmtools_version is defined
    - vmtools_version is version('12.0.5', '>=')
    - vmtools_version is version('12.2.0', '<')
    - (win_pvscsi_version is version('1.3.25.0', '>=')) or (win_vmxnet3_version is version('1.9.9.0', '>='))
