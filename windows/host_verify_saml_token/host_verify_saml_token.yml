# Copyright 2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for test host verified SAML token in guest operations
#
- name: host_verify_saml_token
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true
            create_current_test_folder: true

        - name: "Skip test case for old ESXi server or VMware Tools"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: >-
              Skip test case {{ ansible_play_name }} because ESXi version is {{ esxi_version }} < 8.0.2 or
              VMware Tools version is {{ vmtools_version }} < 12.3.0.
            skip_reason: "Not Supported"
          when: esxi_version is version('8.0.2', '<') or vmtools_version is version('12.3.0', '<')

        - name: "Skip test case due to missing vCenter Server variables"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip test case {{ ansible_play_name }} is because of missing vCenter Server variables."
            skip_reason: "Not Applicable"
          when: >
            (not vcenter_is_defined) or
            (vcenter_ssh_username is undefined or not vcenter_ssh_username) or
            (vcenter_ssh_password is undefined or not vcenter_ssh_password)

        - name: "Check VMware Tools capability exists for host verified SAML token"
          include_tasks: ../../common/vm_check_vmtools_capability.yml

        - name: "Check SSH connection to vCenter Server"
          include_tasks: ../../common/test_ssh_connection.yml
          vars:
            ssh_server_ip: "{{ vcenter_hostname }}"

        - name: "Block test case due to vCenter Server is not connectable via SSH"
          include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Test case {{ ansible_play_name }} is blocked because SSH connection to vCenter Server failed."
            skip_reason: "Blocked"
          when: not ssh_connect_success

        - name: "Enable guest OS timesync with ESXi server"
          include_tasks: ../utils/win_execute_cmd.yml
          vars:
            win_powershell_cmd: "& 'C:\\Program Files\\VMware\\VMware Tools\\VMwareToolboxCmd.exe' timesync enable"

        - name: "Initialize facts about domain user information"
          ansible.builtin.set_fact:
            vcenter_admin_user_name: "{{ vcenter_username.split('@')[0] }}"
            vcenter_domain_name: "{{ vcenter_username.split('@')[-1] }}"
            vcenter_domain_user_name: "vcuser_{{ current_test_timestamp }}"
            vcenter_domain_user_password: "VP@ssw0rd"
            vcenter_domain_user_group: "DCAdmins"
            vm_guest_user_name: "{{ vm_username }}"
            vm_guest_user_password: "{{ vm_password }}"

        - name: "Add domain user '{{ vcenter_domain_user_name }}'"
          include_tasks: ../../common/vcenter_manage_domain_user.yml
          vars:
            vcenter_domain_user_op: "add"

        - name: "Enable debug logging for VGAuthService"
          include_tasks: ../utils/win_enable_vgauth_log.yml

        - name: "Test guest operation with VC SSO user's SAML token"
          include_tasks: ../../linux/host_verify_saml_token/test_guest_ops_with_token.yml

        - name: "Collect VGAuthService log"
          include_tasks: ../utils/win_collect_vgauth_logs.yml

        - name: "Check VGAuthService log is collected successfully"
          ansible.builtin.assert:
            that:
              - vgauth_log_file_exists
              - vgauth_log_is_collected
              - vgauth_log_file_dest
            fail_msg: "Failed to collect VGAuthService log"
            success_msg: "The VGAuthService log is collected to {{ vgauth_log_file_dest }}"

        - name: "Check VC SSO user's SAML token is verified by host"
          include_tasks: ../../linux/host_verify_saml_token/check_host_verified_token.yml
          vars:
            vgauth_log_path_local: "{{ vgauth_log_file_dest }}"

        - name: "Delete domain user '{{ vcenter_domain_user_name }}'"
          include_tasks: ../../common/vcenter_manage_domain_user.yml
          vars:
            vcenter_domain_user_op: "delete"
      rescue:
        - name: "Test failure"
          include_tasks: ../../common/test_rescue.yml
      always:
        - name: "Collect VGAuthService log"
          include_tasks: ../utils/win_collect_vgauth_logs.yml
          when: vgauth_log_is_collected is undefined or not vgauth_log_is_collected
