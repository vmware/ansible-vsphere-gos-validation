# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for check 'VMwareToolboxCmd.exe' command can display
# the date and time in the guest OS. If VMware Tools is not installed or not running,
# then this test case result will be "Blocked".
# Note: The difference between host time got from 'VMwareToolboxCmd.exe' in VM and
# the host time got from ESXi host may not in 15s due to network issue.
#
- name: stat_hosttime
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        - name: "Initialize the facts of host time"
          ansible.builtin.set_fact:
            real_time: ""
            stat_time: ""

        - name: "Set time zone of guet OS to UTC"
          include_tasks: ../utils/win_execute_cmd.yml
          vars:
            win_powershell_cmd: "Set-TimeZone -Id UTC"

        - name: "Get host time by VMware Tools in guest OS"
          ansible.windows.win_shell: "& 'C:\\Program Files\\VMware\\VMware Tools\\VMwareToolboxCmd.exe' stat hosttime"
          register: stat_time_output
          delegate_to: "{{ vm_guest_ip }}"
          ignore_unreachable: true
          poll: 0

        # At the same time, get ESXi host time by Ansible module community.vmware.vmware_host_facts
        - name: "Get real host time on {{ esxi_hostname }}"
          include_tasks: ../../common/esxi_get_host_facts.yml

        - name: "Set the fact of host time got from {{ esxi_hostname }}"
          ansible.builtin.set_fact:
            real_time: "{{ ' '.join((host_facts.ansible_facts.host_date_time.date, host_facts.ansible_facts.host_date_time.time)) }}"
          when:
            - host_facts.ansible_facts.host_date_time is defined
            - host_facts.ansible_facts.host_date_time

        - name: "Set the fact of host time got from guest OS"
          ansible.builtin.set_fact:
            stat_time: "{{ stat_time_output.stdout_lines[0] | to_datetime('%d %b %Y %H:%M:%S') }}"
          when:
            - stat_time_output.stdout_lines is defined
            - stat_time_output.stdout_lines | length != 0

        - name: "Check if host time is got or not"
          ansible.builtin.assert:
            that:
              - real_time
              - stat_time
            fail_msg: "Failed to get the host time either from ESXi host '{{ real_time }}' or from guest OS '{{ stat_time }}'."
            success_msg: >-
              In guest OS, VMware Tools stat host time is: '{{ stat_time }}'.
              On ESXi host '{{ esxi_hostname }}' host time is: '{{ real_time }}'.

        # Calculate how many seconds stat host time is behind comparing with real host time
        - name: "Time difference between VMware Tools stat host time and real host time"
          ansible.builtin.set_fact:
            stat_behind_real: "{{ ((real_time | to_datetime) - (stat_time | to_datetime)).total_seconds() }}"

        - name: "Display the time difference"
          ansible.builtin.debug:
            msg: "Stat host time in guest OS is behind real host time: {{ stat_behind_real }}s"

        - name: "Check if difference between stat host time and real host time is less than 15s"
          ansible.builtin.assert:
            that:
              - stat_behind_real | float <= 15
            fail_msg: "Difference between stat host time and real host time is larger than 15s: {{ stat_behind_real }}s"
            success_msg: "Difference between stat host time and real host time: {{ stat_behind_real }}s"
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
