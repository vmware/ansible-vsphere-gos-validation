# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This case is to test Microsoft's Windows updates.
#   Install Windows .msu update package.
#
- name: run_windows_updates
  hosts: localhost
  gather_facts: no
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            create_current_test_folder: true

        - name: "Get guest OS version build"
          include_tasks: ../utils/win_get_os_version.yml
        - name: "Display the guest OS version build before running Windows Updates"
          ansible.builtin.debug:
            msg: "Before running Windows Updates, guest OS version build is {{ win_os_version_build }}"

        - name: "Set the Windows Updates reject list"
          ansible.builtin.set_fact:
            win_updates_reject_list: "{{ windows_updates_reject_list.split(',') | map('trim') }}"
          when:
            - windows_updates_reject_list is defined
            - windows_updates_reject_list

        - name: "Install Windows Updates"
          include_tasks: ../utils/win_install_updates.yml
#          vars:
#            win_updates_category_names: ['CriticalUpdates', 'SecurityUpdates', 'UpdateRollups']

        - name: "Set fact if guest OS has installed Windows Updates"
          ansible.builtin.set_fact:
            win_updates_installed: |-
              {%- if win_updates_install_result is defined and win_updates_install_result.installed_update_count is defined and 
                win_updates_install_result.installed_update_count | int > 0 -%}true
              {%- else -%}false
              {%- endif -%}

        - name: "Get guest OS version build"
          include_tasks: ../utils/win_get_os_version.yml
        - name: "Display the guest OS version build after running Windows Updates"
          ansible.builtin.debug:
            msg: "After running Windows Updates, guest OS version build is {{ win_os_version_build }}"

        # If guest OS has been updated, take a new one as base snapshot and remove the old one.
        - name: "Reset the base snapshot and remove the old one"
          include_tasks: ../../common/reset_base_snapshot.yml
          vars:
            remove_old_base_snapshot: true
            take_snapshot_description: "{{ win_os_version_build }}"
          when: win_updates_installed
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
      always:
        - name: "Check if Windows Updates log file exists in guest OS"
          include_tasks: ../utils/win_check_file_exist.yml
          vars:
            win_check_file_exist_file: "{{ win_updates_log_file }}"

        - name: "Fetch the Windows Updates log file to local machine and delete it from guest OS"
          when: win_check_file_exist_result
          block:
            - name: "Get Windows Updates log file from guest OS to local machine"
              include_tasks: ../utils/win_get_file.yml
              vars:
                win_get_file_src_path: "{{ win_updates_log_file }}"
                win_get_file_dst_path: "{{ current_test_log_folder }}"

            - name: "Delete Windows Updates log file from guest OS"
              ansible.windows.win_file:
                path: "{{ win_updates_log_file }}"
                state: absent
              delegate_to: "{{ vm_guest_ip }}"
              register: delete_file_result


