# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Copy the .msu file of type msu_file_type from the shared nfs to guest OS.
# Parameters:
#   msu_file_type: SSU or LCU.
# Return:
#  msu_file_path: the .msu file path in guest OS.
#
- name: "Initialize the .msu file path and file name regexp"
  ansible.builtin.set_fact:
    msu_root_dir: "C:\\msu"
    msu_file_name_reg: "{{ '*x64*' if guest_os_ansible_architecture == '64-bit' else '*x86*'}}"
    msu_file_path: ""

- name: "Get unused driver letter"
  include_tasks: ../utils/win_get_unused_drive_letter.yml

- name: "Set the facts of the .msu file source and destination path"
  ansible.builtin.set_fact:
    msu_file_nfs_path: "{{ drive_letter_new }}:\\{{ windows_nfs_msu_path }}\\{{ msu_file_type}}"
    msu_dest_dir: "{{ msu_root_dir }}\\{{ msu_file_type }}"

- name: "Check if folder {{ msu_dest_dir }} exists on guest OS"
  include_tasks: ../utils/win_is_folder.yml
  vars:
    win_is_folder_path: "{{ msu_dest_dir }}"

- name: "Clean up all old .msu file in folder {{ msu_dest_dir }}"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "Remove-Item -Path {{ msu_dest_dir }}\\*.msu -Force"
  when: win_is_folder_result | bool

- name: "Create folder {{ msu_dest_dir }} on guest OS"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "New-Item -ItemType Directory -Path {{ msu_dest_dir }} -Force"
  when: not win_is_folder_result | bool

- name: "Set mount command for accessing the shared folder"
  ansible.builtin.set_fact:
    win_nfs_mount_cmd: |-
      {%- if windows_nfs_username is defined and windows_nfs_username and 
        windows_nfs_password is defined and windows_nfs_password -%}
      {{ 'net use ' ~ drive_letter_new ~ ': ' ~ windows_nfs_share ~ ' ' ~ windows_nfs_password ~ ' /user:' ~ windows_nfs_username }}
      {%- else -%}
      {{ 'net use ' ~ drive_letter_new ~ ': ' ~ windows_nfs_share }}
      {%- endif -%}
  no_log: "{{ hide_secrets | default(false) }}"

- name: "Copy the .msu file to local disk of guest OS"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_execute_cmd_no_log: "{{ hide_secrets | default(false) }}"
    win_powershell_cmd: >-
      {{ win_nfs_mount_cmd }};
      $file = Get-ChildItem -Path {{ msu_file_nfs_path }} | where Name -like '{{ msu_file_reg }}';
      if ($file) {Copy-Item -Path $file.FullName -Destination {{ msu_dest_dir }} -ErrorAction Stop;};
      net use {{ drive_letter_new }}: /delete

- name: "Get the .msu file name"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: >- 
      (Get-ChildItem -Path {{ msu_dest_dir }} | Where-Object {$_.name -like '*.msu'}).FullName;

- name: "Check if the .msu file is copied to {{ msu_dest_dir }}"
  ansible.builtin.assert:
    that:
      - win_powershell_cmd_output.stdout_lines is defined
      - win_powershell_cmd_output.stdout_lines | length != 0
    fail_msg: "The .msu file is not found in {{ msu_dest_dir }} in guest OS."
    success_msg: "The .msu file is copied to {{ msu_dest_dir }} in guest OS."
  when: msu_file_type == "LCU"

- name: "Set the .msu file name"
  ansible.builtin.set_fact:
    msu_file_path: "{{ win_powershell_cmd_output.stdout_lines[0] }}"
  when:
    - win_powershell_cmd_output.stdout_lines is defined
    - win_powershell_cmd_output.stdout_lines | length != 0