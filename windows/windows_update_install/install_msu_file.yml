# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Parameters:
#   msu_file_path: the .msu file path in guest OS.
#
- name: "Set the .msu file installation related parameters"
  ansible.builtin.set_fact:
    msu_kb_number: "{{ msu_file_basename | regex_search('(?i)KB\\d+') | upper }}"
    msu_install_timeout: 7200
    msu_become_user: "{{ 'SYSTEM' if guest_os_ansible_architecture == '32-bit' else 'Administrator' }}"

- name: "Enable the user Administrator"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "net user Administrator /active:yes"
  when: vm_username | lower != "administrator"

- name: "Install the .msu file"
  ansible.windows.win_shell: >-
    wusa.exe {{ msu_file_path }} /quiet /norestart
  delegate_to: "{{ vm_guest_ip }}"
  register: install_msu_result
  become: true
  become_method: runas
  become_user: "{{ msu_become_user }}"
  async: "{{ msu_install_timeout }}"
  poll: 0
  environment:
    ANSIBLE_WIN_ASYNC_STARTUP_TIMEOUT: 10

- name: "Check if the .msu file installation task started"
  ansible.builtin.assert:
    that:
      - install_msu_result is defined
      - install_msu_result.ansible_job_id is defined
    fail_msg: "The result of above .msu file installation task executed in guest OS is not returned."

- name: "Check if the .msu file is installed before restart"
  ansible.windows.win_shell: "Get-HotFix | Where-Object HotFixID -eq {{ msu_kb_number }}"
  register: win_get_hotfix_result
  ignore_errors: true
  delegate_to: "{{ vm_guest_ip }}"
  ignore_unreachable: true
  until:
    - win_get_hotfix_result.rc is defined
    - win_get_hotfix_result.rc == 0
    - win_get_hotfix_result.stdout_lines | length != 0
  retries: "{{ msu_install_timeout // 300 }}"
  delay: 300

- name: "The .msu file installation failed"
  ansible.builtin.fail:
    msg: "Failed to install the .msu file {{ msu_file_basename }} in {{ msu_install_timeout }} seconds."
  when:
    - win_get_hotfix_result.failed is defined
    - win_get_hotfix_result.failed

- name: "Restart guest OS after installing the .msu file"
  include_tasks: ../utils/win_shutdown_restart.yml
  vars:
    set_win_power_state: "restart"
    win_reboot_timeout: 1800

- name: "Check if the .msu file is installed after restart"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "Get-HotFix | Where-Object HotFixID -eq {{ msu_kb_number }}"

- name: "Check the msu installation result after restart"
  ansible.builtin.assert:
    that:
      - win_powershell_cmd_output.stdout_lines is defined
      - win_powershell_cmd_output.stdout_lines | length != 0
    fail_msg: "The .msu file {{ msu_file_basename }} is not installed in guest OS."
    success_msg: "The .msu file {{ msu_file_basename }} is installed in guest OS."