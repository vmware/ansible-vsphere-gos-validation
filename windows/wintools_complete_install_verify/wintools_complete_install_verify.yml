# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for test VMware Tools installation in Windows guest OS.
# If no VMware Tools installed in guest OS, this test case will install VMware Tools.
# If there is VMware Tools already installed in guest OS:
# (1) by default 'update_vmtools' will be set to true, this test case will uninstall
# existing VMware Tools firstly, then install VMware Tools when VMware Tools ISO source
# parameters are configured correctly,
# (2) if 'update_vmtools' is set to false, this test case will be skipped when VMware Tools
# service is running, or test case will fail when VMware Tools service is not running.
#
- name: wintools_complete_install_verify
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Test case block"
      block:
        - name: "Test setup"
          include_tasks: ../setup/test_setup.yml
          vars:
            create_current_test_folder: true

        - name: "Set update VMware Tools by default"
          ansible.builtin.set_fact:
            update_vmtools: true
          when: update_vmtools is undefined

        # If VBS is enabled, will not install under development VMware Tools due to secureboot is enabled
        - name: "Check if VBS is enabled"
          when:
            - guest_os_ansible_architecture == "64-bit"
            - is_development_tools is defined
            - is_development_tools | bool
          block:
            - name: "Get VM VBS status"
              include_tasks: ../../common/vm_get_vbs_status.yml

            - name: "Skip test case"
              include_tasks: ../../common/skip_test_case.yml
              vars:
                skip_msg: "Skip test case due to under development VMware Tools can not test on VM with VBS enabled."
                skip_reason: "Not Applicable"
              when: vm_vbs_enabled

        - name: "Handle update_vmtools is set to false situation"
          when:
            - not update_vmtools | bool
            - vmtools_is_installed
          block:
            - name: "VMware Tools is running"
              include_tasks: ../../common/skip_test_case.yml
              vars:
                skip_msg: >
                  Test case '{{ ansible_play_name }}' is skipped because VMware Tools is already installed
                  and running, while 'update_vmtools' is set to: {{ update_vmtools }}.
                skip_reason: "Skipped"
              when: vmtools_is_running

            - name: "VMware Tools is not running"
              ansible.builtin.fail:
                msg: >
                  Expected VMware Tools running status is 'true' when it's already installed and 'update_vmtools'
                  is set to: {{ update_vmtools }}, but get '{{ vmtools_is_running }}'.
              when: not vmtools_is_running

        - name: "Get VMware Tools source ISO file"
          include_tasks: set_vmtools_source.yml

        - name: "Prepare VMware Tools install"
          include_tasks: prepare_vmtools_install.yml

        - name: "Install VMware Tools"
          include_tasks: install_vmtools.yml

        - name: "Verify VMware Tools"
          include_tasks: verify_vmtools.yml

        - name: "Detach or remove VMware Tools ISO"
          include_tasks: detach_vmtools_and_remove.yml

        - name: "Reset base snapshot"
          include_tasks: ../../common/reset_base_snapshot.yml
          vars:
            remove_old_base_snapshot: true
      rescue:
        - name: "Test case failure"
          include_tasks: ../../common/test_rescue.yml
          vars:
            exit_testing_when_fail: true
      always:
        - name: "Get VMware Tools install log file"
          include_tasks: get_vmtools_install_log.yml
          when: get_vmtools_install_log is defined and get_vmtools_install_log
