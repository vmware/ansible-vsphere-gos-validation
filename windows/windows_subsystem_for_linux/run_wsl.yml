# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
# Run WSL
# Parameters:
#    wsl_file_path: the path on Guest OS where the wsl command output messages are put
#    wsl_distribution_name: the WSL distribution name

- include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "wsl --distribution {{ wsl_distribution_name }} --user root"

- include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "wsl --list --verbose --running | Out-File {{ wsl_file_path }}\\wsl_list_running.txt"

- include_tasks: wsl_convert_binary_to_txt.yml
  vars:
    source_path: "{{ wsl_file_path }}\\wsl_list_running.txt"
    file_name: "wsl_list_running.txt"

- name: check wsl running result
  ansible.builtin.shell: "grep running {{ wsl_new_file }}"
  register: cmd_output

- name: "Validate the wsl running result"
  ansible.builtin.assert:
    that:
      - "{{cmd_output.rc==0 }}"
    fail_msg: "No running WSL distribution is found."

# execute command on the distribution
- include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "wsl -d {{ wsl_distribution_name }} ls | Out-File {{ wsl_file_path }}\\wsl_execute_cmd.txt"

- include_tasks: wsl_convert_binary_to_txt.yml
  vars:
    source_path: "{{ wsl_file_path_win }}\\wsl_execute_cmd.txt"
    file_name: "wsl_execute_cmd.txt"

#- name: check wsl command execution result
#  ansible.builtin.shell: "grep {{ wsl_distribution_name }} {{ wsl_new_file }}"
#  register: cmd_output

- name: "Validate the wsl command execution result"
  ansible.builtin.assert:
    that:
      - "{{win_powershell_cmd_output.rc==0 }}"
    fail_msg: "The command failed on WSL distribution"