# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# This task is used for generating ISO file containing OS unattend auto install
# configure file, and/or VMware PVSCSI driver from the downloaded VMware tools
# installation package, and script for configuring Windows for Ansible from this path:
# https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1
#
- name: Set fact of the timestamp suffix of ISO file name
  set_fact:
    iso_timestamp: "{{ lookup('pipe','date +%s') }}"
- name: Set fact of unattend install ISO file name and remote datastore path
  set_fact:
    unattend_install_iso: "{{ guest_id }}-{{ firmware }}-{{ boot_disk_controller }}-{{ iso_timestamp }}.iso"

- name: "Set fact of the unattend install config file template"
  set_fact:
    unattend_install_template: "{{ main_playbook_path }}/autoinstall/{{ unattend_install_conf }}"

- name: "Display the path of unattend install config file template"
  debug: var=unattend_install_template

- name: "Get the Windows product of unattend install config file"
  set_fact:
    unattend_win_product: "{{ unattend_install_conf.strip('/').split('/')[1] }}"

- name: Set fact of the ConfigureRemotingForAnsible.ps1 script URL
  set_fact:
    config_remote_windows: "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
- name: Get configure remote Windows guest for Ansible script
  get_url:
    url: "{{ config_remote_windows }}"
    dest: "{{ main_playbook_path }}/cache/{{ config_remote_windows.split('/')[-1] }}"
    validate_certs: False
    use_proxy: "{{ use_localhost_proxy | default(False) }}"
  environment:
    HTTPS_PROXY: "{{ http_proxy_localhost | default(omit) }}"

- name: Set fact of the new Autounattend.xml path created from template
  set_fact:
    new_unattend_install_conf: "{{ main_playbook_path }}/cache/{{ iso_timestamp }}/Autounattend.xml"

- name: Create a new directory in cache using timestamp
  file:
    path: "{{ main_playbook_path }}/cache/{{ iso_timestamp }}/"
    mode: '0777'
    state: directory

- name: Set Windows user name and encoded password
  set_fact:
    win_username: "{{ 'test' if 'win_server' not in unattend_win_product and vm_username | lower == 'administrator' else vm_username }}"
    win_password_encode: "{{ vm_password | b64encode }}"

- name: Create Windows Autounattend.xml file from template
  template:
    src: "{{ unattend_install_template }}"
    dest: "{{ new_unattend_install_conf }}"
    mode: "0644"

# Add a local account for Windows desktop
- block:
    - name: "Add Windows local account {{ win_username }}"
      xml:
        path: "{{ new_unattend_install_conf }}"
        xpath: "/x:unattend/x:settings/x:component/x:UserAccounts"
        namespaces:
          x: "urn:schemas-microsoft-com:unattend"
        pretty_print: True
        input_type: "xml"
        add_children:
          - |
            <LocalAccounts>
                <LocalAccount>
                    <Password>
                        <PlainText>false</PlainText>
                        <Value>{{ win_password_encode }}</Value>
                    </Password>
                    <DisplayName></DisplayName>
                    <Name>{{ win_username }}</Name>
                    <Group>Administrators</Group>
                </LocalAccount>
            </LocalAccounts>

    - name: "Set local account action to 'add'"
      xml:
        path: "{{ new_unattend_install_conf }}"
        xpath: "/x:unattend/x:settings/x:component/x:UserAccounts/x:LocalAccounts/x:LocalAccount"
        namespaces:
          x: "urn:schemas-microsoft-com:unattend"
          wcm: "http://schemas.microsoft.com/WMIConfig/2002/State"
        attribute: "wcm:action"
        value: "add"

    - name: "Print XML content in pretty format"
      xml:
        path: "{{ new_unattend_install_conf }}"
        pretty_print: True
  when:
    - "'win_server' not in unattend_win_product"
    - win_username | lower != "administrator"

- block:
    - name: Replace product key in Autounattend.xml
      xml:
        path: "{{ new_unattend_install_conf }}"
        xpath: "/x:unattend/x:settings/x:component/x:UserData/x:ProductKey/x:Key"
        namespaces:
          x: "urn:schemas-microsoft-com:unattend"
        value: "{{ windows_product_key }}"
      register: replace_product_key_result
    - name: Display the replacing product key task result
      debug: var=replace_product_key_result
      when: enable_debug is defined and enable_debug
  when: windows_product_key is defined and windows_product_key

- name: "Print the content of Windows unattend install config file"
  debug:
    msg: "{{ lookup('file', new_unattend_install_conf) | split('\n') }}"

- name: Set fact of the file list contained in generated ISO file
  set_fact:
    unattend_install_file_list:
      - "{{ new_unattend_install_conf | default(unattend_install_template) }}"
      - "{{ main_playbook_path }}/cache/{{ config_remote_windows.split('/')[-1] }}"

- block:
    - include_tasks: get_pvscsi_driver.yml
    - name: Add PVSCSI driver files to unattend install file list
      set_fact:
        unattend_install_file_list: "{{ unattend_install_file_list + pvscsi_file_path_list }}"
  when: boot_disk_controller is defined and boot_disk_controller == 'paravirtual'

- include_tasks: ../../common/create_iso.yml
  vars:
    create_iso_src: "{{ unattend_install_file_list }}"
    create_iso_dest: "{{ main_playbook_path }}/cache/{{ unattend_install_iso }}"

- name: Set fact of the dest path of unattend install ISO on ESXi host
  set_fact:
    transferred_unattend_iso: "{{ vm_datastore_path }}/{{ unattend_install_iso }}"
- debug:
    msg: "Will transfer unattend install ISO to: {{ transferred_unattend_iso }}"

- name: Copy generated unattend install ISO file to ESXi host
  include_tasks: ../../common/transfer_file_remote.yml
  vars:
    transfer_file_remote_src: "{{ main_playbook_path }}/cache/{{ unattend_install_iso }}"
    transfer_file_remote_dest: "{{ transferred_unattend_iso }}"
    transfer_file_remote_server: "{{ esxi_hostname }}"

- name: Produce unattended ISO path
  set_fact:
    transferred_unattend_iso: "[{{ datastore }}] {{ unattend_install_iso }}"
