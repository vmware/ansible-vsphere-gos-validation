# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Search and install Windows Updates in all categories,
# and skip optional ones in Windows guest OS.
# Parameter:
#   win_updates_category_names(optional): A list of categories to install updates from.
#       Some possible categories are: Application, Connectors, Critical Updates, Definition Updates, Developer Kits,
#       Feature Packs, Guidance, Security Updates, Service Packs, Tools, Update Rollups, Updates, and Upgrades.
#       Default value is *. The value * will match all categories
#   win_updates_reject_list(optional): A list of update titles or KB numbers that can be used to specify
#       which updates are to be excluded from installation.
# Return:
#   win_updates_log_file: Windows Updates install log file path.
#
- name: "Set fact of Windows Updates install log path"
  ansible.builtin.set_fact:
    win_updates_log_file: "C:\\win_updates_log.txt"

- name: "Get the list of available Windows Updates"
  ansible.windows.win_updates:
    server_selection: "windows_update"
    category_names: "{{ win_updates_category_names | default('*') }}"
    log_path: "{{ win_updates_log_file }}"
    skip_optional: true
    state: "searched"
  delegate_to: "{{ vm_guest_ip }}"
  register: win_updates_list
- name: "Print the list of Windows Updates"
  ansible.builtin.debug: var=win_updates_list

- name: "Install Windows Updates when updates found"
  when:
    - win_updates_list.found_update_count is defined
    - win_updates_list.found_update_count | int != 0
    - win_updates_list.updates is defined
    - win_updates_list.updates | length != 0
  block:
    - name: "Install Windows Updates"
      ansible.windows.win_updates:
        server_selection: "windows_update"
        category_names: "{{ win_updates_category_names | default('*') }}"
        reject_list: "{{ win_updates_reject_list | default('') }}"
        log_path: "{{ win_updates_log_file }}"
        skip_optional: true
        state: "installed"
        reboot: true
        reboot_timeout: 2700
      delegate_to: "{{ vm_guest_ip }}"
      register: win_updates_install_result
    - name: "Print Windows Updates install result"
      debug: var=win_updates_install_result
    - name: "Check updates found are installed"
      ansible.builtin.assert:
        that:
          - win_updates_install_result.found_update_count is defined
          - win_updates_install_result.installed_update_count is defined
          - win_updates_install_result.found_update_count | int == win_updates_install_result.installed_update_count | int
        fail_msg: >-
          Installed update count '{{ win_updates_install_result.installed_update_count | default(0) }}',
          is not match found update count '{{ win_updates_install_result.found_update_count | default(0) }}'.

- name: "No need to install Windows Updates"
  ansible.builtin.debug:
    msg: "Will not execute Windows Updates installation task due to no update found."
  when: >
    (win_updates_list.found_update_count is undefined) or
    (win_updates_list.found_update_count | int == 0)
