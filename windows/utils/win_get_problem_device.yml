# Copyright 2022-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get the list of problem devices with 'Error' status in Windows guest OS
# Change to not use this command "pnputil /enum-devices /problem",
# due to it requires error code and this '/enum-devices' parameter
# avaialble starting and works in Windows 10 v1903.
# Change to use "Get-PnpDevice" command.
#
- name: "Initialize the problem device status"
  ansible.builtin.set_fact:
    gos_has_problem_device: false
    gos_problem_device_list: []

- include_tasks: win_execute_cmd.yml
  vars:
    win_powershell_cmd: "foreach ($device in (Get-PnpDevice | where-object {$_.Status -eq 'Error'})){Write-Host $device.FriendlyName: -NoNewLine;(Get-PnpDeviceProperty -KeyName DEVPKEY_Device_ProblemCode -InstanceId $device.InstanceId).data}"

- name: "Got problem devices"
  block:
    - name: "Set fact of problem device list"
      ansible.builtin.set_fact:
        gos_problem_device_list: "{{ gos_problem_device_list + [{'device_name': item.split(':')[0].strip(), 'problem_code': item.split(':')[1].strip()}] }}"
      when: item | length != 0
      with_items: "{{ win_powershell_cmd_output.stdout_lines }}"
    - name: "Set fact of having problem device"
      ansible.builtin.set_fact:
        gos_has_problem_device: true
      when: gos_problem_device_list | length > 0
  when:
    - win_powershell_cmd_output.stdout_lines is defined
    - win_powershell_cmd_output.stdout_lines | length > 0

- name: "Display the result of getting problem device"
  ansible.builtin.debug:
    msg:
      - "Got problem device with 'Error' status: {{ gos_has_problem_device }}"
      - "'Error' status device list: {{ gos_problem_device_list }}"
